2020-10-21 10:40:34,183 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 10:40:34,183 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 10:40:34,183 - engine_logger:INFO - logger info level msg 
2020-10-21 10:40:34,183 - engine_logger:WARNING - logger warn level msg 
2020-10-21 10:40:34,183 - engine_logger:ERROR - logger error level msg 
2020-10-21 10:40:34,184 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 10:40:34,184 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 10:40:34,184 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-21 10:40:34,187 - engine_logger:INFO - Loaded yaml configs: {'default': {'game': {'grid_size': 90, 'interval': 45, 'start_pattern': 'random'}, 'main_program': {'delay_start': False, 'display': True}}, 'foo_mode': {'game': {'start_pattern': 'gosper'}, 'main_program': {'display': False}}, 'bar_mode': {'game': {'start_pattern': 'glider'}, 'main_program': {'display': False}}}
2020-10-21 10:40:34,187 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): delay_start, False
2020-10-21 10:40:34,187 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): display, True
2020-10-21 10:40:34,187 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 10:41:35,915 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 10:41:35,915 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 10:41:35,915 - engine_logger:INFO - logger info level msg 
2020-10-21 10:41:35,916 - engine_logger:WARNING - logger warn level msg 
2020-10-21 10:41:35,916 - engine_logger:ERROR - logger error level msg 
2020-10-21 10:41:35,916 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 10:41:35,916 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 10:41:35,917 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-21 10:41:35,918 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 10:41:35,918 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 10:42:14,403 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 10:42:14,404 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 10:42:14,404 - engine_logger:INFO - logger info level msg 
2020-10-21 10:42:14,404 - engine_logger:WARNING - logger warn level msg 
2020-10-21 10:42:14,404 - engine_logger:ERROR - logger error level msg 
2020-10-21 10:42:14,404 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 10:42:14,404 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 10:42:14,405 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-21 10:42:14,407 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 10:42:14,407 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 10:42:14,407 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 10:42:58,212 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 10:42:58,212 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 10:42:58,212 - engine_logger:INFO - logger info level msg 
2020-10-21 10:42:58,212 - engine_logger:WARNING - logger warn level msg 
2020-10-21 10:42:58,212 - engine_logger:ERROR - logger error level msg 
2020-10-21 10:42:58,212 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 10:42:58,212 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 10:42:58,213 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='bar')
2020-10-21 10:42:58,215 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 10:42:58,215 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 10:43:20,280 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 10:43:20,280 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 10:43:20,281 - engine_logger:INFO - logger info level msg 
2020-10-21 10:43:20,281 - engine_logger:WARNING - logger warn level msg 
2020-10-21 10:43:20,281 - engine_logger:ERROR - logger error level msg 
2020-10-21 10:43:20,281 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 10:43:20,281 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 10:43:20,282 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='bar_mode')
2020-10-21 10:43:20,283 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 10:43:20,284 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 10:43:20,284 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 10:44:41,734 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 10:44:41,734 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 10:44:41,734 - engine_logger:INFO - logger info level msg 
2020-10-21 10:44:41,735 - engine_logger:WARNING - logger warn level msg 
2020-10-21 10:44:41,735 - engine_logger:ERROR - logger error level msg 
2020-10-21 10:44:41,735 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 10:44:41,735 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 10:44:41,736 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='bar_mode')
2020-10-21 10:44:41,737 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 10:44:41,737 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 10:44:41,738 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 10:44:41,738 - engine_logger:INFO - Attribute foo has been set to bar
2020-10-21 10:44:41,738 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 10:47:10,890 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 10:47:10,890 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 10:47:10,890 - engine_logger:INFO - logger info level msg 
2020-10-21 10:47:10,891 - engine_logger:WARNING - logger warn level msg 
2020-10-21 10:47:10,891 - engine_logger:ERROR - logger error level msg 
2020-10-21 10:47:10,891 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 10:47:10,891 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 10:47:10,891 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 10:47:10,892 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='bar_mode')
2020-10-21 10:47:10,894 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 10:47:10,894 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 10:47:10,894 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 10:47:10,894 - engine_logger:INFO - Attribute foo has been set to bar, overriding default values if any.
2020-10-21 10:47:10,894 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 10:56:15,851 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 10:56:15,851 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 10:56:15,851 - engine_logger:INFO - logger info level msg 
2020-10-21 10:56:15,851 - engine_logger:WARNING - logger warn level msg 
2020-10-21 10:56:15,851 - engine_logger:ERROR - logger error level msg 
2020-10-21 10:56:15,851 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 10:56:15,851 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 10:56:15,851 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 10:56:15,852 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-21 10:56:15,854 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 10:56:15,854 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 10:56:15,854 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 10:56:15,854 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 11:35:57,413 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 11:35:57,414 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 11:35:57,414 - engine_logger:INFO - logger info level msg 
2020-10-21 11:35:57,415 - engine_logger:WARNING - logger warn level msg 
2020-10-21 11:35:57,415 - engine_logger:ERROR - logger error level msg 
2020-10-21 11:35:57,416 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 11:36:01,590 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 11:36:07,963 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 11:36:07,977 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-21 11:36:43,066 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 11:36:43,067 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 11:36:43,069 - engine_logger:INFO - logger info level msg 
2020-10-21 11:36:43,070 - engine_logger:WARNING - logger warn level msg 
2020-10-21 11:36:43,071 - engine_logger:ERROR - logger error level msg 
2020-10-21 11:36:43,071 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 11:36:43,072 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 11:36:43,072 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 11:36:43,079 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-21 11:36:54,785 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 11:37:04,268 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 11:37:21,064 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 11:37:26,388 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 11:37:26,920 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 13:03:58,390 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 13:03:58,390 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 13:03:58,390 - engine_logger:INFO - logger info level msg 
2020-10-21 13:03:58,390 - engine_logger:WARNING - logger warn level msg 
2020-10-21 13:03:58,390 - engine_logger:ERROR - logger error level msg 
2020-10-21 13:03:58,390 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 13:03:58,390 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 13:03:58,390 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 13:03:58,391 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo')
2020-10-21 13:03:58,393 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 13:03:58,393 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 13:03:58,393 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 13:04:15,504 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 13:04:15,504 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 13:04:15,505 - engine_logger:INFO - logger info level msg 
2020-10-21 13:04:15,505 - engine_logger:WARNING - logger warn level msg 
2020-10-21 13:04:15,505 - engine_logger:ERROR - logger error level msg 
2020-10-21 13:04:15,505 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 13:04:15,505 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 13:04:15,505 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 13:04:15,508 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo')
2020-10-21 13:04:42,735 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 13:04:42,736 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 13:04:42,736 - engine_logger:INFO - logger info level msg 
2020-10-21 13:04:42,736 - engine_logger:WARNING - logger warn level msg 
2020-10-21 13:04:42,736 - engine_logger:ERROR - logger error level msg 
2020-10-21 13:04:42,736 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 13:04:42,736 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 13:04:42,736 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 13:04:42,737 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 13:04:42,739 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 13:04:42,739 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 13:04:42,739 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 13:04:42,739 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 13:04:42,739 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 13:04:42,739 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 13:07:32,512 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 13:07:32,513 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 13:07:32,513 - engine_logger:INFO - logger info level msg 
2020-10-21 13:07:32,513 - engine_logger:WARNING - logger warn level msg 
2020-10-21 13:07:32,513 - engine_logger:ERROR - logger error level msg 
2020-10-21 13:07:32,513 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 13:07:32,514 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 13:07:32,514 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 13:07:32,518 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 13:07:32,527 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 13:07:32,527 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 13:07:32,527 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 13:07:37,038 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 13:07:38,351 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 13:07:38,351 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 13:12:04,256 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 13:12:04,257 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 13:12:04,257 - engine_logger:INFO - logger info level msg 
2020-10-21 13:12:04,257 - engine_logger:WARNING - logger warn level msg 
2020-10-21 13:12:04,257 - engine_logger:ERROR - logger error level msg 
2020-10-21 13:12:04,257 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 13:12:04,257 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 13:12:04,257 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 13:12:04,258 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 13:12:04,260 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 13:12:04,260 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 13:12:04,260 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 13:12:04,260 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 13:12:04,260 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 13:12:04,260 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 13:12:45,245 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 13:12:45,245 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 13:12:45,246 - engine_logger:INFO - logger info level msg 
2020-10-21 13:12:45,246 - engine_logger:WARNING - logger warn level msg 
2020-10-21 13:12:45,246 - engine_logger:ERROR - logger error level msg 
2020-10-21 13:12:45,246 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 13:12:45,247 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 13:12:45,247 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 13:12:45,250 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 13:12:45,259 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 13:12:45,260 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 13:12:45,260 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 13:12:45,260 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 13:12:45,260 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 13:12:45,261 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 13:13:09,176 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 13:13:09,176 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 13:13:09,176 - engine_logger:INFO - logger info level msg 
2020-10-21 13:13:09,176 - engine_logger:WARNING - logger warn level msg 
2020-10-21 13:13:09,176 - engine_logger:ERROR - logger error level msg 
2020-10-21 13:13:09,176 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 13:13:09,176 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 13:13:09,176 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 13:13:09,178 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 13:13:09,179 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 13:13:09,179 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 13:13:09,180 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 13:13:09,180 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 13:13:09,180 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 13:13:09,180 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 13:13:58,993 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 13:13:58,994 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 13:13:58,994 - engine_logger:INFO - logger info level msg 
2020-10-21 13:13:58,994 - engine_logger:WARNING - logger warn level msg 
2020-10-21 13:13:58,994 - engine_logger:ERROR - logger error level msg 
2020-10-21 13:13:58,994 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 13:13:58,995 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 13:13:58,995 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 13:13:58,999 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 13:13:59,008 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 13:13:59,009 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 13:13:59,009 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 13:13:59,009 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 13:13:59,009 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 13:13:59,009 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 13:15:32,420 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 13:15:32,421 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 13:15:32,421 - engine_logger:INFO - logger info level msg 
2020-10-21 13:15:32,421 - engine_logger:WARNING - logger warn level msg 
2020-10-21 13:15:32,421 - engine_logger:ERROR - logger error level msg 
2020-10-21 13:15:32,421 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 13:15:32,421 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 13:15:32,421 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 13:15:32,422 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 13:15:32,424 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 13:15:32,424 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 13:15:32,424 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 13:15:32,424 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 13:15:32,424 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 13:15:32,424 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 13:26:18,698 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 13:26:18,698 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 13:26:18,698 - engine_logger:INFO - logger info level msg 
2020-10-21 13:26:18,698 - engine_logger:WARNING - logger warn level msg 
2020-10-21 13:26:18,698 - engine_logger:ERROR - logger error level msg 
2020-10-21 13:26:18,698 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 13:26:18,698 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 13:26:18,698 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 13:26:18,699 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 13:26:18,701 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 13:26:18,701 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 13:26:18,701 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 13:26:18,701 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 13:26:18,701 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 13:26:18,701 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 19:21:39,379 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 19:21:39,379 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 19:21:39,379 - engine_logger:INFO - logger info level msg 
2020-10-21 19:21:39,380 - engine_logger:WARNING - logger warn level msg 
2020-10-21 19:21:39,380 - engine_logger:ERROR - logger error level msg 
2020-10-21 19:21:39,380 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 19:21:39,380 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 19:21:39,380 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 19:21:39,381 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 19:21:39,383 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 19:21:39,383 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 19:21:39,383 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 19:21:39,383 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 19:21:39,383 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 19:21:39,383 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 19:22:38,671 - engine_logger:INFO - 
2020-10-21 19:22:55,150 - engine_logger:INFO - 
2020-10-21 19:23:04,992 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 19:23:04,992 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 19:23:04,992 - engine_logger:INFO - logger info level msg 
2020-10-21 19:23:04,992 - engine_logger:WARNING - logger warn level msg 
2020-10-21 19:23:04,992 - engine_logger:ERROR - logger error level msg 
2020-10-21 19:23:04,992 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 19:23:04,993 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 19:23:04,993 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 19:23:04,994 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 19:23:04,995 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 19:23:04,995 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 19:23:04,996 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 19:23:04,996 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 19:23:04,996 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 19:23:04,996 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 19:23:06,511 - engine_logger:INFO - 
2020-10-21 19:23:09,714 - engine_logger:INFO - got data from keras: ((array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), array([5, 0, 4, ..., 5, 6, 8], dtype=uint8)), (array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)))
2020-10-21 19:23:09,829 - engine_logger:INFO - Model builts: None
2020-10-21 19:23:30,713 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 19:23:30,713 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 19:23:30,714 - engine_logger:INFO - logger info level msg 
2020-10-21 19:23:30,714 - engine_logger:WARNING - logger warn level msg 
2020-10-21 19:23:30,714 - engine_logger:ERROR - logger error level msg 
2020-10-21 19:23:30,714 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 19:23:30,715 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 19:23:30,715 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 19:23:30,718 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 19:23:30,726 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 19:23:30,726 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 19:23:30,726 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 19:23:30,726 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 19:23:30,726 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 19:23:30,726 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 19:23:33,637 - engine_logger:INFO - 
2020-10-21 19:23:38,770 - engine_logger:INFO - got data from keras: ((array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), array([5, 0, 4, ..., 5, 6, 8], dtype=uint8)), (array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)))
2020-10-21 19:23:39,146 - engine_logger:INFO - Model builts: None
2020-10-21 19:23:46,661 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 19:23:46,661 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 19:23:46,661 - engine_logger:INFO - logger info level msg 
2020-10-21 19:23:46,661 - engine_logger:WARNING - logger warn level msg 
2020-10-21 19:23:46,662 - engine_logger:ERROR - logger error level msg 
2020-10-21 19:23:46,662 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 19:23:46,662 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 19:23:46,662 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 19:23:46,665 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 19:23:46,673 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 19:23:46,673 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 19:23:46,673 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 19:23:46,674 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 19:23:46,674 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 19:23:46,674 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 19:23:47,796 - engine_logger:INFO - 
2020-10-21 19:23:48,132 - engine_logger:INFO - got data from keras: ((array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), array([5, 0, 4, ..., 5, 6, 8], dtype=uint8)), (array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)))
2020-10-21 19:23:48,358 - engine_logger:INFO - Model builts: None
2020-10-21 19:26:22,494 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 19:26:22,495 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 19:26:22,495 - engine_logger:INFO - logger info level msg 
2020-10-21 19:26:22,495 - engine_logger:WARNING - logger warn level msg 
2020-10-21 19:26:22,495 - engine_logger:ERROR - logger error level msg 
2020-10-21 19:26:22,496 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 19:26:22,496 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 19:26:22,496 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 19:26:22,500 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 19:26:22,509 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 19:26:22,509 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 19:26:22,509 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 19:26:22,510 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 19:26:22,510 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 19:26:22,510 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 19:26:23,592 - engine_logger:INFO - 
2020-10-21 19:40:13,705 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 19:40:13,705 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 19:40:13,705 - engine_logger:INFO - logger info level msg 
2020-10-21 19:40:13,705 - engine_logger:WARNING - logger warn level msg 
2020-10-21 19:40:13,705 - engine_logger:ERROR - logger error level msg 
2020-10-21 19:40:13,705 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 19:40:13,705 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 19:40:13,705 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 19:40:13,706 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 19:40:13,708 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 19:40:13,708 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 19:40:13,708 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 19:40:13,709 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 19:40:13,709 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 19:40:13,709 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 19:40:20,651 - engine_logger:INFO - 
2020-10-21 19:40:20,946 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-21 19:40:21,060 - engine_logger:INFO - Model builts: None
2020-10-21 19:40:22,453 - engine_logger:INFO - 
2020-10-21 19:40:22,741 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-21 19:40:22,798 - engine_logger:INFO - Model builts: None
2020-10-21 19:41:26,445 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 19:41:26,445 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 19:41:26,445 - engine_logger:INFO - logger info level msg 
2020-10-21 19:41:26,445 - engine_logger:WARNING - logger warn level msg 
2020-10-21 19:41:26,445 - engine_logger:ERROR - logger error level msg 
2020-10-21 19:41:26,445 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 19:41:26,445 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 19:41:26,445 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 19:41:26,446 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 19:41:26,448 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 19:41:26,448 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 19:41:26,448 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 19:41:26,448 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 19:41:26,448 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 19:41:26,448 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 19:41:37,388 - engine_logger:INFO - 
2020-10-21 19:41:37,680 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-21 19:41:37,789 - engine_logger:INFO - Model builts: None
2020-10-21 22:06:46,275 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 22:06:46,275 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 22:06:46,275 - engine_logger:INFO - logger info level msg 
2020-10-21 22:06:46,276 - engine_logger:WARNING - logger warn level msg 
2020-10-21 22:06:46,276 - engine_logger:ERROR - logger error level msg 
2020-10-21 22:06:46,276 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 22:06:46,276 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 22:06:46,276 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 22:06:46,280 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 22:06:46,290 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 22:06:46,290 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 22:06:46,290 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 22:06:46,291 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 22:06:46,291 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 22:06:46,291 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 22:06:49,844 - engine_logger:INFO - 
2020-10-21 22:09:34,049 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 22:09:34,049 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 22:09:34,049 - engine_logger:INFO - logger info level msg 
2020-10-21 22:09:34,049 - engine_logger:WARNING - logger warn level msg 
2020-10-21 22:09:34,049 - engine_logger:ERROR - logger error level msg 
2020-10-21 22:09:34,049 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 22:09:34,049 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 22:09:34,049 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 22:09:34,050 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 22:09:34,052 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 22:09:34,052 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 22:09:34,052 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 22:09:34,052 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 22:09:34,052 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 22:09:34,053 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 22:09:40,281 - engine_logger:INFO - 
2020-10-21 22:09:40,575 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-21 22:12:08,365 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 22:12:08,365 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 22:12:08,365 - engine_logger:INFO - logger info level msg 
2020-10-21 22:12:08,365 - engine_logger:WARNING - logger warn level msg 
2020-10-21 22:12:08,365 - engine_logger:ERROR - logger error level msg 
2020-10-21 22:12:08,365 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 22:12:08,365 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 22:12:08,366 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 22:12:08,367 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 22:12:08,368 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 22:12:08,369 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 22:12:08,369 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 22:12:08,369 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 22:12:08,369 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 22:12:08,369 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 22:12:10,527 - engine_logger:INFO - 
2020-10-21 22:12:10,820 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-21 22:12:10,930 - engine_logger:INFO - Model builts: None
2020-10-21 22:13:29,060 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 22:13:29,060 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 22:13:29,060 - engine_logger:INFO - logger info level msg 
2020-10-21 22:13:29,060 - engine_logger:WARNING - logger warn level msg 
2020-10-21 22:13:29,060 - engine_logger:ERROR - logger error level msg 
2020-10-21 22:13:29,060 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 22:13:29,060 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 22:13:29,061 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 22:13:29,062 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 22:13:29,063 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 22:13:29,064 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 22:13:29,064 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 22:13:29,064 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 22:13:29,064 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 22:13:29,064 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 22:13:33,707 - engine_logger:INFO - 
2020-10-21 22:13:34,004 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-21 22:13:34,111 - engine_logger:INFO - Model builts: None
2020-10-21 22:16:37,646 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 22:16:37,646 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 22:16:37,647 - engine_logger:INFO - logger info level msg 
2020-10-21 22:16:37,647 - engine_logger:WARNING - logger warn level msg 
2020-10-21 22:16:37,647 - engine_logger:ERROR - logger error level msg 
2020-10-21 22:16:37,647 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 22:16:37,647 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 22:16:37,647 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 22:16:37,648 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 22:16:37,650 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 22:16:37,650 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 22:16:37,650 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 22:16:37,650 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 22:16:37,650 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 22:16:37,650 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 22:16:38,227 - engine_logger:INFO - 
2020-10-21 22:16:38,521 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-21 22:16:38,631 - engine_logger:INFO - Model builts: None
2020-10-21 22:17:12,682 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 22:17:12,682 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 22:17:12,682 - engine_logger:INFO - logger info level msg 
2020-10-21 22:17:12,682 - engine_logger:WARNING - logger warn level msg 
2020-10-21 22:17:12,682 - engine_logger:ERROR - logger error level msg 
2020-10-21 22:17:12,682 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 22:17:12,682 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 22:17:12,682 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 22:17:12,683 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 22:17:12,685 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 22:17:12,685 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 22:17:12,685 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 22:17:12,685 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 22:17:12,686 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 22:17:12,686 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 22:17:14,384 - engine_logger:INFO - 
2020-10-21 22:17:14,673 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-21 22:17:14,783 - engine_logger:INFO - Model builts: 
2020-10-21 22:23:32,775 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 22:23:32,775 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 22:23:32,775 - engine_logger:INFO - logger info level msg 
2020-10-21 22:23:32,776 - engine_logger:WARNING - logger warn level msg 
2020-10-21 22:23:32,776 - engine_logger:ERROR - logger error level msg 
2020-10-21 22:23:32,776 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 22:23:32,776 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 22:23:32,776 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 22:23:32,777 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 22:23:32,779 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 22:23:32,779 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 22:23:32,779 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 22:23:32,779 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 22:23:32,779 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 22:23:32,779 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 22:23:36,877 - engine_logger:INFO - 
2020-10-21 22:23:37,170 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-21 22:23:37,282 - engine_logger:INFO - Model builts: 
2020-10-21 22:25:32,478 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 22:25:32,478 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 22:25:32,478 - engine_logger:INFO - logger info level msg 
2020-10-21 22:25:32,478 - engine_logger:WARNING - logger warn level msg 
2020-10-21 22:25:32,478 - engine_logger:ERROR - logger error level msg 
2020-10-21 22:25:32,478 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 22:25:32,478 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 22:25:32,478 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 22:25:32,479 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 22:25:32,481 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 22:25:32,481 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 22:25:32,481 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 22:25:32,482 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 22:25:32,482 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 22:25:32,482 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 22:25:33,643 - engine_logger:INFO - 
2020-10-21 22:25:33,937 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-21 22:25:34,047 - engine_logger:INFO - Model builts: 
2020-10-21 22:25:59,673 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 22:25:59,673 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 22:25:59,673 - engine_logger:INFO - logger info level msg 
2020-10-21 22:25:59,674 - engine_logger:WARNING - logger warn level msg 
2020-10-21 22:25:59,674 - engine_logger:ERROR - logger error level msg 
2020-10-21 22:25:59,674 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 22:25:59,674 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 22:25:59,675 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 22:25:59,678 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 22:25:59,687 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 22:25:59,688 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 22:25:59,688 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 22:25:59,688 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 22:25:59,688 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 22:25:59,688 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 22:25:59,997 - engine_logger:INFO - 
2020-10-21 22:26:10,831 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 22:26:10,831 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 22:26:10,831 - engine_logger:INFO - logger info level msg 
2020-10-21 22:26:10,831 - engine_logger:WARNING - logger warn level msg 
2020-10-21 22:26:10,832 - engine_logger:ERROR - logger error level msg 
2020-10-21 22:26:10,832 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 22:26:10,832 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 22:26:10,832 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 22:26:10,835 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 22:26:10,843 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 22:26:10,843 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 22:26:10,844 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 22:26:10,844 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 22:26:10,844 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 22:26:10,844 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 22:26:11,801 - engine_logger:INFO - 
2020-10-21 22:26:12,140 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-21 22:26:12,367 - engine_logger:INFO - Model builts: 
2020-10-21 22:26:35,375 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 22:26:35,376 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 22:26:35,376 - engine_logger:INFO - logger info level msg 
2020-10-21 22:26:35,376 - engine_logger:WARNING - logger warn level msg 
2020-10-21 22:26:35,376 - engine_logger:ERROR - logger error level msg 
2020-10-21 22:26:35,376 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 22:26:35,376 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 22:26:35,376 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 22:26:35,377 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 22:26:35,379 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 22:26:35,379 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 22:26:35,379 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 22:26:35,379 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 22:26:35,379 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 22:26:35,379 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 22:26:36,377 - engine_logger:INFO - 
2020-10-21 22:26:36,670 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-21 22:26:36,778 - engine_logger:INFO - Model builts: 
2020-10-21 22:29:20,541 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 22:29:20,541 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 22:29:20,541 - engine_logger:INFO - logger info level msg 
2020-10-21 22:29:20,541 - engine_logger:WARNING - logger warn level msg 
2020-10-21 22:29:20,541 - engine_logger:ERROR - logger error level msg 
2020-10-21 22:29:20,541 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 22:29:20,541 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 22:29:20,541 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 22:29:20,542 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 22:29:20,544 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 22:29:20,544 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 22:29:20,544 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 22:29:20,544 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 22:29:20,544 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 22:29:20,544 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 22:29:23,922 - engine_logger:INFO - 
2020-10-21 22:29:24,218 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-21 22:29:24,329 - engine_logger:INFO - Model builts: 
2020-10-21 22:30:06,834 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 22:30:06,834 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 22:30:06,835 - engine_logger:INFO - logger info level msg 
2020-10-21 22:30:06,835 - engine_logger:WARNING - logger warn level msg 
2020-10-21 22:30:06,835 - engine_logger:ERROR - logger error level msg 
2020-10-21 22:30:06,835 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 22:30:06,835 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 22:30:06,835 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 22:30:06,836 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 22:30:06,838 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 22:30:06,838 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 22:30:06,838 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 22:30:06,838 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 22:30:06,838 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 22:30:06,838 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 22:30:08,516 - engine_logger:INFO - 
2020-10-21 22:30:08,810 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-21 22:30:08,923 - engine_logger:INFO - Model builts: 
2020-10-21 22:30:23,135 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 22:30:23,135 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 22:30:23,135 - engine_logger:INFO - logger info level msg 
2020-10-21 22:30:23,135 - engine_logger:WARNING - logger warn level msg 
2020-10-21 22:30:23,135 - engine_logger:ERROR - logger error level msg 
2020-10-21 22:30:23,135 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 22:30:23,135 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 22:30:23,135 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 22:30:23,136 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 22:30:23,138 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 22:30:23,138 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 22:30:23,138 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 22:30:23,138 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 22:30:23,138 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 22:30:23,138 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 22:30:25,255 - engine_logger:INFO - 
2020-10-21 22:30:25,544 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-21 22:32:29,777 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 22:32:29,777 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 22:32:29,777 - engine_logger:INFO - logger info level msg 
2020-10-21 22:32:29,777 - engine_logger:WARNING - logger warn level msg 
2020-10-21 22:32:29,778 - engine_logger:ERROR - logger error level msg 
2020-10-21 22:32:29,778 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 22:32:29,778 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 22:32:29,778 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 22:32:29,779 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 22:32:29,781 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 22:32:29,781 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 22:32:29,781 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 22:32:29,781 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 22:32:29,781 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 22:32:29,781 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 22:32:30,395 - engine_logger:INFO - 
2020-10-21 22:32:30,692 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-21 22:32:30,807 - engine_logger:INFO - Model builts: 
2020-10-21 22:47:19,568 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 22:47:19,568 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 22:47:19,568 - engine_logger:INFO - logger info level msg 
2020-10-21 22:47:19,569 - engine_logger:WARNING - logger warn level msg 
2020-10-21 22:47:19,569 - engine_logger:ERROR - logger error level msg 
2020-10-21 22:47:19,569 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 22:47:19,569 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 22:47:19,569 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 22:47:19,570 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 22:47:19,572 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 22:47:19,572 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 22:47:19,572 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 22:47:19,572 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 22:47:19,572 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 22:47:19,572 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 22:47:20,768 - engine_logger:INFO - 
2020-10-21 22:47:21,059 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-21 22:48:08,676 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 22:48:08,677 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 22:48:08,677 - engine_logger:INFO - logger info level msg 
2020-10-21 22:48:08,677 - engine_logger:WARNING - logger warn level msg 
2020-10-21 22:48:08,677 - engine_logger:ERROR - logger error level msg 
2020-10-21 22:48:08,677 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 22:48:08,678 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 22:48:08,678 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 22:48:08,682 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 22:48:08,691 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 22:48:08,691 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 22:48:08,691 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 22:48:08,691 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 22:48:08,692 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 22:48:08,692 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 22:49:02,283 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 22:49:02,283 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 22:49:02,283 - engine_logger:INFO - logger info level msg 
2020-10-21 22:49:02,283 - engine_logger:WARNING - logger warn level msg 
2020-10-21 22:49:02,283 - engine_logger:ERROR - logger error level msg 
2020-10-21 22:49:02,283 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 22:49:02,283 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 22:49:02,284 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 22:49:02,285 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 22:49:02,286 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 22:49:02,286 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 22:49:02,286 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 22:49:02,287 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 22:49:02,287 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 22:49:02,287 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 22:49:02,576 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-21 22:49:59,423 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 22:49:59,423 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 22:49:59,424 - engine_logger:INFO - logger info level msg 
2020-10-21 22:49:59,424 - engine_logger:WARNING - logger warn level msg 
2020-10-21 22:49:59,424 - engine_logger:ERROR - logger error level msg 
2020-10-21 22:49:59,424 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 22:49:59,425 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 22:49:59,425 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 22:49:59,428 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 22:49:59,438 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 22:49:59,438 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 22:49:59,438 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 22:49:59,438 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 22:49:59,439 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 22:49:59,439 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 22:49:59,772 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-21 22:50:41,686 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 22:50:41,687 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 22:50:41,687 - engine_logger:INFO - logger info level msg 
2020-10-21 22:50:41,687 - engine_logger:WARNING - logger warn level msg 
2020-10-21 22:50:41,687 - engine_logger:ERROR - logger error level msg 
2020-10-21 22:50:41,688 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 22:50:41,688 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 22:50:41,688 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 22:50:41,692 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 22:50:41,701 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 22:50:41,701 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 22:50:41,701 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 22:50:41,702 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 22:50:41,702 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 22:50:41,702 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 22:50:42,032 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-21 22:51:36,809 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 22:51:36,810 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 22:51:36,810 - engine_logger:INFO - logger info level msg 
2020-10-21 22:51:36,810 - engine_logger:WARNING - logger warn level msg 
2020-10-21 22:51:36,810 - engine_logger:ERROR - logger error level msg 
2020-10-21 22:51:36,811 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 22:51:36,811 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 22:51:36,811 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 22:51:36,815 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 22:51:36,824 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 22:51:36,824 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 22:51:36,825 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 22:51:36,825 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 22:51:36,825 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 22:51:36,825 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 22:51:37,164 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-21 22:52:19,623 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 22:52:19,623 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 22:52:19,623 - engine_logger:INFO - logger info level msg 
2020-10-21 22:52:19,623 - engine_logger:WARNING - logger warn level msg 
2020-10-21 22:52:19,623 - engine_logger:ERROR - logger error level msg 
2020-10-21 22:52:19,623 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 22:52:19,623 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 22:52:19,623 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 22:52:19,624 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 22:52:19,626 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 22:52:19,626 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 22:52:19,626 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 22:52:19,626 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 22:52:19,626 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 22:52:19,626 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 22:52:19,916 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-21 22:53:16,233 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 22:53:16,233 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 22:53:16,233 - engine_logger:INFO - logger info level msg 
2020-10-21 22:53:16,234 - engine_logger:WARNING - logger warn level msg 
2020-10-21 22:53:16,234 - engine_logger:ERROR - logger error level msg 
2020-10-21 22:53:16,234 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 22:53:16,234 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 22:53:16,234 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 22:53:16,235 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 22:53:16,237 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 22:53:16,237 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 22:53:16,237 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 22:53:16,237 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 22:53:16,237 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 22:53:16,237 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 22:53:16,526 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-21 22:57:23,499 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 22:57:23,500 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 22:57:23,500 - engine_logger:INFO - logger info level msg 
2020-10-21 22:57:23,500 - engine_logger:WARNING - logger warn level msg 
2020-10-21 22:57:23,500 - engine_logger:ERROR - logger error level msg 
2020-10-21 22:57:23,500 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 22:57:23,500 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 22:57:23,500 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 22:57:23,501 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 22:57:23,503 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 22:57:23,503 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 22:57:23,503 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 22:57:23,503 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 22:57:23,503 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 22:57:23,503 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 22:57:23,795 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-21 22:57:45,228 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 22:57:45,228 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 22:57:45,228 - engine_logger:INFO - logger info level msg 
2020-10-21 22:57:45,228 - engine_logger:WARNING - logger warn level msg 
2020-10-21 22:57:45,228 - engine_logger:ERROR - logger error level msg 
2020-10-21 22:57:45,228 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 22:57:45,228 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 22:57:45,228 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 22:57:45,229 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 22:57:45,231 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 22:57:45,231 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 22:57:45,231 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 22:57:45,231 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 22:57:45,231 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 22:57:45,231 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 22:57:45,520 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-21 22:58:23,290 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 22:58:23,290 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 22:58:23,290 - engine_logger:INFO - logger info level msg 
2020-10-21 22:58:23,290 - engine_logger:WARNING - logger warn level msg 
2020-10-21 22:58:23,290 - engine_logger:ERROR - logger error level msg 
2020-10-21 22:58:23,291 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 22:58:23,291 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 22:58:23,291 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 22:58:23,292 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 22:58:23,294 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 22:58:23,294 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 22:58:23,294 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 22:58:23,294 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 22:58:23,294 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 22:58:23,294 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 22:58:23,584 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-21 23:03:36,033 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 23:03:36,034 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 23:03:36,034 - engine_logger:INFO - logger info level msg 
2020-10-21 23:03:36,034 - engine_logger:WARNING - logger warn level msg 
2020-10-21 23:03:36,034 - engine_logger:ERROR - logger error level msg 
2020-10-21 23:03:36,034 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 23:03:36,034 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 23:03:36,034 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 23:03:36,035 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 23:03:36,037 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 23:03:36,037 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 23:03:36,037 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 23:03:36,037 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 23:03:36,037 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 23:03:36,037 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 23:03:36,328 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-21 23:14:45,611 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 23:14:45,611 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 23:14:45,611 - engine_logger:INFO - logger info level msg 
2020-10-21 23:14:45,611 - engine_logger:WARNING - logger warn level msg 
2020-10-21 23:14:45,611 - engine_logger:ERROR - logger error level msg 
2020-10-21 23:14:45,611 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 23:14:45,611 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 23:14:45,611 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 23:14:45,612 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 23:14:45,614 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 23:14:45,614 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 23:14:45,614 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 23:14:45,614 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 23:14:45,614 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 23:14:45,614 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 23:14:45,905 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-21 23:16:33,800 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 23:16:33,801 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 23:16:33,801 - engine_logger:INFO - logger info level msg 
2020-10-21 23:16:33,801 - engine_logger:WARNING - logger warn level msg 
2020-10-21 23:16:33,801 - engine_logger:ERROR - logger error level msg 
2020-10-21 23:16:33,802 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 23:16:33,802 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 23:16:33,802 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 23:16:33,806 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 23:16:33,815 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 23:16:33,815 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 23:16:33,815 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 23:16:33,816 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 23:16:33,816 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 23:16:33,816 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 23:16:34,157 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-21 23:17:32,182 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 23:17:32,182 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 23:17:32,182 - engine_logger:INFO - logger info level msg 
2020-10-21 23:17:32,182 - engine_logger:WARNING - logger warn level msg 
2020-10-21 23:17:32,182 - engine_logger:ERROR - logger error level msg 
2020-10-21 23:17:32,182 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 23:17:32,182 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 23:17:32,182 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 23:17:32,183 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 23:17:32,185 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 23:17:32,185 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 23:17:32,185 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 23:17:32,185 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 23:17:32,185 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 23:17:32,186 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 23:17:32,476 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-21 23:17:58,220 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 23:17:58,221 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 23:17:58,221 - engine_logger:INFO - logger info level msg 
2020-10-21 23:17:58,221 - engine_logger:WARNING - logger warn level msg 
2020-10-21 23:17:58,221 - engine_logger:ERROR - logger error level msg 
2020-10-21 23:17:58,222 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 23:17:58,222 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 23:17:58,222 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 23:17:58,226 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 23:17:58,235 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 23:17:58,235 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 23:17:58,235 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 23:17:58,235 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 23:17:58,236 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 23:17:58,236 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 23:17:58,565 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-21 23:18:27,410 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 23:18:27,410 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 23:18:27,410 - engine_logger:INFO - logger info level msg 
2020-10-21 23:18:27,410 - engine_logger:WARNING - logger warn level msg 
2020-10-21 23:18:27,410 - engine_logger:ERROR - logger error level msg 
2020-10-21 23:18:27,410 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 23:18:27,411 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 23:18:27,411 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 23:18:27,412 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 23:18:27,413 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 23:18:27,413 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 23:18:27,414 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 23:18:27,414 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 23:18:27,414 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 23:18:27,414 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 23:18:27,706 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-21 23:18:45,329 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 23:18:45,329 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 23:18:45,329 - engine_logger:INFO - logger info level msg 
2020-10-21 23:18:45,329 - engine_logger:WARNING - logger warn level msg 
2020-10-21 23:18:45,329 - engine_logger:ERROR - logger error level msg 
2020-10-21 23:18:45,329 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 23:18:45,329 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 23:18:45,329 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 23:18:45,330 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 23:18:45,332 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 23:18:45,332 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 23:18:45,332 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 23:18:45,332 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 23:18:45,332 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 23:18:45,332 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 23:18:45,626 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-21 23:24:39,683 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 23:24:39,683 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 23:24:39,683 - engine_logger:INFO - logger info level msg 
2020-10-21 23:24:39,683 - engine_logger:WARNING - logger warn level msg 
2020-10-21 23:24:39,683 - engine_logger:ERROR - logger error level msg 
2020-10-21 23:24:39,683 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 23:24:39,683 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 23:24:39,683 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 23:24:39,684 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 23:24:39,686 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 23:24:39,686 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 23:24:39,686 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 23:24:39,687 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 23:24:39,687 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 23:24:39,687 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 23:24:39,975 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-21 23:25:25,597 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 23:25:25,597 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 23:25:25,597 - engine_logger:INFO - logger info level msg 
2020-10-21 23:25:25,597 - engine_logger:WARNING - logger warn level msg 
2020-10-21 23:25:25,597 - engine_logger:ERROR - logger error level msg 
2020-10-21 23:25:25,597 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 23:25:25,597 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 23:25:25,597 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 23:25:25,598 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 23:25:25,600 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 23:25:25,600 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 23:25:25,600 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 23:25:25,600 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 23:25:25,600 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 23:25:25,600 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 23:25:25,889 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-21 23:25:26,001 - engine_logger:INFO - Model builts: 
2020-10-21 23:25:57,171 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 23:25:57,171 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 23:25:57,171 - engine_logger:INFO - logger info level msg 
2020-10-21 23:25:57,171 - engine_logger:WARNING - logger warn level msg 
2020-10-21 23:25:57,171 - engine_logger:ERROR - logger error level msg 
2020-10-21 23:25:57,171 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 23:25:57,171 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 23:25:57,171 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 23:25:57,172 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 23:25:57,174 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 23:25:57,174 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 23:25:57,174 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 23:25:57,174 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 23:25:57,174 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 23:25:57,174 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 23:25:57,464 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-21 23:25:57,572 - engine_logger:INFO - Model builts: 
2020-10-21 23:28:28,230 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 23:28:28,230 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 23:28:28,230 - engine_logger:INFO - logger info level msg 
2020-10-21 23:28:28,230 - engine_logger:WARNING - logger warn level msg 
2020-10-21 23:28:28,230 - engine_logger:ERROR - logger error level msg 
2020-10-21 23:28:28,230 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 23:28:28,230 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 23:28:28,230 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 23:28:28,231 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 23:28:28,233 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 23:28:28,233 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 23:28:28,233 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 23:28:28,234 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 23:28:28,234 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 23:28:28,234 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 23:28:28,524 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-21 23:28:40,188 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-21 23:28:40,188 - engine_logger:DEBUG - logger debug level msg 
2020-10-21 23:28:40,188 - engine_logger:INFO - logger info level msg 
2020-10-21 23:28:40,189 - engine_logger:WARNING - logger warn level msg 
2020-10-21 23:28:40,189 - engine_logger:ERROR - logger error level msg 
2020-10-21 23:28:40,189 - engine_logger:CRITICAL - logger critical level msg 
2020-10-21 23:28:40,189 - engine_logger:INFO - Parsing args in ArgParser
2020-10-21 23:28:40,189 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-21 23:28:40,190 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-21 23:28:40,192 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-21 23:28:40,192 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-21 23:28:40,192 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-21 23:28:40,192 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-21 23:28:40,192 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-21 23:28:40,192 - engine_logger:INFO - Done init in MainProgram.
2020-10-21 23:28:40,481 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-21 23:28:40,586 - engine_logger:INFO - Model builts: 
2020-10-22 12:00:28,608 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 12:00:28,608 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 12:00:28,608 - engine_logger:INFO - logger info level msg 
2020-10-22 12:00:28,608 - engine_logger:WARNING - logger warn level msg 
2020-10-22 12:00:28,608 - engine_logger:ERROR - logger error level msg 
2020-10-22 12:00:28,608 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 12:00:28,608 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 12:00:28,608 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 12:00:28,609 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-22 12:00:28,610 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 12:00:28,610 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-22 12:00:28,610 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 12:00:28,610 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 12:00:28,610 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 12:00:28,834 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 12:00:53,928 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 12:00:53,928 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 12:00:53,928 - engine_logger:INFO - logger info level msg 
2020-10-22 12:00:53,928 - engine_logger:WARNING - logger warn level msg 
2020-10-22 12:00:53,928 - engine_logger:ERROR - logger error level msg 
2020-10-22 12:00:53,928 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 12:00:53,929 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 12:00:53,929 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 12:00:53,929 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-22 12:00:53,931 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 12:00:53,931 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-22 12:00:53,931 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 12:00:53,931 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 12:00:53,931 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 12:00:54,158 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 12:01:13,971 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 12:01:13,972 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 12:01:13,972 - engine_logger:INFO - logger info level msg 
2020-10-22 12:01:13,972 - engine_logger:WARNING - logger warn level msg 
2020-10-22 12:01:13,972 - engine_logger:ERROR - logger error level msg 
2020-10-22 12:01:13,972 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 12:01:13,972 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 12:01:13,972 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 12:01:13,973 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-22 12:01:13,974 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 12:01:13,974 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-22 12:01:13,974 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 12:01:13,974 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 12:01:13,974 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 12:01:14,199 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 12:03:57,029 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 12:03:57,029 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 12:03:57,029 - engine_logger:INFO - logger info level msg 
2020-10-22 12:03:57,030 - engine_logger:WARNING - logger warn level msg 
2020-10-22 12:03:57,030 - engine_logger:ERROR - logger error level msg 
2020-10-22 12:03:57,030 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 12:03:57,030 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 12:03:57,030 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 12:03:57,030 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-22 12:03:57,032 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 12:03:57,032 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-22 12:03:57,032 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 12:03:57,032 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 12:03:57,032 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 12:03:57,262 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 12:05:03,045 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 12:05:03,045 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 12:05:03,046 - engine_logger:INFO - logger info level msg 
2020-10-22 12:05:03,046 - engine_logger:WARNING - logger warn level msg 
2020-10-22 12:05:03,046 - engine_logger:ERROR - logger error level msg 
2020-10-22 12:05:03,046 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 12:05:03,046 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 12:05:03,046 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 12:05:03,046 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-22 12:05:03,048 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 12:05:03,048 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-22 12:05:03,048 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 12:05:03,048 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 12:05:03,048 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 12:05:03,275 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 12:05:14,994 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 12:05:14,994 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 12:05:14,994 - engine_logger:INFO - logger info level msg 
2020-10-22 12:05:14,994 - engine_logger:WARNING - logger warn level msg 
2020-10-22 12:05:14,994 - engine_logger:ERROR - logger error level msg 
2020-10-22 12:05:14,994 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 12:05:14,994 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 12:05:14,994 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 12:05:14,995 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-22 12:05:14,996 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 12:05:14,997 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-22 12:05:14,997 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 12:05:14,997 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 12:05:14,997 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 12:05:15,225 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 12:05:38,169 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 12:05:38,169 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 12:05:38,170 - engine_logger:INFO - logger info level msg 
2020-10-22 12:05:38,170 - engine_logger:WARNING - logger warn level msg 
2020-10-22 12:05:38,170 - engine_logger:ERROR - logger error level msg 
2020-10-22 12:05:38,170 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 12:05:38,170 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 12:05:38,170 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 12:05:38,172 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-22 12:05:38,177 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 12:05:38,177 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-22 12:05:38,177 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 12:05:38,177 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 12:05:38,178 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 12:05:38,472 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 12:06:51,017 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 12:06:51,017 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 12:06:51,017 - engine_logger:INFO - logger info level msg 
2020-10-22 12:06:51,017 - engine_logger:WARNING - logger warn level msg 
2020-10-22 12:06:51,018 - engine_logger:ERROR - logger error level msg 
2020-10-22 12:06:51,018 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 12:06:51,018 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 12:06:51,018 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 12:06:51,020 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-22 12:06:51,025 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 12:06:51,025 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-22 12:06:51,025 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 12:06:51,025 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 12:06:51,025 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 12:06:51,265 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 12:07:10,845 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 12:07:10,845 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 12:07:10,845 - engine_logger:INFO - logger info level msg 
2020-10-22 12:07:10,845 - engine_logger:WARNING - logger warn level msg 
2020-10-22 12:07:10,845 - engine_logger:ERROR - logger error level msg 
2020-10-22 12:07:10,845 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 12:07:10,845 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 12:07:10,845 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 12:07:10,846 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-22 12:07:10,848 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 12:07:10,848 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-22 12:07:10,848 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 12:07:10,848 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 12:07:10,848 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 12:07:11,078 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 12:07:45,881 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 12:07:45,881 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 12:07:45,881 - engine_logger:INFO - logger info level msg 
2020-10-22 12:07:45,882 - engine_logger:WARNING - logger warn level msg 
2020-10-22 12:07:45,882 - engine_logger:ERROR - logger error level msg 
2020-10-22 12:07:45,882 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 12:07:45,882 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 12:07:45,882 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 12:07:45,882 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-22 12:07:45,884 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 12:07:45,884 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-22 12:07:45,884 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 12:07:45,884 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 12:07:45,884 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 12:07:46,110 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 12:08:28,192 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 12:08:28,192 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 12:08:28,192 - engine_logger:INFO - logger info level msg 
2020-10-22 12:08:28,192 - engine_logger:WARNING - logger warn level msg 
2020-10-22 12:08:28,192 - engine_logger:ERROR - logger error level msg 
2020-10-22 12:08:28,192 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 12:08:28,192 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 12:08:28,192 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 12:08:28,193 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-22 12:08:28,194 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 12:08:28,195 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-22 12:08:28,195 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 12:08:28,195 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 12:08:28,195 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 12:08:28,420 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 12:11:00,605 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 12:11:00,606 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 12:11:00,606 - engine_logger:INFO - logger info level msg 
2020-10-22 12:11:00,606 - engine_logger:WARNING - logger warn level msg 
2020-10-22 12:11:00,606 - engine_logger:ERROR - logger error level msg 
2020-10-22 12:11:00,606 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 12:11:00,606 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 12:11:00,606 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 12:11:00,607 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-22 12:11:00,608 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 12:11:00,608 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-22 12:11:00,608 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 12:11:00,608 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 12:11:00,608 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 12:11:00,837 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 12:11:13,504 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 12:11:13,504 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 12:11:13,504 - engine_logger:INFO - logger info level msg 
2020-10-22 12:11:13,504 - engine_logger:WARNING - logger warn level msg 
2020-10-22 12:11:13,504 - engine_logger:ERROR - logger error level msg 
2020-10-22 12:11:13,504 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 12:11:13,504 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 12:11:13,504 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 12:11:13,505 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-22 12:11:13,507 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 12:11:13,507 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-22 12:11:13,507 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 12:11:13,507 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 12:11:13,507 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 12:11:13,732 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 12:11:13,793 - engine_logger:INFO - Model builts: 
2020-10-22 12:11:41,255 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 12:11:41,255 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 12:11:41,255 - engine_logger:INFO - logger info level msg 
2020-10-22 12:11:41,255 - engine_logger:WARNING - logger warn level msg 
2020-10-22 12:11:41,255 - engine_logger:ERROR - logger error level msg 
2020-10-22 12:11:41,255 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 12:11:41,255 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 12:11:41,256 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 12:11:41,256 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-22 12:11:41,258 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 12:11:41,258 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-22 12:11:41,258 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 12:11:41,258 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 12:11:41,258 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 12:11:41,525 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 12:11:41,575 - engine_logger:INFO - Model builts: 
2020-10-22 12:13:01,258 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 12:13:01,258 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 12:13:01,258 - engine_logger:INFO - logger info level msg 
2020-10-22 12:13:01,258 - engine_logger:WARNING - logger warn level msg 
2020-10-22 12:13:01,258 - engine_logger:ERROR - logger error level msg 
2020-10-22 12:13:01,258 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 12:13:01,258 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 12:13:01,259 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 12:13:01,259 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-22 12:13:01,261 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 12:13:01,261 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-22 12:13:01,261 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 12:13:01,261 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 12:13:01,261 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 12:13:01,487 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 12:13:01,561 - engine_logger:INFO - Model builts: 
2020-10-22 12:13:48,471 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 12:13:48,471 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 12:13:48,471 - engine_logger:INFO - logger info level msg 
2020-10-22 12:13:48,471 - engine_logger:WARNING - logger warn level msg 
2020-10-22 12:13:48,471 - engine_logger:ERROR - logger error level msg 
2020-10-22 12:13:48,471 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 12:13:48,471 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 12:13:48,471 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 12:13:48,472 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-22 12:13:48,473 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 12:13:48,473 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-22 12:13:48,474 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 12:13:48,474 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 12:13:48,474 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 12:13:48,700 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 12:13:48,774 - engine_logger:INFO - Model builts: 
2020-10-22 12:14:39,044 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 12:14:39,044 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 12:14:39,044 - engine_logger:INFO - logger info level msg 
2020-10-22 12:14:39,044 - engine_logger:WARNING - logger warn level msg 
2020-10-22 12:14:39,044 - engine_logger:ERROR - logger error level msg 
2020-10-22 12:14:39,045 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 12:14:39,045 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 12:14:39,045 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 12:14:39,047 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-22 12:14:39,052 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 12:14:39,052 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-22 12:14:39,052 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 12:14:39,052 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 12:14:39,052 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 12:14:39,364 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 12:14:49,089 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 12:14:49,089 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 12:14:49,089 - engine_logger:INFO - logger info level msg 
2020-10-22 12:14:49,089 - engine_logger:WARNING - logger warn level msg 
2020-10-22 12:14:49,089 - engine_logger:ERROR - logger error level msg 
2020-10-22 12:14:49,089 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 12:14:49,089 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 12:14:49,089 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 12:14:49,091 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-22 12:14:49,096 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 12:14:49,096 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-22 12:14:49,097 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 12:14:49,097 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 12:14:49,097 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 12:14:49,377 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 12:14:49,468 - engine_logger:INFO - Model builts: 
2020-10-22 12:17:55,159 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 12:17:55,159 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 12:17:55,159 - engine_logger:INFO - logger info level msg 
2020-10-22 12:17:55,160 - engine_logger:WARNING - logger warn level msg 
2020-10-22 12:17:55,160 - engine_logger:ERROR - logger error level msg 
2020-10-22 12:17:55,160 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 12:17:55,160 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 12:17:55,160 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 12:17:55,161 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-22 12:17:55,162 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 12:17:55,162 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-22 12:17:55,162 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 12:17:55,162 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 12:17:55,162 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 12:17:55,388 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 12:17:55,450 - engine_logger:INFO - Model builts: 
2020-10-22 12:18:21,062 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 12:18:21,063 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 12:18:21,063 - engine_logger:INFO - logger info level msg 
2020-10-22 12:18:21,063 - engine_logger:WARNING - logger warn level msg 
2020-10-22 12:18:21,063 - engine_logger:ERROR - logger error level msg 
2020-10-22 12:18:21,063 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 12:18:21,063 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 12:18:21,063 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 12:18:21,064 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-22 12:18:21,065 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 12:18:21,065 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-22 12:18:21,065 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 12:18:21,065 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 12:18:21,065 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 12:18:21,292 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 12:18:21,352 - engine_logger:INFO - Model builts: 
2020-10-22 12:22:07,181 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 12:22:07,182 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 12:22:07,182 - engine_logger:INFO - logger info level msg 
2020-10-22 12:22:07,182 - engine_logger:WARNING - logger warn level msg 
2020-10-22 12:22:07,182 - engine_logger:ERROR - logger error level msg 
2020-10-22 12:22:07,182 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 12:22:07,182 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 12:22:07,182 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 12:22:07,183 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-22 12:22:07,184 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 12:22:07,184 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-22 12:22:07,184 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 12:22:07,184 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 12:22:07,184 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 12:22:07,410 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 12:22:07,467 - engine_logger:INFO - Model builts: 
2020-10-22 12:22:54,371 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 12:22:54,371 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 12:22:54,372 - engine_logger:INFO - logger info level msg 
2020-10-22 12:22:54,372 - engine_logger:WARNING - logger warn level msg 
2020-10-22 12:22:54,372 - engine_logger:ERROR - logger error level msg 
2020-10-22 12:22:54,372 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 12:22:54,372 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 12:22:54,372 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 12:22:54,374 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-22 12:22:54,380 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 12:22:54,381 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-22 12:22:54,381 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 12:22:54,381 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 12:22:54,381 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 12:22:54,622 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 12:22:54,701 - engine_logger:INFO - Model builts: 
2020-10-22 12:24:27,405 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 12:24:27,406 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 12:24:27,406 - engine_logger:INFO - logger info level msg 
2020-10-22 12:24:27,406 - engine_logger:WARNING - logger warn level msg 
2020-10-22 12:24:27,406 - engine_logger:ERROR - logger error level msg 
2020-10-22 12:24:27,406 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 12:24:27,406 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 12:24:27,406 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 12:24:27,407 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-22 12:24:27,408 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 12:24:27,408 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-22 12:24:27,408 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 12:24:27,408 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 12:24:27,408 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 12:24:27,638 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 12:24:27,692 - engine_logger:INFO - Model builts: 
2020-10-22 12:25:02,431 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 12:25:02,431 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 12:25:02,431 - engine_logger:INFO - logger info level msg 
2020-10-22 12:25:02,431 - engine_logger:WARNING - logger warn level msg 
2020-10-22 12:25:02,431 - engine_logger:ERROR - logger error level msg 
2020-10-22 12:25:02,431 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 12:25:02,431 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 12:25:02,431 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 12:25:02,432 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-22 12:25:02,433 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 12:25:02,433 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-22 12:25:02,433 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 12:25:02,433 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 12:25:02,433 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 12:25:02,662 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 12:25:02,724 - engine_logger:INFO - Model builts: 
2020-10-22 12:25:57,106 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 12:25:57,106 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 12:25:57,106 - engine_logger:INFO - logger info level msg 
2020-10-22 12:25:57,106 - engine_logger:WARNING - logger warn level msg 
2020-10-22 12:25:57,106 - engine_logger:ERROR - logger error level msg 
2020-10-22 12:25:57,106 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 12:25:57,106 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 12:25:57,107 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 12:25:57,107 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-22 12:25:57,109 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 12:25:57,109 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-22 12:25:57,109 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 12:25:57,109 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 12:25:57,109 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 12:25:57,338 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 12:25:57,403 - engine_logger:INFO - Model builts: 
2020-10-22 12:26:00,195 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7f66a8399850>
2020-10-22 13:36:41,600 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 13:36:41,600 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 13:36:41,601 - engine_logger:INFO - logger info level msg 
2020-10-22 13:36:41,601 - engine_logger:WARNING - logger warn level msg 
2020-10-22 13:36:41,601 - engine_logger:ERROR - logger error level msg 
2020-10-22 13:36:41,601 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 13:36:41,601 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 13:36:41,601 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 13:36:41,602 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-22 13:36:41,604 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 13:36:41,604 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-22 13:36:41,604 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 13:36:41,604 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-22 13:36:41,604 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 13:36:41,604 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 13:36:41,896 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 13:36:41,972 - engine_logger:INFO - Model builts: 
2020-10-22 13:36:45,634 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7f058433d0a0>
2020-10-22 13:50:41,010 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 13:50:41,010 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 13:50:41,010 - engine_logger:INFO - logger info level msg 
2020-10-22 13:50:41,010 - engine_logger:WARNING - logger warn level msg 
2020-10-22 13:50:41,010 - engine_logger:ERROR - logger error level msg 
2020-10-22 13:50:41,010 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 13:50:41,010 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 13:50:41,010 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 13:50:41,012 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-22 13:50:41,013 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 13:50:41,013 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-22 13:50:41,013 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 13:50:41,014 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-22 13:50:41,014 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 13:50:41,014 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 13:50:54,997 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 13:50:54,997 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 13:50:54,997 - engine_logger:INFO - logger info level msg 
2020-10-22 13:50:54,997 - engine_logger:WARNING - logger warn level msg 
2020-10-22 13:50:54,998 - engine_logger:ERROR - logger error level msg 
2020-10-22 13:50:54,998 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 13:50:54,998 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 13:50:54,998 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 13:50:54,999 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-22 13:50:55,001 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 13:50:55,001 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-22 13:50:55,001 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 13:50:55,001 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-22 13:50:55,001 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 13:50:55,001 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 13:50:55,291 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 13:50:55,370 - engine_logger:INFO - Model builts: 
2020-10-22 13:50:59,025 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7fb1806560a0>
2020-10-22 13:52:39,319 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 13:52:39,319 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 13:52:39,320 - engine_logger:INFO - logger info level msg 
2020-10-22 13:52:39,320 - engine_logger:WARNING - logger warn level msg 
2020-10-22 13:52:39,320 - engine_logger:ERROR - logger error level msg 
2020-10-22 13:52:39,320 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 13:52:39,320 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 13:52:39,320 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 13:52:39,321 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-22 13:52:39,323 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 13:52:39,323 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-22 13:52:39,323 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 13:52:39,323 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-22 13:52:39,323 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 13:52:39,323 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 13:52:39,614 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 13:52:39,697 - engine_logger:INFO - Model builts: 
2020-10-22 13:52:43,228 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7f82480a70d0>
2020-10-22 13:55:58,463 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 13:55:58,463 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 13:55:58,463 - engine_logger:INFO - logger info level msg 
2020-10-22 13:55:58,463 - engine_logger:WARNING - logger warn level msg 
2020-10-22 13:55:58,464 - engine_logger:ERROR - logger error level msg 
2020-10-22 13:55:58,464 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 13:55:58,464 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 13:55:58,464 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 13:55:58,465 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-22 13:55:58,467 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 13:55:58,467 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-22 13:55:58,467 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 13:55:58,467 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-22 13:55:58,467 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 13:55:58,467 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 13:55:58,756 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 13:55:58,837 - engine_logger:INFO - Model builts: 
2020-10-22 13:56:02,461 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7f18602a7040>
2020-10-22 14:55:23,376 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 14:55:23,376 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 14:55:23,376 - engine_logger:INFO - logger info level msg 
2020-10-22 14:55:23,376 - engine_logger:WARNING - logger warn level msg 
2020-10-22 14:55:23,376 - engine_logger:ERROR - logger error level msg 
2020-10-22 14:55:23,376 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 14:55:23,376 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 14:55:23,377 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 14:55:23,378 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-22 14:55:23,379 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 14:55:23,379 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-22 14:55:23,380 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 14:55:23,380 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-22 14:55:23,380 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 14:55:23,380 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 14:55:23,670 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 14:55:23,744 - engine_logger:INFO - Model builts: 
2020-10-22 14:55:27,390 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7f770815d0d0>
2020-10-22 14:55:27,391 - engine_logger:INFO - Now testing yaml reprs of archiectures 
2020-10-22 15:39:03,266 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 15:39:03,266 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 15:39:03,266 - engine_logger:INFO - logger info level msg 
2020-10-22 15:39:03,266 - engine_logger:WARNING - logger warn level msg 
2020-10-22 15:39:03,266 - engine_logger:ERROR - logger error level msg 
2020-10-22 15:39:03,267 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 15:39:03,267 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 15:39:03,267 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 15:39:03,268 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-22 15:39:03,270 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 15:39:03,270 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-22 15:39:03,270 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 15:39:03,270 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-22 15:39:03,270 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 15:39:03,270 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 15:39:03,560 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 15:39:03,634 - engine_logger:INFO - Model builts: 
2020-10-22 15:39:07,310 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7f2de0340160>
2020-10-22 15:39:07,310 - engine_logger:INFO - Now testing yaml reprs of archiectures 
2020-10-22 15:39:44,920 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 15:39:44,920 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 15:39:44,920 - engine_logger:INFO - logger info level msg 
2020-10-22 15:39:44,920 - engine_logger:WARNING - logger warn level msg 
2020-10-22 15:39:44,920 - engine_logger:ERROR - logger error level msg 
2020-10-22 15:39:44,921 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 15:39:44,921 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 15:39:44,921 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 15:39:44,922 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-22 15:39:44,924 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 15:39:44,924 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-22 15:39:44,924 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 15:39:44,924 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-22 15:39:44,924 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 15:39:44,924 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 15:39:45,191 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 15:40:36,816 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 15:40:36,816 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 15:40:36,816 - engine_logger:INFO - logger info level msg 
2020-10-22 15:40:36,816 - engine_logger:WARNING - logger warn level msg 
2020-10-22 15:40:36,816 - engine_logger:ERROR - logger error level msg 
2020-10-22 15:40:36,816 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 15:40:36,816 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 15:40:36,816 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 15:40:36,817 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-22 15:40:36,819 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 15:40:36,819 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-22 15:40:36,819 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 15:40:36,819 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-22 15:40:36,819 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 15:40:36,820 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 15:40:37,109 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 15:40:47,551 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 15:40:47,551 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 15:40:47,551 - engine_logger:INFO - logger info level msg 
2020-10-22 15:40:47,551 - engine_logger:WARNING - logger warn level msg 
2020-10-22 15:40:47,551 - engine_logger:ERROR - logger error level msg 
2020-10-22 15:40:47,551 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 15:40:47,551 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 15:40:47,552 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 15:40:47,553 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-22 15:40:47,554 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 15:40:47,554 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-22 15:40:47,555 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 15:40:47,555 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-22 15:40:47,555 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 15:40:47,555 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 15:40:47,831 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 15:41:04,410 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 15:41:04,410 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 15:41:04,410 - engine_logger:INFO - logger info level msg 
2020-10-22 15:41:04,410 - engine_logger:WARNING - logger warn level msg 
2020-10-22 15:41:04,411 - engine_logger:ERROR - logger error level msg 
2020-10-22 15:41:04,411 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 15:41:04,411 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 15:41:04,411 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 15:41:04,412 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-22 15:41:04,414 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 15:41:04,414 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-22 15:41:04,414 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 15:41:04,414 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-22 15:41:04,414 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 15:41:04,414 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 15:41:04,683 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 15:42:14,230 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 15:42:14,230 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 15:42:14,230 - engine_logger:INFO - logger info level msg 
2020-10-22 15:42:14,230 - engine_logger:WARNING - logger warn level msg 
2020-10-22 15:42:14,230 - engine_logger:ERROR - logger error level msg 
2020-10-22 15:42:14,230 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 15:42:14,230 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 15:42:14,230 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 15:42:14,231 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-22 15:42:14,233 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 15:42:14,233 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-22 15:42:14,234 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 15:42:14,234 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-22 15:42:14,234 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 15:42:14,234 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 15:42:14,524 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 15:42:14,597 - engine_logger:INFO - Model builts: 
2020-10-22 15:42:18,329 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7ff6f85a1160>
2020-10-22 15:42:18,329 - engine_logger:INFO - Now testing yaml reprs of archiectures 
2020-10-22 15:57:12,136 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 15:57:12,136 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 15:57:12,136 - engine_logger:INFO - logger info level msg 
2020-10-22 15:57:12,136 - engine_logger:WARNING - logger warn level msg 
2020-10-22 15:57:12,136 - engine_logger:ERROR - logger error level msg 
2020-10-22 15:57:12,136 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 15:57:12,136 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 15:57:12,136 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 15:57:12,137 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-22 15:57:43,421 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 15:57:43,421 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 15:57:43,422 - engine_logger:INFO - logger info level msg 
2020-10-22 15:57:43,422 - engine_logger:WARNING - logger warn level msg 
2020-10-22 15:57:43,422 - engine_logger:ERROR - logger error level msg 
2020-10-22 15:57:43,422 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 15:57:43,422 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 15:57:43,422 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 15:57:43,423 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-22 15:57:43,425 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}, 'architecture': {'inputs': {'shape': '(28,28)'}, 'outputs': {'layer_type': 'Dense'}}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 15:57:43,426 - engine_logger:INFO - Attribute foo has been set to 42
2020-10-22 15:57:43,426 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 15:57:43,426 - engine_logger:INFO - Attribute foo has been set to foo, overriding default values if any.
2020-10-22 15:57:43,426 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 15:57:43,426 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 15:57:43,715 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 15:57:43,788 - engine_logger:INFO - Model builts: 
2020-10-22 15:57:47,076 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7f1d8828c160>
2020-10-22 15:57:47,076 - engine_logger:INFO - Now testing yaml reprs of archiectures 
2020-10-22 17:32:53,260 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 17:32:53,260 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 17:32:53,260 - engine_logger:INFO - logger info level msg 
2020-10-22 17:32:53,260 - engine_logger:WARNING - logger warn level msg 
2020-10-22 17:32:53,260 - engine_logger:ERROR - logger error level msg 
2020-10-22 17:32:53,260 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 17:32:53,260 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 17:32:53,261 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 17:32:53,262 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-22 17:32:53,266 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 17:32:53,266 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): foo, 42
2020-10-22 17:32:53,266 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 17:32:53,266 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): foo, foo
2020-10-22 17:32:53,270 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 17:33:18,434 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 17:33:18,435 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 17:33:18,435 - engine_logger:INFO - logger info level msg 
2020-10-22 17:33:18,435 - engine_logger:WARNING - logger warn level msg 
2020-10-22 17:33:18,435 - engine_logger:ERROR - logger error level msg 
2020-10-22 17:33:18,435 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 17:33:18,436 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 17:33:18,436 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 17:33:18,439 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-22 17:33:18,461 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 17:33:18,462 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): foo, 42
2020-10-22 17:33:18,462 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 17:33:18,462 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): foo, foo
2020-10-22 17:33:22,046 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 17:33:22,067 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 17:33:35,776 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 17:33:35,776 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 17:33:35,776 - engine_logger:INFO - logger info level msg 
2020-10-22 17:33:35,776 - engine_logger:WARNING - logger warn level msg 
2020-10-22 17:33:35,776 - engine_logger:ERROR - logger error level msg 
2020-10-22 17:33:35,776 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 17:33:35,776 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 17:33:35,776 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 17:33:35,777 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-22 17:33:35,781 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 17:33:35,781 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): foo, 42
2020-10-22 17:33:35,781 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 17:33:35,785 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 17:33:35,785 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 17:33:35,785 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 17:33:36,088 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 17:34:12,486 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 17:34:12,486 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 17:34:12,486 - engine_logger:INFO - logger info level msg 
2020-10-22 17:34:12,486 - engine_logger:WARNING - logger warn level msg 
2020-10-22 17:34:12,486 - engine_logger:ERROR - logger error level msg 
2020-10-22 17:34:12,486 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 17:34:12,486 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 17:34:12,486 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 17:34:12,487 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-22 17:34:12,491 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 17:34:12,491 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): foo, 42
2020-10-22 17:34:12,492 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 17:34:12,495 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 17:34:12,495 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 17:34:12,495 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 17:34:12,787 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 17:34:12,862 - engine_logger:INFO - Model builts: 
2020-10-22 17:34:16,457 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7fd3a02f53a0>
2020-10-22 17:34:16,457 - engine_logger:INFO - Now testing yaml reprs of archiectures 
2020-10-22 18:25:05,117 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 18:25:05,117 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 18:25:05,117 - engine_logger:INFO - logger info level msg 
2020-10-22 18:25:05,117 - engine_logger:WARNING - logger warn level msg 
2020-10-22 18:25:05,117 - engine_logger:ERROR - logger error level msg 
2020-10-22 18:25:05,118 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 18:25:05,118 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 18:25:05,118 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 18:25:05,119 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-22 18:25:05,123 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 18:25:05,123 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): foo, 42
2020-10-22 18:25:05,123 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 18:25:05,126 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 18:25:25,519 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 18:25:25,519 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 18:25:25,519 - engine_logger:INFO - logger info level msg 
2020-10-22 18:25:25,519 - engine_logger:WARNING - logger warn level msg 
2020-10-22 18:25:25,519 - engine_logger:ERROR - logger error level msg 
2020-10-22 18:25:25,519 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 18:25:25,519 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 18:25:25,519 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 18:25:25,520 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-22 18:25:25,524 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 18:25:25,524 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): foo, 42
2020-10-22 18:25:25,524 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 18:25:25,528 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 18:25:25,528 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 18:25:25,528 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 18:25:25,788 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 18:25:39,535 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 18:25:39,535 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 18:25:39,535 - engine_logger:INFO - logger info level msg 
2020-10-22 18:25:39,536 - engine_logger:WARNING - logger warn level msg 
2020-10-22 18:25:39,536 - engine_logger:ERROR - logger error level msg 
2020-10-22 18:25:39,536 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 18:25:39,536 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 18:25:39,536 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 18:25:39,539 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-22 18:25:39,558 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 18:25:39,558 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): foo, 42
2020-10-22 18:25:39,558 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 18:25:53,342 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 18:25:58,277 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 18:26:00,555 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 18:26:05,935 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 18:26:05,935 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 18:26:05,935 - engine_logger:INFO - logger info level msg 
2020-10-22 18:26:05,935 - engine_logger:WARNING - logger warn level msg 
2020-10-22 18:26:05,935 - engine_logger:ERROR - logger error level msg 
2020-10-22 18:26:05,935 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 18:26:05,935 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 18:26:05,936 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 18:26:05,937 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-22 18:26:05,941 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 18:26:05,941 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): foo, 42
2020-10-22 18:26:05,941 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 18:26:05,944 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 18:26:05,945 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 18:26:05,945 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 18:26:06,245 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 18:26:37,376 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 18:26:37,376 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 18:26:37,376 - engine_logger:INFO - logger info level msg 
2020-10-22 18:26:37,376 - engine_logger:WARNING - logger warn level msg 
2020-10-22 18:26:37,376 - engine_logger:ERROR - logger error level msg 
2020-10-22 18:26:37,376 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 18:26:37,376 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 18:26:37,376 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 18:26:37,377 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-22 18:26:37,381 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 18:26:37,381 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): foo, 42
2020-10-22 18:26:37,381 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 18:26:37,385 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 18:26:37,385 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 18:26:37,385 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 18:26:37,646 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 18:26:47,796 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 18:26:47,796 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 18:26:47,796 - engine_logger:INFO - logger info level msg 
2020-10-22 18:26:47,796 - engine_logger:WARNING - logger warn level msg 
2020-10-22 18:26:47,796 - engine_logger:ERROR - logger error level msg 
2020-10-22 18:26:47,796 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 18:26:47,797 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 18:26:47,797 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 18:26:47,798 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-22 18:26:47,802 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 18:26:47,802 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): foo, 42
2020-10-22 18:26:47,802 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 18:26:47,805 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 18:26:47,806 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 18:26:47,806 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 18:26:48,095 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 18:26:51,927 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7f8ee451d190>
2020-10-22 18:27:57,670 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 18:27:57,670 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 18:27:57,670 - engine_logger:INFO - logger info level msg 
2020-10-22 18:27:57,670 - engine_logger:WARNING - logger warn level msg 
2020-10-22 18:27:57,670 - engine_logger:ERROR - logger error level msg 
2020-10-22 18:27:57,670 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 18:27:57,670 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 18:27:57,670 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 18:27:57,671 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-22 18:27:57,675 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 18:27:57,676 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): foo, 42
2020-10-22 18:27:57,676 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 18:27:57,679 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 18:27:57,680 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 18:27:57,680 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 18:27:57,970 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 18:28:01,764 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7f99d8425250>
2020-10-22 18:29:30,808 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 18:29:30,808 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 18:29:30,808 - engine_logger:INFO - logger info level msg 
2020-10-22 18:29:30,808 - engine_logger:WARNING - logger warn level msg 
2020-10-22 18:29:30,809 - engine_logger:ERROR - logger error level msg 
2020-10-22 18:29:30,809 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 18:29:30,809 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 18:29:30,809 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 18:29:30,810 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-22 18:29:30,814 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 18:29:30,814 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): foo, 42
2020-10-22 18:29:30,814 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): undeclared_attribute, ignored
2020-10-22 18:29:30,818 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'foo': 42, 'undeclared_attribute': 'ignored'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': {'foo': 'foo'}}, 'bar_mode': {'main_program': {'foo': 'bar'}}}
2020-10-22 18:29:30,818 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 18:29:30,818 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 18:29:31,107 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 18:29:34,808 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7fb4b86de370>
2020-10-22 18:33:26,692 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 18:33:26,693 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 18:33:26,693 - engine_logger:INFO - logger info level msg 
2020-10-22 18:33:26,693 - engine_logger:WARNING - logger warn level msg 
2020-10-22 18:33:26,693 - engine_logger:ERROR - logger error level msg 
2020-10-22 18:33:26,693 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 18:33:26,693 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 18:33:26,693 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 18:33:26,694 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-22 18:33:26,701 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}}
2020-10-22 18:35:13,883 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 18:35:13,884 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 18:35:13,884 - engine_logger:INFO - logger info level msg 
2020-10-22 18:35:13,884 - engine_logger:WARNING - logger warn level msg 
2020-10-22 18:35:13,884 - engine_logger:ERROR - logger error level msg 
2020-10-22 18:35:13,884 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 18:35:13,884 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 18:35:13,884 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 18:35:13,885 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-22 18:35:13,892 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}}
2020-10-22 18:35:35,495 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 18:35:35,495 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 18:35:35,495 - engine_logger:INFO - logger info level msg 
2020-10-22 18:35:35,495 - engine_logger:WARNING - logger warn level msg 
2020-10-22 18:35:35,495 - engine_logger:ERROR - logger error level msg 
2020-10-22 18:35:35,495 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 18:35:35,495 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 18:35:35,495 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 18:35:35,496 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-22 18:35:35,503 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'placehold': 'holdit'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': {'placehold': 'holdit'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}}
2020-10-22 18:35:35,503 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): placehold, holdit
2020-10-22 18:35:35,509 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'placehold': 'holdit'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': {'placehold': 'holdit'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}}
2020-10-22 18:35:35,510 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 18:35:35,510 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 18:35:35,774 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 18:35:39,136 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7f44a850f3d0>
2020-10-22 18:35:44,038 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 18:35:44,039 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 18:35:44,039 - engine_logger:INFO - logger info level msg 
2020-10-22 18:35:44,039 - engine_logger:WARNING - logger warn level msg 
2020-10-22 18:35:44,039 - engine_logger:ERROR - logger error level msg 
2020-10-22 18:35:44,039 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 18:35:44,039 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 18:35:44,039 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 18:35:44,040 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-22 18:35:44,046 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'placehold': 'holdit'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': {'placehold': 'holdit'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}}
2020-10-22 18:35:44,046 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): placehold, holdit
2020-10-22 18:35:44,046 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): placehold, holdit
2020-10-22 18:35:44,051 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'placehold': 'holdit'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': {'placehold': 'holdit'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}}
2020-10-22 18:35:44,051 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 18:35:44,051 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 18:35:44,299 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 18:35:48,972 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7f98647c1700>
2020-10-22 18:36:08,869 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 18:36:08,869 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 18:36:08,869 - engine_logger:INFO - logger info level msg 
2020-10-22 18:36:08,869 - engine_logger:WARNING - logger warn level msg 
2020-10-22 18:36:08,869 - engine_logger:ERROR - logger error level msg 
2020-10-22 18:36:08,869 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 18:36:08,870 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 18:36:08,870 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 18:36:08,871 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-22 18:36:08,876 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'placehold': 'holdit'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': {'placehold': 'holdit'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}}
2020-10-22 18:36:08,876 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): placehold, holdit
2020-10-22 18:36:08,876 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): placehold, holdit
2020-10-22 18:36:08,882 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'placehold': 'holdit'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': {'placehold': 'holdit'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}}
2020-10-22 18:36:08,882 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 18:36:08,882 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 18:36:09,171 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 18:36:12,110 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7f3090673a90>
2020-10-22 18:42:38,178 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 18:42:38,178 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 18:42:38,178 - engine_logger:INFO - logger info level msg 
2020-10-22 18:42:38,178 - engine_logger:WARNING - logger warn level msg 
2020-10-22 18:42:38,179 - engine_logger:ERROR - logger error level msg 
2020-10-22 18:42:38,179 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 18:42:38,179 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 18:42:38,179 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 18:42:38,180 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-22 18:42:38,185 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}}
2020-10-22 18:42:51,735 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 18:42:51,735 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 18:42:51,735 - engine_logger:INFO - logger info level msg 
2020-10-22 18:42:51,735 - engine_logger:WARNING - logger warn level msg 
2020-10-22 18:42:51,735 - engine_logger:ERROR - logger error level msg 
2020-10-22 18:42:51,735 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 18:42:51,735 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 18:42:51,735 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 18:42:51,736 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-22 18:42:51,741 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}}
2020-10-22 18:42:51,745 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}}
2020-10-22 18:42:51,745 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 18:42:51,745 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 18:42:51,994 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 18:42:55,147 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7f88c8398a30>
2020-10-22 18:43:07,079 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 18:43:07,079 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 18:43:07,079 - engine_logger:INFO - logger info level msg 
2020-10-22 18:43:07,079 - engine_logger:WARNING - logger warn level msg 
2020-10-22 18:43:07,080 - engine_logger:ERROR - logger error level msg 
2020-10-22 18:43:07,080 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 18:43:07,080 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 18:43:07,080 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 18:43:07,081 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-22 18:43:07,085 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}}
2020-10-22 18:43:07,090 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}}
2020-10-22 18:43:07,090 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 18:43:07,090 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 18:43:07,338 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 18:43:11,015 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7fa93c3f83d0>
2020-10-22 18:43:16,169 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 18:43:16,169 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 18:43:16,169 - engine_logger:INFO - logger info level msg 
2020-10-22 18:43:16,170 - engine_logger:WARNING - logger warn level msg 
2020-10-22 18:43:16,170 - engine_logger:ERROR - logger error level msg 
2020-10-22 18:43:16,170 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 18:43:16,170 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 18:43:16,170 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 18:43:16,171 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-22 18:43:16,175 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}}
2020-10-22 18:43:16,180 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}}
2020-10-22 18:43:16,180 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 18:43:16,180 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 18:43:16,431 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 18:43:20,075 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7ff8a468a3d0>
2020-10-22 18:43:47,455 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 18:43:47,455 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 18:43:47,455 - engine_logger:INFO - logger info level msg 
2020-10-22 18:43:47,455 - engine_logger:WARNING - logger warn level msg 
2020-10-22 18:43:47,455 - engine_logger:ERROR - logger error level msg 
2020-10-22 18:43:47,456 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 18:43:47,456 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 18:43:47,456 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 18:43:47,457 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-22 18:43:47,462 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}]}}}
2020-10-22 18:43:47,467 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}]}}}
2020-10-22 18:43:47,467 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 18:43:47,467 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 18:43:47,756 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 18:43:51,230 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7f4178332a60>
2020-10-22 18:44:14,165 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 18:44:14,165 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 18:44:14,166 - engine_logger:INFO - logger info level msg 
2020-10-22 18:44:14,166 - engine_logger:WARNING - logger warn level msg 
2020-10-22 18:44:14,166 - engine_logger:ERROR - logger error level msg 
2020-10-22 18:44:14,166 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 18:44:14,166 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 18:44:14,166 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 18:44:14,167 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-22 18:44:14,173 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-22 18:44:14,179 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-22 18:44:14,179 - engine_logger:INFO - Starting webserver... (not implemented)
2020-10-22 18:44:14,179 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 18:44:14,470 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 18:44:19,502 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7eff6034cd60>
2020-10-22 18:56:48,678 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 18:56:48,678 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 18:56:48,678 - engine_logger:INFO - logger info level msg 
2020-10-22 18:56:48,678 - engine_logger:WARNING - logger warn level msg 
2020-10-22 18:56:48,678 - engine_logger:ERROR - logger error level msg 
2020-10-22 18:56:48,678 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 18:56:48,678 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 18:56:48,678 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 18:56:48,679 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-22 18:56:48,687 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-22 18:56:48,693 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-22 18:56:48,774 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 18:56:49,063 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 18:56:53,811 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7f53782fdcd0>
2020-10-22 18:56:54,102 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 18:56:58,827 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7f53707bd640>
2020-10-22 18:57:43,769 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 18:57:43,769 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 18:57:43,769 - engine_logger:INFO - logger info level msg 
2020-10-22 18:57:43,769 - engine_logger:WARNING - logger warn level msg 
2020-10-22 18:57:43,769 - engine_logger:ERROR - logger error level msg 
2020-10-22 18:57:43,769 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 18:57:43,769 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 18:57:43,770 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 18:57:43,770 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-22 18:57:43,777 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-22 18:57:43,782 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-22 18:57:43,873 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 18:57:44,163 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 18:57:49,065 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7f0b845d1cd0>
2020-10-22 18:57:49,355 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 18:57:54,042 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7f0b6c7be640>
2020-10-22 18:58:39,781 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 18:58:39,781 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 18:58:39,781 - engine_logger:INFO - logger info level msg 
2020-10-22 18:58:39,782 - engine_logger:WARNING - logger warn level msg 
2020-10-22 18:58:39,782 - engine_logger:ERROR - logger error level msg 
2020-10-22 18:58:39,782 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 18:58:39,782 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 18:58:43,780 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 18:58:43,787 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-22 18:58:43,869 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-22 18:58:45,703 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-22 18:59:30,262 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 18:59:46,369 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 18:59:46,370 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 18:59:46,370 - engine_logger:INFO - logger info level msg 
2020-10-22 18:59:46,370 - engine_logger:WARNING - logger warn level msg 
2020-10-22 18:59:46,370 - engine_logger:ERROR - logger error level msg 
2020-10-22 18:59:46,370 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 18:59:46,370 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 18:59:46,370 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 18:59:46,371 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-22 18:59:46,377 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-22 18:59:46,383 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-22 18:59:46,469 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 18:59:46,758 - engine_logger:INFO - got data from keras: {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-22 18:59:51,609 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7f13d8105d00>
2020-10-22 18:59:58,586 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 18:59:58,586 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 18:59:58,587 - engine_logger:INFO - logger info level msg 
2020-10-22 18:59:58,587 - engine_logger:WARNING - logger warn level msg 
2020-10-22 18:59:58,587 - engine_logger:ERROR - logger error level msg 
2020-10-22 18:59:58,587 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 18:59:58,587 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 18:59:58,587 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 18:59:58,588 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-22 18:59:58,594 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-22 18:59:58,600 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-22 18:59:58,685 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 19:00:12,361 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 19:00:12,361 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 19:00:12,361 - engine_logger:INFO - logger info level msg 
2020-10-22 19:00:12,361 - engine_logger:WARNING - logger warn level msg 
2020-10-22 19:00:12,361 - engine_logger:ERROR - logger error level msg 
2020-10-22 19:00:12,361 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 19:00:12,361 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 19:00:12,361 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 19:00:12,362 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-22 19:00:12,368 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-22 19:00:12,374 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-22 19:00:12,467 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 19:00:12,764 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-22 19:00:17,664 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7f61c0274d00>
2020-10-22 19:02:04,271 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-22 19:02:04,271 - engine_logger:DEBUG - logger debug level msg 
2020-10-22 19:02:04,271 - engine_logger:INFO - logger info level msg 
2020-10-22 19:02:04,271 - engine_logger:WARNING - logger warn level msg 
2020-10-22 19:02:04,271 - engine_logger:ERROR - logger error level msg 
2020-10-22 19:02:04,271 - engine_logger:CRITICAL - logger critical level msg 
2020-10-22 19:02:04,271 - engine_logger:INFO - Parsing args in ArgParser
2020-10-22 19:02:04,271 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-22 19:02:04,272 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-22 19:02:04,279 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-22 19:02:04,284 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-22 19:02:04,370 - engine_logger:INFO - Done init in MainProgram.
2020-10-22 19:02:04,659 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-22 19:02:09,488 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7f4bc41efca0>
2020-10-24 12:47:50,016 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-24 12:47:50,016 - engine_logger:DEBUG - logger debug level msg 
2020-10-24 12:47:50,019 - engine_logger:INFO - logger info level msg 
2020-10-24 12:47:50,019 - engine_logger:WARNING - logger warn level msg 
2020-10-24 12:47:50,019 - engine_logger:ERROR - logger error level msg 
2020-10-24 12:47:50,019 - engine_logger:CRITICAL - logger critical level msg 
2020-10-24 12:47:50,019 - engine_logger:INFO - Parsing args in ArgParser
2020-10-24 12:47:50,019 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-24 12:47:50,020 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='foo_mode')
2020-10-24 12:47:50,027 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 12:47:50,033 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 12:47:50,118 - engine_logger:INFO - Done init in MainProgram.
2020-10-24 12:47:50,408 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-24 12:47:55,255 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7f80d8201cd0>
2020-10-24 12:49:31,693 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-24 12:49:31,693 - engine_logger:DEBUG - logger debug level msg 
2020-10-24 12:49:31,693 - engine_logger:INFO - logger info level msg 
2020-10-24 12:49:31,693 - engine_logger:WARNING - logger warn level msg 
2020-10-24 12:49:31,694 - engine_logger:ERROR - logger error level msg 
2020-10-24 12:49:31,694 - engine_logger:CRITICAL - logger critical level msg 
2020-10-24 12:49:31,694 - engine_logger:INFO - Parsing args in ArgParser
2020-10-24 12:49:31,694 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-24 12:49:31,695 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-24 12:49:31,701 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 12:49:31,707 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 12:49:31,836 - engine_logger:INFO - Done init in MainProgram.
2020-10-24 12:49:32,126 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-24 12:49:35,740 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7fd8a0384ee0>
2020-10-24 14:51:40,398 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-24 14:51:40,399 - engine_logger:DEBUG - logger debug level msg 
2020-10-24 14:51:40,399 - engine_logger:INFO - logger info level msg 
2020-10-24 14:51:40,399 - engine_logger:WARNING - logger warn level msg 
2020-10-24 14:51:40,399 - engine_logger:ERROR - logger error level msg 
2020-10-24 14:51:40,399 - engine_logger:CRITICAL - logger critical level msg 
2020-10-24 14:51:40,399 - engine_logger:INFO - Parsing args in ArgParser
2020-10-24 14:51:40,399 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-24 14:51:40,401 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-24 14:51:40,407 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 14:51:40,412 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 14:51:40,647 - engine_logger:INFO - Done init in MainProgram.
2020-10-24 14:51:40,955 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-24 14:51:43,729 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7f5a7449c760>
2020-10-24 14:54:43,133 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-24 14:54:43,133 - engine_logger:DEBUG - logger debug level msg 
2020-10-24 14:54:43,133 - engine_logger:INFO - logger info level msg 
2020-10-24 14:54:43,133 - engine_logger:WARNING - logger warn level msg 
2020-10-24 14:54:43,133 - engine_logger:ERROR - logger error level msg 
2020-10-24 14:54:43,133 - engine_logger:CRITICAL - logger critical level msg 
2020-10-24 14:54:43,133 - engine_logger:INFO - Parsing args in ArgParser
2020-10-24 14:54:43,133 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-24 14:54:43,134 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-24 14:54:43,144 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 14:54:43,153 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}, 'foo_mode': {'main_program': None, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 14:54:43,277 - engine_logger:INFO - Done init in MainProgram.
2020-10-24 14:54:43,572 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-24 14:54:46,197 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7f6b78422d00>
2020-10-24 16:11:12,247 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-24 16:11:12,247 - engine_logger:DEBUG - logger debug level msg 
2020-10-24 16:11:12,247 - engine_logger:INFO - logger info level msg 
2020-10-24 16:11:12,247 - engine_logger:WARNING - logger warn level msg 
2020-10-24 16:11:12,247 - engine_logger:ERROR - logger error level msg 
2020-10-24 16:11:12,247 - engine_logger:CRITICAL - logger critical level msg 
2020-10-24 16:11:12,247 - engine_logger:INFO - Parsing args in ArgParser
2020-10-24 16:11:12,247 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-24 16:11:12,248 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-24 16:11:12,255 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 16:11:12,255 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-24 16:11:12,255 - engine_logger:INFO - Done init in MainProgram.
2020-10-24 16:11:12,261 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 16:11:32,592 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-24 16:11:32,592 - engine_logger:DEBUG - logger debug level msg 
2020-10-24 16:11:32,593 - engine_logger:INFO - logger info level msg 
2020-10-24 16:11:32,593 - engine_logger:WARNING - logger warn level msg 
2020-10-24 16:11:32,593 - engine_logger:ERROR - logger error level msg 
2020-10-24 16:11:32,593 - engine_logger:CRITICAL - logger critical level msg 
2020-10-24 16:11:32,593 - engine_logger:INFO - Parsing args in ArgParser
2020-10-24 16:11:32,594 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-24 16:11:32,597 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-24 16:11:32,635 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 16:11:32,636 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-24 16:11:32,636 - engine_logger:INFO - Done init in MainProgram.
2020-10-24 16:12:11,685 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-24 16:12:11,686 - engine_logger:DEBUG - logger debug level msg 
2020-10-24 16:12:11,686 - engine_logger:INFO - logger info level msg 
2020-10-24 16:12:11,686 - engine_logger:WARNING - logger warn level msg 
2020-10-24 16:12:11,687 - engine_logger:ERROR - logger error level msg 
2020-10-24 16:12:11,687 - engine_logger:CRITICAL - logger critical level msg 
2020-10-24 16:12:11,687 - engine_logger:INFO - Parsing args in ArgParser
2020-10-24 16:12:11,687 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-24 16:12:11,691 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-24 16:12:11,729 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 16:12:11,729 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-24 16:12:11,729 - engine_logger:INFO - Done init in MainProgram.
2020-10-24 16:12:14,575 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 16:12:14,668 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 16:12:22,893 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-24 16:12:22,893 - engine_logger:DEBUG - logger debug level msg 
2020-10-24 16:12:22,893 - engine_logger:INFO - logger info level msg 
2020-10-24 16:12:22,893 - engine_logger:WARNING - logger warn level msg 
2020-10-24 16:12:22,893 - engine_logger:ERROR - logger error level msg 
2020-10-24 16:12:22,893 - engine_logger:CRITICAL - logger critical level msg 
2020-10-24 16:12:22,893 - engine_logger:INFO - Parsing args in ArgParser
2020-10-24 16:12:22,893 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-24 16:12:22,895 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-24 16:12:22,901 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 16:12:22,901 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-24 16:12:22,902 - engine_logger:INFO - Done init in MainProgram.
2020-10-24 16:12:22,908 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 16:12:22,914 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 16:12:44,814 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-24 16:12:44,814 - engine_logger:DEBUG - logger debug level msg 
2020-10-24 16:12:44,814 - engine_logger:INFO - logger info level msg 
2020-10-24 16:12:44,815 - engine_logger:WARNING - logger warn level msg 
2020-10-24 16:12:44,815 - engine_logger:ERROR - logger error level msg 
2020-10-24 16:12:44,815 - engine_logger:CRITICAL - logger critical level msg 
2020-10-24 16:12:44,815 - engine_logger:INFO - Parsing args in ArgParser
2020-10-24 16:12:44,816 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-24 16:12:44,819 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-24 16:12:44,857 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 16:12:44,858 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-24 16:12:44,858 - engine_logger:INFO - Done init in MainProgram.
2020-10-24 16:13:15,476 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-24 16:13:15,477 - engine_logger:DEBUG - logger debug level msg 
2020-10-24 16:13:15,477 - engine_logger:INFO - logger info level msg 
2020-10-24 16:13:15,477 - engine_logger:WARNING - logger warn level msg 
2020-10-24 16:13:15,477 - engine_logger:ERROR - logger error level msg 
2020-10-24 16:13:15,477 - engine_logger:CRITICAL - logger critical level msg 
2020-10-24 16:13:15,478 - engine_logger:INFO - Parsing args in ArgParser
2020-10-24 16:13:15,478 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-24 16:13:15,482 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-24 16:13:15,521 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 16:13:15,522 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-24 16:13:15,522 - engine_logger:INFO - Done init in MainProgram.
2020-10-24 16:13:15,559 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 16:13:15,597 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 16:14:22,112 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-24 16:14:22,113 - engine_logger:DEBUG - logger debug level msg 
2020-10-24 16:14:22,113 - engine_logger:INFO - logger info level msg 
2020-10-24 16:14:22,113 - engine_logger:WARNING - logger warn level msg 
2020-10-24 16:14:22,113 - engine_logger:ERROR - logger error level msg 
2020-10-24 16:14:22,113 - engine_logger:CRITICAL - logger critical level msg 
2020-10-24 16:14:22,113 - engine_logger:INFO - Parsing args in ArgParser
2020-10-24 16:14:22,113 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-24 16:14:22,114 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-24 16:14:22,121 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 16:14:22,121 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-24 16:14:22,121 - engine_logger:INFO - Done init in MainProgram.
2020-10-24 16:14:22,128 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 16:14:22,134 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 16:14:22,548 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-24 16:14:25,166 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7fee907405e0>
2020-10-24 16:27:47,722 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-24 16:27:47,722 - engine_logger:DEBUG - logger debug level msg 
2020-10-24 16:27:47,722 - engine_logger:INFO - logger info level msg 
2020-10-24 16:27:47,722 - engine_logger:WARNING - logger warn level msg 
2020-10-24 16:27:47,722 - engine_logger:ERROR - logger error level msg 
2020-10-24 16:27:47,722 - engine_logger:CRITICAL - logger critical level msg 
2020-10-24 16:27:47,722 - engine_logger:INFO - Parsing args in ArgParser
2020-10-24 16:27:47,723 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-24 16:27:47,724 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-24 16:27:47,730 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 16:27:47,731 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-24 16:27:47,731 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-24 16:27:47,731 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-24 16:27:47,731 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-24 16:27:47,731 - engine_logger:INFO - Done init in MainProgram.
2020-10-24 16:27:47,737 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 16:27:47,743 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 16:27:48,161 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-24 16:27:51,760 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7fba1823fd00>
2020-10-24 16:28:56,884 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-24 16:28:56,885 - engine_logger:DEBUG - logger debug level msg 
2020-10-24 16:28:56,885 - engine_logger:INFO - logger info level msg 
2020-10-24 16:28:56,885 - engine_logger:WARNING - logger warn level msg 
2020-10-24 16:28:56,885 - engine_logger:ERROR - logger error level msg 
2020-10-24 16:28:56,885 - engine_logger:CRITICAL - logger critical level msg 
2020-10-24 16:28:56,885 - engine_logger:INFO - Parsing args in ArgParser
2020-10-24 16:28:56,885 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-24 16:28:56,886 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-24 16:28:56,893 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 16:28:56,893 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-24 16:28:56,893 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-24 16:28:56,893 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-24 16:28:56,893 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-24 16:28:56,893 - engine_logger:INFO - Done init in MainProgram.
2020-10-24 16:28:56,900 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 16:28:56,906 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 256, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 16:28:57,037 - engine_logger:INFO - Model instantiated in MP: TestModel
2020-10-24 16:28:57,326 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-24 16:29:00,942 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7f5c10050d00>
2020-10-24 17:23:03,746 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-24 17:23:03,746 - engine_logger:DEBUG - logger debug level msg 
2020-10-24 17:23:03,746 - engine_logger:INFO - logger info level msg 
2020-10-24 17:23:03,747 - engine_logger:WARNING - logger warn level msg 
2020-10-24 17:23:03,747 - engine_logger:ERROR - logger error level msg 
2020-10-24 17:23:03,747 - engine_logger:CRITICAL - logger critical level msg 
2020-10-24 17:23:03,747 - engine_logger:INFO - Parsing args in ArgParser
2020-10-24 17:23:03,748 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-24 17:23:03,751 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-24 17:23:03,798 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': ['hp.Int', 'units', 'min_value:32', 'max_value:512', 'step:32'], 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:23:03,798 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-24 17:23:03,799 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-24 17:23:03,799 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-24 17:23:03,799 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-24 17:23:03,799 - engine_logger:INFO - Done init in MainProgram.
2020-10-24 17:23:03,845 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': ['hp.Int', 'units', 'min_value:32', 'max_value:512', 'step:32'], 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:23:03,890 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': ['hp.Int', 'units', 'min_value:32', 'max_value:512', 'step:32'], 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:23:12,644 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-24 17:23:12,644 - engine_logger:DEBUG - logger debug level msg 
2020-10-24 17:23:12,645 - engine_logger:INFO - logger info level msg 
2020-10-24 17:23:12,645 - engine_logger:WARNING - logger warn level msg 
2020-10-24 17:23:12,645 - engine_logger:ERROR - logger error level msg 
2020-10-24 17:23:12,645 - engine_logger:CRITICAL - logger critical level msg 
2020-10-24 17:23:12,645 - engine_logger:INFO - Parsing args in ArgParser
2020-10-24 17:23:12,645 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-24 17:23:12,646 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-24 17:23:12,655 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': ['hp.Int', 'units', 'min_value:32', 'max_value:512', 'step:32'], 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:23:12,655 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-24 17:23:12,655 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-24 17:23:12,655 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-24 17:23:12,655 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-24 17:23:12,655 - engine_logger:INFO - Done init in MainProgram.
2020-10-24 17:23:12,663 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': ['hp.Int', 'units', 'min_value:32', 'max_value:512', 'step:32'], 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:23:12,670 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': ['hp.Int', 'units', 'min_value:32', 'max_value:512', 'step:32'], 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:23:42,601 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-24 17:23:42,602 - engine_logger:DEBUG - logger debug level msg 
2020-10-24 17:23:42,602 - engine_logger:INFO - logger info level msg 
2020-10-24 17:23:42,602 - engine_logger:WARNING - logger warn level msg 
2020-10-24 17:23:42,602 - engine_logger:ERROR - logger error level msg 
2020-10-24 17:23:42,603 - engine_logger:CRITICAL - logger critical level msg 
2020-10-24 17:23:42,603 - engine_logger:INFO - Parsing args in ArgParser
2020-10-24 17:23:42,603 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-24 17:23:42,607 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-24 17:23:42,653 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': ['hp.Int', 'units', 'min_value:32', 'max_value:512', 'step:32'], 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:23:42,654 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-24 17:23:42,654 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-24 17:23:42,654 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-24 17:23:42,654 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-24 17:23:42,654 - engine_logger:INFO - Done init in MainProgram.
2020-10-24 17:23:42,700 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': ['hp.Int', 'units', 'min_value:32', 'max_value:512', 'step:32'], 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:23:42,745 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': ['hp.Int', 'units', 'min_value:32', 'max_value:512', 'step:32'], 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:24:43,191 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-24 17:24:43,192 - engine_logger:DEBUG - logger debug level msg 
2020-10-24 17:24:43,192 - engine_logger:INFO - logger info level msg 
2020-10-24 17:24:43,192 - engine_logger:WARNING - logger warn level msg 
2020-10-24 17:24:43,193 - engine_logger:ERROR - logger error level msg 
2020-10-24 17:24:43,193 - engine_logger:CRITICAL - logger critical level msg 
2020-10-24 17:24:43,193 - engine_logger:INFO - Parsing args in ArgParser
2020-10-24 17:24:43,193 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-24 17:24:43,197 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-24 17:24:43,244 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': ['hp.Int', 'units', 'min_value:32', 'max_value:512', 'step:32'], 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:24:43,244 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-24 17:24:43,244 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-24 17:24:43,244 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-24 17:24:43,245 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-24 17:24:43,245 - engine_logger:INFO - Done init in MainProgram.
2020-10-24 17:24:43,296 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': ['hp.Int', 'units', 'min_value:32', 'max_value:512', 'step:32'], 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:24:43,342 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': ['hp.Int', 'units', 'min_value:32', 'max_value:512', 'step:32'], 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:25:04,249 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-24 17:25:04,250 - engine_logger:DEBUG - logger debug level msg 
2020-10-24 17:25:04,250 - engine_logger:INFO - logger info level msg 
2020-10-24 17:25:04,250 - engine_logger:WARNING - logger warn level msg 
2020-10-24 17:25:04,250 - engine_logger:ERROR - logger error level msg 
2020-10-24 17:25:04,250 - engine_logger:CRITICAL - logger critical level msg 
2020-10-24 17:25:04,250 - engine_logger:INFO - Parsing args in ArgParser
2020-10-24 17:25:04,250 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-24 17:25:04,251 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-24 17:25:04,259 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': ['hp.Int', 'units', 'min_value:32', 'max_value:512', 'step:32'], 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:25:04,260 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-24 17:25:04,260 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-24 17:25:04,260 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-24 17:25:04,260 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-24 17:25:04,260 - engine_logger:INFO - Done init in MainProgram.
2020-10-24 17:25:04,268 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': ['hp.Int', 'units', 'min_value:32', 'max_value:512', 'step:32'], 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:25:04,276 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': ['hp.Int', 'units', 'min_value:32', 'max_value:512', 'step:32'], 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:25:42,827 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-24 17:25:42,827 - engine_logger:DEBUG - logger debug level msg 
2020-10-24 17:25:42,827 - engine_logger:INFO - logger info level msg 
2020-10-24 17:25:42,827 - engine_logger:WARNING - logger warn level msg 
2020-10-24 17:25:42,827 - engine_logger:ERROR - logger error level msg 
2020-10-24 17:25:42,827 - engine_logger:CRITICAL - logger critical level msg 
2020-10-24 17:25:42,827 - engine_logger:INFO - Parsing args in ArgParser
2020-10-24 17:25:42,827 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-24 17:25:42,828 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-24 17:25:42,837 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': ['hp.Int', 'units', 'min_value:32', 'max_value:512', 'step:32'], 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:25:42,837 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-24 17:25:42,837 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-24 17:25:42,837 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-24 17:25:42,837 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-24 17:25:42,837 - engine_logger:INFO - Done init in MainProgram.
2020-10-24 17:25:42,845 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': ['hp.Int', 'units', 'min_value:32', 'max_value:512', 'step:32'], 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:25:42,852 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': ['hp.Int', 'units', 'min_value:32', 'max_value:512', 'step:32'], 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:25:48,326 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-24 17:25:48,326 - engine_logger:DEBUG - logger debug level msg 
2020-10-24 17:25:48,326 - engine_logger:INFO - logger info level msg 
2020-10-24 17:25:48,326 - engine_logger:WARNING - logger warn level msg 
2020-10-24 17:25:48,326 - engine_logger:ERROR - logger error level msg 
2020-10-24 17:25:48,326 - engine_logger:CRITICAL - logger critical level msg 
2020-10-24 17:25:48,327 - engine_logger:INFO - Parsing args in ArgParser
2020-10-24 17:25:48,327 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-24 17:25:48,328 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-24 17:25:48,336 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': ['hp.Int', 'units', 'min_value:32', 'max_value:512', 'step:32'], 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:25:48,336 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-24 17:25:48,337 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-24 17:25:48,337 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-24 17:25:48,337 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-24 17:25:48,337 - engine_logger:INFO - Done init in MainProgram.
2020-10-24 17:25:48,344 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': ['hp.Int', 'units', 'min_value:32', 'max_value:512', 'step:32'], 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:25:48,352 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': ['hp.Int', 'units', 'min_value:32', 'max_value:512', 'step:32'], 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:26:11,771 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-24 17:26:11,772 - engine_logger:DEBUG - logger debug level msg 
2020-10-24 17:26:11,772 - engine_logger:INFO - logger info level msg 
2020-10-24 17:26:11,772 - engine_logger:WARNING - logger warn level msg 
2020-10-24 17:26:11,772 - engine_logger:ERROR - logger error level msg 
2020-10-24 17:26:11,773 - engine_logger:CRITICAL - logger critical level msg 
2020-10-24 17:26:11,773 - engine_logger:INFO - Parsing args in ArgParser
2020-10-24 17:26:11,773 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-24 17:26:11,777 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-24 17:26:11,824 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': ['hp.Int', 'units', 'min_value:32', 'max_value:512', 'step:32'], 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:26:11,825 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-24 17:26:11,825 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-24 17:26:11,825 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-24 17:26:11,825 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-24 17:26:11,826 - engine_logger:INFO - Done init in MainProgram.
2020-10-24 17:26:11,871 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': ['hp.Int', 'units', 'min_value:32', 'max_value:512', 'step:32'], 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:26:11,917 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': ['hp.Int', 'units', 'min_value:32', 'max_value:512', 'step:32'], 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:27:09,237 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-24 17:27:09,237 - engine_logger:DEBUG - logger debug level msg 
2020-10-24 17:27:09,238 - engine_logger:INFO - logger info level msg 
2020-10-24 17:27:09,238 - engine_logger:WARNING - logger warn level msg 
2020-10-24 17:27:09,238 - engine_logger:ERROR - logger error level msg 
2020-10-24 17:27:09,238 - engine_logger:CRITICAL - logger critical level msg 
2020-10-24 17:27:09,238 - engine_logger:INFO - Parsing args in ArgParser
2020-10-24 17:27:09,239 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-24 17:27:09,242 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-24 17:27:09,281 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': ['hp.Int', 'units', 'min_value:32', 'max_value:512', 'step:32'], 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:27:09,281 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-24 17:27:09,281 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-24 17:27:09,282 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-24 17:27:09,282 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-24 17:27:09,282 - engine_logger:INFO - Done init in MainProgram.
2020-10-24 17:27:09,320 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': ['hp.Int', 'units', 'min_value:32', 'max_value:512', 'step:32'], 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:27:09,359 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': ['hp.Int', 'units', 'min_value:32', 'max_value:512', 'step:32'], 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:27:38,195 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-24 17:27:38,195 - engine_logger:DEBUG - logger debug level msg 
2020-10-24 17:27:38,196 - engine_logger:INFO - logger info level msg 
2020-10-24 17:27:38,196 - engine_logger:WARNING - logger warn level msg 
2020-10-24 17:27:38,196 - engine_logger:ERROR - logger error level msg 
2020-10-24 17:27:38,196 - engine_logger:CRITICAL - logger critical level msg 
2020-10-24 17:27:38,196 - engine_logger:INFO - Parsing args in ArgParser
2020-10-24 17:27:38,196 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-24 17:27:38,197 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-24 17:27:38,204 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': ['hp.Int', 'units', 'min_value:32', 'max_value:512', 'step:32'], 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:27:38,204 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-24 17:27:38,204 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-24 17:27:38,204 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-24 17:27:38,204 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-24 17:27:38,205 - engine_logger:INFO - Done init in MainProgram.
2020-10-24 17:27:38,211 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': ['hp.Int', 'units', 'min_value:32', 'max_value:512', 'step:32'], 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:27:38,218 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': ['hp.Int', 'units', 'min_value:32', 'max_value:512', 'step:32'], 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:28:21,634 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-24 17:28:21,634 - engine_logger:DEBUG - logger debug level msg 
2020-10-24 17:28:21,634 - engine_logger:INFO - logger info level msg 
2020-10-24 17:28:21,634 - engine_logger:WARNING - logger warn level msg 
2020-10-24 17:28:21,635 - engine_logger:ERROR - logger error level msg 
2020-10-24 17:28:21,635 - engine_logger:CRITICAL - logger critical level msg 
2020-10-24 17:28:21,635 - engine_logger:INFO - Parsing args in ArgParser
2020-10-24 17:28:21,636 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-24 17:28:21,638 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-24 17:28:21,678 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': ['hp.Int', 'units', 'min_value:32', 'max_value:512', 'step:32'], 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:28:21,678 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-24 17:28:21,678 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-24 17:28:21,679 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-24 17:28:21,679 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-24 17:28:21,679 - engine_logger:INFO - Done init in MainProgram.
2020-10-24 17:28:21,718 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': ['hp.Int', 'units', 'min_value:32', 'max_value:512', 'step:32'], 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:28:21,756 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': ['hp.Int', 'units', 'min_value:32', 'max_value:512', 'step:32'], 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:32:01,432 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-24 17:32:01,432 - engine_logger:DEBUG - logger debug level msg 
2020-10-24 17:32:01,433 - engine_logger:INFO - logger info level msg 
2020-10-24 17:32:01,433 - engine_logger:WARNING - logger warn level msg 
2020-10-24 17:32:01,433 - engine_logger:ERROR - logger error level msg 
2020-10-24 17:32:01,433 - engine_logger:CRITICAL - logger critical level msg 
2020-10-24 17:32:01,434 - engine_logger:INFO - Parsing args in ArgParser
2020-10-24 17:32:01,434 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-24 17:32:01,437 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-24 17:32:01,487 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_args': {'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:32:01,487 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-24 17:32:01,487 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-24 17:32:01,488 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-24 17:32:01,488 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-24 17:32:01,488 - engine_logger:INFO - Done init in MainProgram.
2020-10-24 17:32:01,536 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_args': {'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:32:01,584 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_args': {'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:32:07,559 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-24 17:32:07,559 - engine_logger:DEBUG - logger debug level msg 
2020-10-24 17:32:07,559 - engine_logger:INFO - logger info level msg 
2020-10-24 17:32:07,559 - engine_logger:WARNING - logger warn level msg 
2020-10-24 17:32:07,559 - engine_logger:ERROR - logger error level msg 
2020-10-24 17:32:07,559 - engine_logger:CRITICAL - logger critical level msg 
2020-10-24 17:32:07,559 - engine_logger:INFO - Parsing args in ArgParser
2020-10-24 17:32:07,559 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-24 17:32:07,560 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-24 17:32:07,569 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_args': {'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:32:07,569 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-24 17:32:07,569 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-24 17:32:07,569 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-24 17:32:07,569 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-24 17:32:07,569 - engine_logger:INFO - Done init in MainProgram.
2020-10-24 17:32:07,577 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_args': {'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:32:07,586 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_args': {'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:32:25,135 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-24 17:32:25,136 - engine_logger:DEBUG - logger debug level msg 
2020-10-24 17:32:25,136 - engine_logger:INFO - logger info level msg 
2020-10-24 17:32:25,136 - engine_logger:WARNING - logger warn level msg 
2020-10-24 17:32:25,137 - engine_logger:ERROR - logger error level msg 
2020-10-24 17:32:25,137 - engine_logger:CRITICAL - logger critical level msg 
2020-10-24 17:32:25,137 - engine_logger:INFO - Parsing args in ArgParser
2020-10-24 17:32:25,137 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-24 17:32:25,141 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-24 17:32:25,189 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_args': {'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:32:25,189 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-24 17:32:25,189 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-24 17:32:25,189 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-24 17:32:25,190 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-24 17:32:25,190 - engine_logger:INFO - Done init in MainProgram.
2020-10-24 17:32:25,237 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_args': {'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:32:25,284 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_args': {'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:32:51,468 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-24 17:32:51,469 - engine_logger:DEBUG - logger debug level msg 
2020-10-24 17:32:51,469 - engine_logger:INFO - logger info level msg 
2020-10-24 17:32:51,469 - engine_logger:WARNING - logger warn level msg 
2020-10-24 17:32:51,469 - engine_logger:ERROR - logger error level msg 
2020-10-24 17:32:51,470 - engine_logger:CRITICAL - logger critical level msg 
2020-10-24 17:32:51,470 - engine_logger:INFO - Parsing args in ArgParser
2020-10-24 17:32:51,470 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-24 17:32:51,474 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-24 17:32:51,522 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_args': {'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:32:51,522 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-24 17:32:51,522 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-24 17:32:51,523 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-24 17:32:51,523 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-24 17:32:51,523 - engine_logger:INFO - Done init in MainProgram.
2020-10-24 17:32:51,570 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_args': {'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:32:51,618 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_args': {'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:33:42,568 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-24 17:33:42,568 - engine_logger:DEBUG - logger debug level msg 
2020-10-24 17:33:42,569 - engine_logger:INFO - logger info level msg 
2020-10-24 17:33:42,569 - engine_logger:WARNING - logger warn level msg 
2020-10-24 17:33:42,569 - engine_logger:ERROR - logger error level msg 
2020-10-24 17:33:42,569 - engine_logger:CRITICAL - logger critical level msg 
2020-10-24 17:33:42,569 - engine_logger:INFO - Parsing args in ArgParser
2020-10-24 17:33:42,570 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-24 17:33:42,573 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-24 17:33:42,621 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_args': {'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:33:42,621 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-24 17:33:42,621 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-24 17:33:42,621 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-24 17:33:42,622 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-24 17:33:42,622 - engine_logger:INFO - Done init in MainProgram.
2020-10-24 17:33:42,668 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_args': {'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:33:42,715 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_args': {'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:34:40,302 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-24 17:34:40,302 - engine_logger:DEBUG - logger debug level msg 
2020-10-24 17:34:40,302 - engine_logger:INFO - logger info level msg 
2020-10-24 17:34:40,303 - engine_logger:WARNING - logger warn level msg 
2020-10-24 17:34:40,303 - engine_logger:ERROR - logger error level msg 
2020-10-24 17:34:40,303 - engine_logger:CRITICAL - logger critical level msg 
2020-10-24 17:34:40,303 - engine_logger:INFO - Parsing args in ArgParser
2020-10-24 17:34:40,304 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-24 17:34:40,307 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-24 17:34:40,355 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:34:40,356 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-24 17:34:40,356 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-24 17:34:40,356 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-24 17:34:40,356 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-24 17:34:40,357 - engine_logger:INFO - Done init in MainProgram.
2020-10-24 17:34:40,404 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:34:40,450 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:34:46,134 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-24 17:34:46,135 - engine_logger:DEBUG - logger debug level msg 
2020-10-24 17:34:46,135 - engine_logger:INFO - logger info level msg 
2020-10-24 17:34:46,135 - engine_logger:WARNING - logger warn level msg 
2020-10-24 17:34:46,135 - engine_logger:ERROR - logger error level msg 
2020-10-24 17:34:46,135 - engine_logger:CRITICAL - logger critical level msg 
2020-10-24 17:34:46,135 - engine_logger:INFO - Parsing args in ArgParser
2020-10-24 17:34:46,135 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-24 17:34:46,136 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-24 17:34:46,145 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:34:46,145 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-24 17:34:46,145 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-24 17:34:46,145 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-24 17:34:46,145 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-24 17:34:46,145 - engine_logger:INFO - Done init in MainProgram.
2020-10-24 17:34:46,153 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:34:46,162 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:35:16,457 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-24 17:35:16,457 - engine_logger:DEBUG - logger debug level msg 
2020-10-24 17:35:16,457 - engine_logger:INFO - logger info level msg 
2020-10-24 17:35:16,458 - engine_logger:WARNING - logger warn level msg 
2020-10-24 17:35:16,458 - engine_logger:ERROR - logger error level msg 
2020-10-24 17:35:16,458 - engine_logger:CRITICAL - logger critical level msg 
2020-10-24 17:35:16,458 - engine_logger:INFO - Parsing args in ArgParser
2020-10-24 17:35:16,458 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-24 17:35:16,462 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-24 17:35:16,511 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:35:16,512 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-24 17:35:16,512 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-24 17:35:16,512 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-24 17:35:16,512 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-24 17:35:16,513 - engine_logger:INFO - Done init in MainProgram.
2020-10-24 17:35:16,561 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:35:16,609 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:35:24,744 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-24 17:35:24,744 - engine_logger:DEBUG - logger debug level msg 
2020-10-24 17:35:24,747 - engine_logger:INFO - logger info level msg 
2020-10-24 17:35:24,747 - engine_logger:WARNING - logger warn level msg 
2020-10-24 17:35:24,747 - engine_logger:ERROR - logger error level msg 
2020-10-24 17:35:24,747 - engine_logger:CRITICAL - logger critical level msg 
2020-10-24 17:35:24,748 - engine_logger:INFO - Parsing args in ArgParser
2020-10-24 17:35:24,748 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-24 17:35:24,752 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-24 17:35:24,800 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:35:24,800 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-24 17:35:24,800 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-24 17:35:24,800 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-24 17:35:24,801 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-24 17:35:24,801 - engine_logger:INFO - Done init in MainProgram.
2020-10-24 17:35:24,848 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:35:24,894 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:39:41,210 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-24 17:39:41,210 - engine_logger:DEBUG - logger debug level msg 
2020-10-24 17:39:41,210 - engine_logger:INFO - logger info level msg 
2020-10-24 17:39:41,211 - engine_logger:WARNING - logger warn level msg 
2020-10-24 17:39:41,211 - engine_logger:ERROR - logger error level msg 
2020-10-24 17:39:41,211 - engine_logger:CRITICAL - logger critical level msg 
2020-10-24 17:39:41,211 - engine_logger:INFO - Parsing args in ArgParser
2020-10-24 17:39:41,211 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-24 17:39:41,215 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-24 17:39:41,264 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:39:41,264 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-24 17:39:41,265 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-24 17:39:41,265 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-24 17:39:41,265 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-24 17:39:41,265 - engine_logger:INFO - Done init in MainProgram.
2020-10-24 17:39:41,313 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:39:41,361 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': ['hp.Choice', 'activation', {'values': ['relu', 'softmax', 'sigmoid', 'selu']}]}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:41:56,989 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-24 17:41:56,990 - engine_logger:DEBUG - logger debug level msg 
2020-10-24 17:41:56,990 - engine_logger:INFO - logger info level msg 
2020-10-24 17:41:56,990 - engine_logger:WARNING - logger warn level msg 
2020-10-24 17:41:56,990 - engine_logger:ERROR - logger error level msg 
2020-10-24 17:41:56,991 - engine_logger:CRITICAL - logger critical level msg 
2020-10-24 17:41:56,991 - engine_logger:INFO - Parsing args in ArgParser
2020-10-24 17:41:56,991 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-24 17:41:56,995 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-24 17:41:57,042 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:41:57,042 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-24 17:41:57,042 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-24 17:41:57,043 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-24 17:41:57,043 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-24 17:41:57,043 - engine_logger:INFO - Done init in MainProgram.
2020-10-24 17:41:57,089 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:41:57,135 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:42:43,155 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-24 17:42:43,155 - engine_logger:DEBUG - logger debug level msg 
2020-10-24 17:42:43,155 - engine_logger:INFO - logger info level msg 
2020-10-24 17:42:43,155 - engine_logger:WARNING - logger warn level msg 
2020-10-24 17:42:43,155 - engine_logger:ERROR - logger error level msg 
2020-10-24 17:42:43,155 - engine_logger:CRITICAL - logger critical level msg 
2020-10-24 17:42:43,155 - engine_logger:INFO - Parsing args in ArgParser
2020-10-24 17:42:43,156 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-24 17:42:43,157 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-24 17:42:43,165 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:42:43,165 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-24 17:42:43,165 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-24 17:42:43,165 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-24 17:42:43,166 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-24 17:42:43,166 - engine_logger:INFO - Done init in MainProgram.
2020-10-24 17:42:43,174 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:42:43,182 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:43:39,974 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-24 17:43:39,974 - engine_logger:DEBUG - logger debug level msg 
2020-10-24 17:43:39,975 - engine_logger:INFO - logger info level msg 
2020-10-24 17:43:39,975 - engine_logger:WARNING - logger warn level msg 
2020-10-24 17:43:39,975 - engine_logger:ERROR - logger error level msg 
2020-10-24 17:43:39,975 - engine_logger:CRITICAL - logger critical level msg 
2020-10-24 17:43:39,975 - engine_logger:INFO - Parsing args in ArgParser
2020-10-24 17:43:39,976 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-24 17:43:39,979 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-24 17:43:40,027 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:43:40,027 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-24 17:43:40,027 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-24 17:43:40,028 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-24 17:43:40,028 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-24 17:43:40,028 - engine_logger:INFO - Done init in MainProgram.
2020-10-24 17:43:40,074 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-24 17:43:40,121 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 13:36:21,812 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 13:36:21,812 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 13:36:21,812 - engine_logger:INFO - logger info level msg 
2020-10-26 13:36:21,812 - engine_logger:WARNING - logger warn level msg 
2020-10-26 13:36:21,812 - engine_logger:ERROR - logger error level msg 
2020-10-26 13:36:21,812 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 13:36:21,812 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 13:36:21,812 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 13:36:21,813 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 13:36:21,822 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 13:36:21,822 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 13:36:21,822 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 13:36:21,822 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 13:36:21,822 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 13:36:21,822 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 13:36:21,830 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 13:36:21,838 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 13:41:33,715 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 13:41:33,715 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 13:41:33,715 - engine_logger:INFO - logger info level msg 
2020-10-26 13:41:33,715 - engine_logger:WARNING - logger warn level msg 
2020-10-26 13:41:33,715 - engine_logger:ERROR - logger error level msg 
2020-10-26 13:41:33,715 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 13:41:33,715 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 13:41:33,715 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 13:41:33,716 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 13:41:33,725 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 13:41:33,725 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 13:41:33,725 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 13:41:33,725 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 13:41:33,725 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 13:41:33,725 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 13:41:33,733 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 13:41:33,741 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 13:41:33,741 - engine_logger:INFO - Model instantiated in MP: TestModel
2020-10-26 13:41:34,027 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-26 13:50:22,484 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 13:50:22,484 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 13:50:22,484 - engine_logger:INFO - logger info level msg 
2020-10-26 13:50:22,484 - engine_logger:WARNING - logger warn level msg 
2020-10-26 13:50:22,484 - engine_logger:ERROR - logger error level msg 
2020-10-26 13:50:22,484 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 13:50:22,484 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 13:50:22,485 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 13:50:22,486 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 13:50:22,494 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 13:50:22,494 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 13:50:22,494 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 13:50:22,494 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 13:50:22,494 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 13:50:22,494 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 13:50:22,502 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 13:50:22,511 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 13:50:22,511 - engine_logger:INFO - Model instantiated in MP: TestModel
2020-10-26 13:50:58,951 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 13:50:58,952 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 13:50:58,952 - engine_logger:INFO - logger info level msg 
2020-10-26 13:50:58,952 - engine_logger:WARNING - logger warn level msg 
2020-10-26 13:50:58,952 - engine_logger:ERROR - logger error level msg 
2020-10-26 13:50:58,952 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 13:50:58,952 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 13:50:58,952 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 13:50:58,953 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 13:50:58,961 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 13:50:58,962 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 13:50:58,962 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 13:50:58,962 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 13:50:58,962 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 13:50:58,962 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 13:50:58,970 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 13:50:58,978 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 13:50:58,978 - engine_logger:INFO - Model instantiated in MP: TestModel
2020-10-26 13:53:16,509 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 13:53:16,509 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 13:53:16,510 - engine_logger:INFO - logger info level msg 
2020-10-26 13:53:16,510 - engine_logger:WARNING - logger warn level msg 
2020-10-26 13:53:16,510 - engine_logger:ERROR - logger error level msg 
2020-10-26 13:53:16,510 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 13:53:16,510 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 13:53:16,511 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 13:53:16,514 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 13:53:16,563 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 13:53:16,564 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 13:53:16,564 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 13:53:16,564 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 13:53:16,564 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 13:53:16,565 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 13:53:16,611 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 13:53:16,658 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 13:53:16,658 - engine_logger:INFO - Model instantiated in MP: TestModel
2020-10-26 13:54:38,682 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 13:54:38,682 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 13:54:38,682 - engine_logger:INFO - logger info level msg 
2020-10-26 13:54:38,682 - engine_logger:WARNING - logger warn level msg 
2020-10-26 13:54:38,682 - engine_logger:ERROR - logger error level msg 
2020-10-26 13:54:38,682 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 13:54:38,682 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 13:54:38,682 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 13:54:38,683 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 13:54:38,692 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 13:54:38,692 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 13:54:38,692 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 13:54:38,692 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 13:54:38,692 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 13:54:38,692 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 13:54:38,700 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 13:54:38,709 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 13:54:38,709 - engine_logger:INFO - Model instantiated in MP: TestModel
2020-10-26 13:57:03,004 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 13:57:03,004 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 13:57:03,005 - engine_logger:INFO - logger info level msg 
2020-10-26 13:57:03,005 - engine_logger:WARNING - logger warn level msg 
2020-10-26 13:57:03,005 - engine_logger:ERROR - logger error level msg 
2020-10-26 13:57:03,005 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 13:57:03,005 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 13:57:03,005 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 13:57:03,006 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 13:57:03,014 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 13:57:03,014 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 13:57:03,015 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 13:57:03,015 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 13:57:03,015 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 13:57:03,015 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 13:57:03,023 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 13:57:03,031 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 13:57:03,031 - engine_logger:INFO - Model instantiated in MP: TestModel
2020-10-26 13:57:39,990 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 13:57:39,990 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 13:57:39,990 - engine_logger:INFO - logger info level msg 
2020-10-26 13:57:39,991 - engine_logger:WARNING - logger warn level msg 
2020-10-26 13:57:39,991 - engine_logger:ERROR - logger error level msg 
2020-10-26 13:57:39,991 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 13:57:39,991 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 13:57:39,991 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 13:57:39,994 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 13:57:40,035 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 13:57:40,035 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 13:57:40,035 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 13:57:40,036 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 13:57:40,036 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 13:57:40,036 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 13:57:40,075 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 13:57:40,115 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 13:57:40,115 - engine_logger:INFO - Model instantiated in MP: TestModel
2020-10-26 14:01:40,083 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 14:01:40,083 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 14:01:40,083 - engine_logger:INFO - logger info level msg 
2020-10-26 14:01:40,083 - engine_logger:WARNING - logger warn level msg 
2020-10-26 14:01:40,084 - engine_logger:ERROR - logger error level msg 
2020-10-26 14:01:40,084 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 14:01:40,084 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 14:01:40,084 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 14:01:40,087 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 14:01:40,129 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 14:01:40,130 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 14:01:40,130 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 14:01:40,130 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 14:01:40,130 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 14:01:40,131 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 14:01:40,172 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 14:01:40,214 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 14:01:40,215 - engine_logger:INFO - Model instantiated in MP: TestModel
2020-10-26 14:06:57,167 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 14:06:57,168 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 14:06:57,168 - engine_logger:INFO - logger info level msg 
2020-10-26 14:06:57,168 - engine_logger:WARNING - logger warn level msg 
2020-10-26 14:06:57,169 - engine_logger:ERROR - logger error level msg 
2020-10-26 14:06:57,169 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 14:06:57,169 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 14:06:57,169 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 14:06:57,173 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 14:06:57,220 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 14:06:57,220 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 14:06:57,221 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 14:06:57,221 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 14:06:57,221 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 14:06:57,221 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 14:06:57,267 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 14:06:57,313 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 14:06:57,313 - engine_logger:INFO - Model instantiated in MP: TestModel
2020-10-26 14:09:57,595 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 14:09:57,596 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 14:09:57,596 - engine_logger:INFO - logger info level msg 
2020-10-26 14:09:57,596 - engine_logger:WARNING - logger warn level msg 
2020-10-26 14:09:57,596 - engine_logger:ERROR - logger error level msg 
2020-10-26 14:09:57,596 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 14:09:57,597 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 14:09:57,597 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 14:09:57,600 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 14:09:57,647 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 14:09:57,648 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 14:09:57,648 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 14:09:57,648 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 14:09:57,648 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 14:09:57,648 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 14:09:57,694 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 14:09:57,740 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 14:09:57,741 - engine_logger:INFO - Model instantiated in MP: TestModel
2020-10-26 14:10:41,207 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 14:10:41,207 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 14:10:41,207 - engine_logger:INFO - logger info level msg 
2020-10-26 14:10:41,207 - engine_logger:WARNING - logger warn level msg 
2020-10-26 14:10:41,208 - engine_logger:ERROR - logger error level msg 
2020-10-26 14:10:41,208 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 14:10:41,208 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 14:10:41,208 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 14:10:41,212 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 14:10:41,259 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 14:10:41,259 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 14:10:41,259 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 14:10:41,260 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 14:10:41,260 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 14:10:41,260 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 14:10:41,307 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 14:10:41,353 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 14:10:41,353 - engine_logger:INFO - Model instantiated in MP: TestModel
2020-10-26 14:14:15,534 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 14:14:15,534 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 14:14:15,534 - engine_logger:INFO - logger info level msg 
2020-10-26 14:14:15,535 - engine_logger:WARNING - logger warn level msg 
2020-10-26 14:14:15,535 - engine_logger:ERROR - logger error level msg 
2020-10-26 14:14:15,535 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 14:14:15,535 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 14:14:15,535 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 14:14:15,536 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 14:14:15,544 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 14:14:15,544 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 14:14:15,544 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 14:14:15,544 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 14:14:15,544 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 14:14:15,544 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 14:14:15,552 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 14:14:15,561 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 14:14:15,561 - engine_logger:INFO - Model instantiated in MP: TestModel
2020-10-26 14:14:56,773 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 14:14:56,773 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 14:14:56,773 - engine_logger:INFO - logger info level msg 
2020-10-26 14:14:56,773 - engine_logger:WARNING - logger warn level msg 
2020-10-26 14:14:56,773 - engine_logger:ERROR - logger error level msg 
2020-10-26 14:14:56,773 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 14:14:56,773 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 14:14:56,773 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 14:14:56,775 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 14:14:56,783 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 14:14:56,783 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 14:14:56,783 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 14:14:56,783 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 14:14:56,783 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 14:14:56,783 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 14:14:56,791 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 14:14:56,800 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 14:14:56,800 - engine_logger:INFO - Model instantiated in MP: TestModel
2020-10-26 14:16:02,242 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 14:16:02,243 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 14:16:02,243 - engine_logger:INFO - logger info level msg 
2020-10-26 14:16:02,243 - engine_logger:WARNING - logger warn level msg 
2020-10-26 14:16:02,243 - engine_logger:ERROR - logger error level msg 
2020-10-26 14:16:02,243 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 14:16:02,243 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 14:16:02,243 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 14:16:02,244 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 14:16:02,252 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 14:16:02,252 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 14:16:02,253 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 14:16:02,253 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 14:16:02,253 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 14:16:02,253 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 14:16:02,260 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 14:16:02,269 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 14:16:02,269 - engine_logger:INFO - Model instantiated in MP: TestModel
2020-10-26 14:16:23,381 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 14:16:23,381 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 14:16:23,381 - engine_logger:INFO - logger info level msg 
2020-10-26 14:16:23,381 - engine_logger:WARNING - logger warn level msg 
2020-10-26 14:16:23,381 - engine_logger:ERROR - logger error level msg 
2020-10-26 14:16:23,381 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 14:16:23,382 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 14:16:23,382 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 14:16:23,383 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 14:16:23,391 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 14:16:23,391 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 14:16:23,391 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 14:16:23,391 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 14:16:23,391 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 14:16:23,392 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 14:16:23,399 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 14:16:23,408 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 14:16:23,408 - engine_logger:INFO - Model instantiated in MP: TestModel
2020-10-26 14:16:23,837 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-26 14:43:34,330 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 14:43:34,331 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 14:43:34,331 - engine_logger:INFO - logger info level msg 
2020-10-26 14:43:34,331 - engine_logger:WARNING - logger warn level msg 
2020-10-26 14:43:34,331 - engine_logger:ERROR - logger error level msg 
2020-10-26 14:43:34,331 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 14:43:34,331 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 14:43:34,331 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 14:43:34,332 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 14:43:34,340 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 14:43:34,340 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 14:43:34,340 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 14:43:34,341 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 14:43:34,341 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 14:43:34,341 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 14:43:34,349 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 14:43:34,357 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 14:43:34,357 - engine_logger:INFO - Model instantiated in MP: TestModel
2020-10-26 14:43:34,785 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-26 14:44:58,787 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 14:44:58,787 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 14:44:58,790 - engine_logger:INFO - logger info level msg 
2020-10-26 14:44:58,790 - engine_logger:WARNING - logger warn level msg 
2020-10-26 14:44:58,790 - engine_logger:ERROR - logger error level msg 
2020-10-26 14:44:58,790 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 14:44:58,790 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 14:44:58,791 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 14:44:58,794 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 14:44:58,834 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 14:44:58,835 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 14:44:58,835 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 14:44:58,835 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 14:44:58,835 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 14:44:58,835 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 14:44:58,875 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 14:44:58,914 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 14:44:58,915 - engine_logger:INFO - Model instantiated in MP: TestModel
2020-10-26 14:44:59,398 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-26 14:46:08,543 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 14:46:08,543 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 14:46:08,543 - engine_logger:INFO - logger info level msg 
2020-10-26 14:46:08,543 - engine_logger:WARNING - logger warn level msg 
2020-10-26 14:46:08,543 - engine_logger:ERROR - logger error level msg 
2020-10-26 14:46:08,543 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 14:46:08,544 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 14:46:08,544 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 14:46:08,545 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 14:46:08,553 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 14:46:08,554 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 14:46:08,554 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 14:46:08,554 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 14:46:08,554 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 14:46:08,554 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 14:46:08,562 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 14:46:08,571 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 14:46:08,571 - engine_logger:INFO - Model instantiated in MP: TestModel
2020-10-26 14:46:09,000 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-26 14:46:19,179 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 14:46:19,179 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 14:46:19,179 - engine_logger:INFO - logger info level msg 
2020-10-26 14:46:19,180 - engine_logger:WARNING - logger warn level msg 
2020-10-26 14:46:19,180 - engine_logger:ERROR - logger error level msg 
2020-10-26 14:46:19,180 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 14:46:19,180 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 14:46:19,180 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 14:46:19,183 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 14:46:19,224 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 14:46:19,224 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 14:46:19,224 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 14:46:19,224 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 14:46:19,224 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 14:46:19,225 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 14:46:19,264 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 14:46:19,303 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 14:46:19,303 - engine_logger:INFO - Model instantiated in MP: TestModel
2020-10-26 14:46:19,782 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-26 14:47:06,888 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 14:47:06,888 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 14:47:06,888 - engine_logger:INFO - logger info level msg 
2020-10-26 14:47:06,888 - engine_logger:WARNING - logger warn level msg 
2020-10-26 14:47:06,888 - engine_logger:ERROR - logger error level msg 
2020-10-26 14:47:06,888 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 14:47:06,888 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 14:47:06,888 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 14:47:06,889 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 14:47:06,898 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 14:47:06,898 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 14:47:06,898 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 14:47:06,898 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 14:47:06,898 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 14:47:06,898 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 14:47:06,906 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 14:47:06,915 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 14:47:06,915 - engine_logger:INFO - Model instantiated in MP: TestModel
2020-10-26 14:47:07,354 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-26 15:25:39,289 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 15:25:39,290 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 15:25:39,290 - engine_logger:INFO - logger info level msg 
2020-10-26 15:25:39,290 - engine_logger:WARNING - logger warn level msg 
2020-10-26 15:25:39,290 - engine_logger:ERROR - logger error level msg 
2020-10-26 15:25:39,290 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 15:25:39,290 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 15:25:39,290 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 15:25:39,291 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 15:25:39,299 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:25:39,299 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 15:25:39,300 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 15:25:39,300 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 15:25:39,300 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 15:25:39,300 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 15:25:39,308 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:25:39,316 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:25:39,316 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-26 15:26:11,962 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 15:26:11,962 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 15:26:11,962 - engine_logger:INFO - logger info level msg 
2020-10-26 15:26:11,963 - engine_logger:WARNING - logger warn level msg 
2020-10-26 15:26:11,963 - engine_logger:ERROR - logger error level msg 
2020-10-26 15:26:11,963 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 15:26:11,963 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 15:26:11,963 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 15:26:11,964 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 15:26:11,972 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:26:11,972 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 15:26:11,972 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 15:26:11,972 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 15:26:11,973 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 15:26:11,973 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 15:26:11,980 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:26:11,989 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:26:11,989 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-26 15:26:12,423 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-26 15:26:46,292 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 15:26:46,292 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 15:26:46,292 - engine_logger:INFO - logger info level msg 
2020-10-26 15:26:46,292 - engine_logger:WARNING - logger warn level msg 
2020-10-26 15:26:46,293 - engine_logger:ERROR - logger error level msg 
2020-10-26 15:26:46,293 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 15:26:46,293 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 15:26:46,293 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 15:26:46,297 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 15:26:46,344 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:26:46,345 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 15:26:46,345 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 15:26:46,345 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 15:26:46,345 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 15:26:46,346 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 15:26:46,392 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:26:46,438 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:26:50,876 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-26 15:30:02,002 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 15:30:02,002 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 15:30:02,002 - engine_logger:INFO - logger info level msg 
2020-10-26 15:30:02,002 - engine_logger:WARNING - logger warn level msg 
2020-10-26 15:30:02,002 - engine_logger:ERROR - logger error level msg 
2020-10-26 15:30:02,002 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 15:30:02,003 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 15:30:02,003 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 15:30:02,004 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 15:30:02,012 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:30:02,012 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 15:30:02,012 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 15:30:02,012 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 15:30:02,013 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 15:30:02,013 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 15:30:02,021 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:30:02,029 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:30:02,029 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-26 15:30:02,463 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-26 15:31:10,855 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 15:31:10,855 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 15:31:10,855 - engine_logger:INFO - logger info level msg 
2020-10-26 15:31:10,855 - engine_logger:WARNING - logger warn level msg 
2020-10-26 15:31:10,855 - engine_logger:ERROR - logger error level msg 
2020-10-26 15:31:10,855 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 15:31:10,855 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 15:31:10,855 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 15:31:10,856 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 15:31:10,865 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:31:10,865 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 15:31:10,865 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 15:31:10,865 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 15:31:10,865 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 15:31:10,865 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 15:31:10,873 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:31:10,882 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:31:10,882 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-26 15:31:11,310 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-26 15:32:01,155 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 15:32:01,155 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 15:32:01,155 - engine_logger:INFO - logger info level msg 
2020-10-26 15:32:01,156 - engine_logger:WARNING - logger warn level msg 
2020-10-26 15:32:01,156 - engine_logger:ERROR - logger error level msg 
2020-10-26 15:32:01,156 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 15:32:01,156 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 15:32:01,157 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 15:32:01,160 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 15:32:01,206 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:32:01,206 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 15:32:01,207 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 15:32:01,207 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 15:32:01,207 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 15:32:01,207 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 15:32:01,246 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:32:01,285 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:32:01,285 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-26 15:32:16,631 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-26 15:36:41,332 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 15:36:41,333 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 15:36:41,333 - engine_logger:INFO - logger info level msg 
2020-10-26 15:36:41,333 - engine_logger:WARNING - logger warn level msg 
2020-10-26 15:36:41,334 - engine_logger:ERROR - logger error level msg 
2020-10-26 15:36:41,334 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 15:36:41,334 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 15:36:41,334 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 15:36:41,338 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 15:36:41,386 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:36:41,386 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 15:36:41,387 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 15:36:41,387 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 15:36:41,387 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 15:36:41,387 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 15:36:42,086 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:36:42,200 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:36:42,201 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-26 15:36:45,015 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:36:45,038 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:36:45,060 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:36:45,085 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:36:45,097 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:36:59,201 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:36:59,223 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:36:59,240 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:36:59,269 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:36:59,288 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:44:16,430 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 15:44:16,430 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 15:44:16,430 - engine_logger:INFO - logger info level msg 
2020-10-26 15:44:16,431 - engine_logger:WARNING - logger warn level msg 
2020-10-26 15:44:16,431 - engine_logger:ERROR - logger error level msg 
2020-10-26 15:44:16,431 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 15:44:16,431 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 15:44:16,432 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 15:44:16,435 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 15:44:16,482 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:44:16,482 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 15:44:16,482 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 15:44:16,482 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 15:44:16,483 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 15:44:16,483 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 15:44:21,527 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:44:21,639 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:44:21,640 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-26 15:44:23,768 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:44:23,777 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:44:23,787 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:44:23,821 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:44:23,832 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:44:35,710 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:44:35,720 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:44:35,729 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:44:35,751 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:44:35,768 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:48:11,417 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-26 15:49:34,235 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 15:49:34,235 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 15:49:34,235 - engine_logger:INFO - logger info level msg 
2020-10-26 15:49:34,236 - engine_logger:WARNING - logger warn level msg 
2020-10-26 15:49:34,236 - engine_logger:ERROR - logger error level msg 
2020-10-26 15:49:34,236 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 15:49:34,236 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 15:49:34,236 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 15:49:34,239 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 15:49:34,280 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:49:34,280 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 15:49:34,280 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 15:49:34,280 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 15:49:34,280 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 15:49:34,281 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 15:49:37,294 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:49:37,407 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:49:37,408 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-26 15:49:40,546 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-26 15:51:22,229 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 15:51:22,229 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 15:51:22,229 - engine_logger:INFO - logger info level msg 
2020-10-26 15:51:22,229 - engine_logger:WARNING - logger warn level msg 
2020-10-26 15:51:22,229 - engine_logger:ERROR - logger error level msg 
2020-10-26 15:51:22,229 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 15:51:22,229 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 15:51:22,229 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 15:51:22,231 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 15:51:22,239 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:51:22,239 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 15:51:22,239 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 15:51:22,239 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 15:51:22,239 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 15:51:22,239 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 15:51:22,247 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:51:22,255 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:51:22,255 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-26 15:51:22,684 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-26 15:52:17,161 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 15:52:17,161 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 15:52:17,161 - engine_logger:INFO - logger info level msg 
2020-10-26 15:52:17,161 - engine_logger:WARNING - logger warn level msg 
2020-10-26 15:52:17,161 - engine_logger:ERROR - logger error level msg 
2020-10-26 15:52:17,161 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 15:52:17,161 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 15:52:17,162 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 15:52:17,163 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 15:52:17,171 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:52:17,172 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 15:52:17,172 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 15:52:17,172 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 15:52:17,172 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 15:52:17,172 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 15:52:17,180 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:52:17,189 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 15:52:17,189 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-26 15:52:17,617 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-26 15:52:17,974 - engine_logger:ERROR - Failed to tuner.search: Too many failed attempts to build model.
2020-10-26 15:52:17,974 - engine_logger:INFO - Finished tuning model. Summary:
2020-10-26 16:56:35,821 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 16:56:35,822 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 16:56:35,822 - engine_logger:INFO - logger info level msg 
2020-10-26 16:56:35,822 - engine_logger:WARNING - logger warn level msg 
2020-10-26 16:56:35,822 - engine_logger:ERROR - logger error level msg 
2020-10-26 16:56:35,822 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 16:56:35,822 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 16:56:35,822 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 16:56:35,823 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-26 16:56:35,832 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 16:56:35,832 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 16:56:35,832 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 16:56:35,840 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 16:56:35,848 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 16:56:35,914 - engine_logger:INFO - Model instantiated in MP: DigitsMNIST
2020-10-26 16:56:36,201 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-26 16:56:38,840 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7f49c04118b0>
2020-10-26 16:57:59,194 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 16:57:59,194 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 16:57:59,194 - engine_logger:INFO - logger info level msg 
2020-10-26 16:57:59,194 - engine_logger:WARNING - logger warn level msg 
2020-10-26 16:57:59,194 - engine_logger:ERROR - logger error level msg 
2020-10-26 16:57:59,195 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 16:57:59,195 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 16:57:59,195 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 16:57:59,196 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 16:57:59,204 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 16:57:59,204 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 16:57:59,204 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 16:57:59,205 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 16:57:59,205 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 16:57:59,205 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 16:57:59,213 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 16:57:59,221 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 16:57:59,221 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-26 16:57:59,651 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-26 16:58:00,011 - engine_logger:ERROR - Failed to tuner.search: Too many failed attempts to build model.
2020-10-26 16:58:00,011 - engine_logger:INFO - Finished tuning model. Summary:
2020-10-26 16:58:17,640 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 16:58:17,640 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 16:58:17,640 - engine_logger:INFO - logger info level msg 
2020-10-26 16:58:17,640 - engine_logger:WARNING - logger warn level msg 
2020-10-26 16:58:17,640 - engine_logger:ERROR - logger error level msg 
2020-10-26 16:58:17,641 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 16:58:17,641 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 16:58:17,641 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 16:58:17,644 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 16:58:17,689 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 16:58:17,689 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 16:58:17,690 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 16:58:17,690 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 16:58:17,690 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 16:58:17,690 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 16:58:17,730 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 16:58:17,769 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 16:58:17,769 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-26 16:59:54,512 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 16:59:54,512 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 16:59:54,512 - engine_logger:INFO - logger info level msg 
2020-10-26 16:59:54,513 - engine_logger:WARNING - logger warn level msg 
2020-10-26 16:59:54,513 - engine_logger:ERROR - logger error level msg 
2020-10-26 16:59:54,513 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 16:59:54,513 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 16:59:54,513 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 16:59:54,514 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 16:59:54,522 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 16:59:54,522 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 16:59:54,522 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 16:59:54,522 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 16:59:54,523 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 16:59:54,523 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 16:59:54,530 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 16:59:54,539 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 16:59:54,539 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-26 16:59:54,600 - engine_logger:INFO - Architecture.build().... 
2020-10-26 16:59:54,968 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-26 16:59:55,029 - engine_logger:INFO - Architecture.build().... 
2020-10-26 16:59:55,090 - engine_logger:INFO - Architecture.build().... 
2020-10-26 16:59:55,150 - engine_logger:INFO - Architecture.build().... 
2020-10-26 16:59:55,209 - engine_logger:INFO - Architecture.build().... 
2020-10-26 16:59:55,269 - engine_logger:INFO - Architecture.build().... 
2020-10-26 16:59:55,328 - engine_logger:INFO - Architecture.build().... 
2020-10-26 16:59:55,329 - engine_logger:ERROR - Failed to tuner.search: Too many failed attempts to build model.
2020-10-26 16:59:55,329 - engine_logger:INFO - Finished tuning model. Summary:
2020-10-26 17:00:37,781 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 17:00:37,781 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 17:00:37,781 - engine_logger:INFO - logger info level msg 
2020-10-26 17:00:37,781 - engine_logger:WARNING - logger warn level msg 
2020-10-26 17:00:37,781 - engine_logger:ERROR - logger error level msg 
2020-10-26 17:00:37,782 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 17:00:37,782 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 17:00:37,782 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 17:00:37,785 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 17:00:37,825 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:00:37,826 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 17:00:37,826 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 17:00:37,826 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 17:00:37,826 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 17:00:37,826 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 17:00:37,866 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:00:37,905 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:00:37,905 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-26 17:00:37,968 - engine_logger:INFO - Architecture.build().... 
2020-10-26 17:00:58,775 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-26 17:01:01,180 - engine_logger:INFO - Architecture.build().... 
2020-10-26 17:01:08,100 - engine_logger:INFO - Architecture.build().... 
2020-10-26 17:01:08,744 - engine_logger:INFO - Architecture.build().... 
2020-10-26 17:01:09,152 - engine_logger:INFO - Architecture.build().... 
2020-10-26 17:01:11,519 - engine_logger:INFO - Architecture.build().... 
2020-10-26 17:01:11,588 - engine_logger:INFO - Architecture.build().... 
2020-10-26 17:01:11,588 - engine_logger:ERROR - Failed to tuner.search: Too many failed attempts to build model.
2020-10-26 17:01:11,588 - engine_logger:INFO - Finished tuning model. Summary:
2020-10-26 17:01:22,597 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 17:01:22,597 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 17:01:22,597 - engine_logger:INFO - logger info level msg 
2020-10-26 17:01:22,598 - engine_logger:WARNING - logger warn level msg 
2020-10-26 17:01:22,598 - engine_logger:ERROR - logger error level msg 
2020-10-26 17:01:22,598 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 17:01:22,598 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 17:01:22,598 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 17:01:22,601 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 17:01:22,642 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:01:22,642 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 17:01:22,642 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 17:01:22,642 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 17:01:22,643 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 17:01:22,643 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 17:01:22,682 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:01:22,722 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:01:22,722 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-26 17:01:22,785 - engine_logger:INFO - Architecture.build().... 
2020-10-26 17:02:31,330 - engine_logger:INFO - Architecture.build().... 
2020-10-26 17:02:31,396 - engine_logger:INFO - Architecture.build().... 
2020-10-26 17:02:31,462 - engine_logger:INFO - Architecture.build().... 
2020-10-26 17:02:31,525 - engine_logger:INFO - Architecture.build().... 
2020-10-26 17:02:31,588 - engine_logger:INFO - Architecture.build().... 
2020-10-26 17:02:36,836 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 17:02:36,837 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 17:02:36,837 - engine_logger:INFO - logger info level msg 
2020-10-26 17:02:36,837 - engine_logger:WARNING - logger warn level msg 
2020-10-26 17:02:36,837 - engine_logger:ERROR - logger error level msg 
2020-10-26 17:02:36,838 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 17:02:36,838 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 17:02:36,838 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 17:02:36,841 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 17:02:36,881 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:02:36,882 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 17:02:36,882 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 17:02:36,882 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 17:02:36,882 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 17:02:36,882 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 17:02:36,922 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:02:36,961 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:02:36,961 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-26 17:02:37,024 - engine_logger:INFO - Architecture.build().... 
2020-10-26 17:02:37,445 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-26 17:02:46,102 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 17:02:46,102 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 17:02:46,103 - engine_logger:INFO - logger info level msg 
2020-10-26 17:02:46,103 - engine_logger:WARNING - logger warn level msg 
2020-10-26 17:02:46,103 - engine_logger:ERROR - logger error level msg 
2020-10-26 17:02:46,103 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 17:02:46,103 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 17:02:46,104 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 17:02:46,107 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 17:02:46,155 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:02:46,155 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 17:02:46,155 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 17:02:46,156 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 17:02:46,156 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 17:02:46,156 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 17:02:46,201 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:02:46,240 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:02:46,241 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-26 17:02:46,305 - engine_logger:INFO - Architecture.build().... 
2020-10-26 17:02:46,728 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-26 17:02:46,789 - engine_logger:INFO - Architecture.build().... 
2020-10-26 17:02:46,849 - engine_logger:INFO - Architecture.build().... 
2020-10-26 17:02:46,907 - engine_logger:INFO - Architecture.build().... 
2020-10-26 17:02:46,966 - engine_logger:INFO - Architecture.build().... 
2020-10-26 17:02:47,026 - engine_logger:INFO - Architecture.build().... 
2020-10-26 17:02:47,084 - engine_logger:INFO - Architecture.build().... 
2020-10-26 17:02:47,085 - engine_logger:ERROR - Failed to tuner.search: Too many failed attempts to build model.
2020-10-26 17:02:47,085 - engine_logger:INFO - Finished tuning model. Summary:
2020-10-26 17:03:28,062 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 17:03:28,062 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 17:03:28,063 - engine_logger:INFO - logger info level msg 
2020-10-26 17:03:28,063 - engine_logger:WARNING - logger warn level msg 
2020-10-26 17:03:28,063 - engine_logger:ERROR - logger error level msg 
2020-10-26 17:03:28,063 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 17:03:28,064 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 17:03:28,064 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 17:03:28,067 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 17:03:28,108 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:03:28,108 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 17:03:28,108 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 17:03:28,109 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 17:03:28,109 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 17:03:28,109 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 17:03:28,148 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:03:28,187 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:03:28,187 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-26 17:03:35,372 - engine_logger:INFO - Architecture.build().... 
2020-10-26 17:04:21,114 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-26 17:04:39,172 - engine_logger:INFO - Architecture.build().... 
2020-10-26 17:05:13,827 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 17:05:13,827 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 17:05:13,827 - engine_logger:INFO - logger info level msg 
2020-10-26 17:05:13,827 - engine_logger:WARNING - logger warn level msg 
2020-10-26 17:05:13,827 - engine_logger:ERROR - logger error level msg 
2020-10-26 17:05:13,827 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 17:05:13,827 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 17:05:13,827 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 17:05:13,828 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 17:05:13,837 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:05:13,837 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 17:05:13,837 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 17:05:13,837 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 17:05:13,837 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 17:05:13,837 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 17:05:13,845 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:05:13,854 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:05:13,854 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-26 17:05:13,915 - engine_logger:INFO - Architecture.build().... 
2020-10-26 17:05:14,279 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-26 17:05:14,340 - engine_logger:INFO - Architecture.build().... 
2020-10-26 17:05:14,399 - engine_logger:INFO - Architecture.build().... 
2020-10-26 17:05:14,459 - engine_logger:INFO - Architecture.build().... 
2020-10-26 17:05:14,518 - engine_logger:INFO - Architecture.build().... 
2020-10-26 17:05:14,577 - engine_logger:INFO - Architecture.build().... 
2020-10-26 17:05:14,637 - engine_logger:INFO - Architecture.build().... 
2020-10-26 17:05:14,637 - engine_logger:ERROR - Failed to tuner.search: Too many failed attempts to build model.
2020-10-26 17:05:14,637 - engine_logger:INFO - Finished tuning model. Summary:
2020-10-26 17:07:03,646 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 17:07:03,647 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 17:07:03,647 - engine_logger:INFO - logger info level msg 
2020-10-26 17:07:03,647 - engine_logger:WARNING - logger warn level msg 
2020-10-26 17:07:03,647 - engine_logger:ERROR - logger error level msg 
2020-10-26 17:07:03,647 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 17:07:03,647 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 17:07:03,647 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 17:07:03,648 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 17:07:03,656 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:07:03,657 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 17:07:03,657 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 17:07:03,657 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 17:07:03,657 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 17:07:03,657 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 17:07:03,665 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:07:03,673 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:07:03,673 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-26 17:07:03,734 - engine_logger:INFO - Architecture.build().... {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:07:04,100 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-26 17:07:04,161 - engine_logger:INFO - Architecture.build().... {'inputs': {'shape': [28, 28]}, 'outputs': {'units': 10, 'activation': 'softmax'}, 'layers': [{}, {'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'units': 128, 'activation': 'relu'}, {'units': 64, 'activation': 'relu'}]}
2020-10-26 17:07:04,161 - engine_logger:ERROR - Failed to build model. type: None, input_desc:{'shape': [28, 28]} outputdesc: {'units': 10, 'activation': 'softmax'}
2020-10-26 17:07:04,161 - engine_logger:ERROR - Layerds: [{}, {'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'units': 128, 'activation': 'relu'}, {'units': 64, 'activation': 'relu'}]
2020-10-26 17:07:04,220 - engine_logger:INFO - Architecture.build().... {'inputs': {'shape': [28, 28]}, 'outputs': {'units': 10, 'activation': 'softmax'}, 'layers': [{}, {'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'units': 128, 'activation': 'relu'}, {'units': 64, 'activation': 'relu'}]}
2020-10-26 17:07:04,220 - engine_logger:ERROR - Failed to build model. type: None, input_desc:{'shape': [28, 28]} outputdesc: {'units': 10, 'activation': 'softmax'}
2020-10-26 17:07:04,220 - engine_logger:ERROR - Layerds: [{}, {'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'units': 128, 'activation': 'relu'}, {'units': 64, 'activation': 'relu'}]
2020-10-26 17:07:04,279 - engine_logger:INFO - Architecture.build().... {'inputs': {'shape': [28, 28]}, 'outputs': {'units': 10, 'activation': 'softmax'}, 'layers': [{}, {'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'units': 128, 'activation': 'relu'}, {'units': 64, 'activation': 'relu'}]}
2020-10-26 17:07:04,279 - engine_logger:ERROR - Failed to build model. type: None, input_desc:{'shape': [28, 28]} outputdesc: {'units': 10, 'activation': 'softmax'}
2020-10-26 17:07:04,279 - engine_logger:ERROR - Layerds: [{}, {'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'units': 128, 'activation': 'relu'}, {'units': 64, 'activation': 'relu'}]
2020-10-26 17:07:04,338 - engine_logger:INFO - Architecture.build().... {'inputs': {'shape': [28, 28]}, 'outputs': {'units': 10, 'activation': 'softmax'}, 'layers': [{}, {'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'units': 128, 'activation': 'relu'}, {'units': 64, 'activation': 'relu'}]}
2020-10-26 17:07:04,339 - engine_logger:ERROR - Failed to build model. type: None, input_desc:{'shape': [28, 28]} outputdesc: {'units': 10, 'activation': 'softmax'}
2020-10-26 17:07:04,339 - engine_logger:ERROR - Layerds: [{}, {'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'units': 128, 'activation': 'relu'}, {'units': 64, 'activation': 'relu'}]
2020-10-26 17:07:04,398 - engine_logger:INFO - Architecture.build().... {'inputs': {'shape': [28, 28]}, 'outputs': {'units': 10, 'activation': 'softmax'}, 'layers': [{}, {'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'units': 128, 'activation': 'relu'}, {'units': 64, 'activation': 'relu'}]}
2020-10-26 17:07:04,398 - engine_logger:ERROR - Failed to build model. type: None, input_desc:{'shape': [28, 28]} outputdesc: {'units': 10, 'activation': 'softmax'}
2020-10-26 17:07:04,399 - engine_logger:ERROR - Layerds: [{}, {'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'units': 128, 'activation': 'relu'}, {'units': 64, 'activation': 'relu'}]
2020-10-26 17:07:04,458 - engine_logger:INFO - Architecture.build().... {'inputs': {'shape': [28, 28]}, 'outputs': {'units': 10, 'activation': 'softmax'}, 'layers': [{}, {'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'units': 128, 'activation': 'relu'}, {'units': 64, 'activation': 'relu'}]}
2020-10-26 17:07:04,458 - engine_logger:ERROR - Failed to build model. type: None, input_desc:{'shape': [28, 28]} outputdesc: {'units': 10, 'activation': 'softmax'}
2020-10-26 17:07:04,458 - engine_logger:ERROR - Layerds: [{}, {'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'units': 128, 'activation': 'relu'}, {'units': 64, 'activation': 'relu'}]
2020-10-26 17:07:04,458 - engine_logger:ERROR - Failed to tuner.search: Too many failed attempts to build model.
2020-10-26 17:07:04,458 - engine_logger:INFO - Finished tuning model. Summary:
2020-10-26 17:09:25,490 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 17:09:25,491 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 17:09:25,491 - engine_logger:INFO - logger info level msg 
2020-10-26 17:09:25,491 - engine_logger:WARNING - logger warn level msg 
2020-10-26 17:09:25,491 - engine_logger:ERROR - logger error level msg 
2020-10-26 17:09:25,491 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 17:09:25,491 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 17:09:25,491 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 17:09:25,492 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-26 17:09:25,500 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:09:25,501 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 17:09:25,501 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 17:09:25,509 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:09:25,517 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:09:25,517 - engine_logger:INFO - Layers in _buildmodel: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}
2020-10-26 17:09:25,585 - engine_logger:INFO - Model instantiated in MP: DigitsMNIST
2020-10-26 17:09:25,875 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-26 17:09:28,448 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7f16a43118b0>
2020-10-26 17:12:18,063 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 17:12:18,063 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 17:12:18,063 - engine_logger:INFO - logger info level msg 
2020-10-26 17:12:18,064 - engine_logger:WARNING - logger warn level msg 
2020-10-26 17:12:18,064 - engine_logger:ERROR - logger error level msg 
2020-10-26 17:12:18,064 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 17:12:18,064 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 17:12:18,064 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 17:12:18,067 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-26 17:12:18,108 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:12:18,108 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 17:12:18,108 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 17:12:18,148 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:12:18,188 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:12:18,188 - engine_logger:INFO - Layers in _buildmodel: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}
2020-10-26 17:12:18,306 - engine_logger:INFO - Model instantiated in MP: DigitsMNIST
2020-10-26 17:12:18,589 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-26 17:12:28,300 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 17:12:28,301 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 17:12:28,301 - engine_logger:INFO - logger info level msg 
2020-10-26 17:12:28,301 - engine_logger:WARNING - logger warn level msg 
2020-10-26 17:12:28,301 - engine_logger:ERROR - logger error level msg 
2020-10-26 17:12:28,301 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 17:12:28,302 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 17:12:28,302 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 17:12:28,305 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 17:12:28,345 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:12:28,345 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 17:12:28,345 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 17:12:28,346 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 17:12:28,346 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 17:12:28,346 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 17:12:28,388 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:12:28,428 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:12:28,428 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-26 17:12:36,823 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 17:12:36,823 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 17:12:36,823 - engine_logger:INFO - logger info level msg 
2020-10-26 17:12:36,823 - engine_logger:WARNING - logger warn level msg 
2020-10-26 17:12:36,824 - engine_logger:ERROR - logger error level msg 
2020-10-26 17:12:36,824 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 17:12:36,824 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 17:12:36,824 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 17:12:36,827 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 17:12:36,867 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:12:36,868 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 17:12:36,868 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 17:12:36,868 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 17:12:36,868 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 17:12:36,868 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 17:12:36,908 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:12:36,947 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:12:36,947 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-26 17:12:37,009 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:12:37,430 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-26 17:12:37,490 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'shape': [28, 28]}, 'outputs': {'units': 10, 'activation': 'softmax'}, 'layers': [{}, {'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'units': 128, 'activation': 'relu'}, {'units': 64, 'activation': 'relu'}]}
2020-10-26 17:15:43,415 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'shape': [28, 28]}, 'outputs': {'units': 10, 'activation': 'softmax'}, 'layers': [{}, {'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'units': 128, 'activation': 'relu'}, {'units': 64, 'activation': 'relu'}]}
2020-10-26 17:15:43,415 - engine_logger:ERROR - Failed to build model. type: None, input_desc:{'shape': [28, 28]} outputdesc: {'units': 10, 'activation': 'softmax'}
2020-10-26 17:15:43,415 - engine_logger:ERROR - Layerds: [{}, {'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'units': 128, 'activation': 'relu'}, {'units': 64, 'activation': 'relu'}]
2020-10-26 17:15:43,478 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'shape': [28, 28]}, 'outputs': {'units': 10, 'activation': 'softmax'}, 'layers': [{}, {'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'units': 128, 'activation': 'relu'}, {'units': 64, 'activation': 'relu'}]}
2020-10-26 17:15:43,478 - engine_logger:ERROR - Failed to build model. type: None, input_desc:{'shape': [28, 28]} outputdesc: {'units': 10, 'activation': 'softmax'}
2020-10-26 17:15:43,478 - engine_logger:ERROR - Layerds: [{}, {'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'units': 128, 'activation': 'relu'}, {'units': 64, 'activation': 'relu'}]
2020-10-26 17:15:43,541 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'shape': [28, 28]}, 'outputs': {'units': 10, 'activation': 'softmax'}, 'layers': [{}, {'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'units': 128, 'activation': 'relu'}, {'units': 64, 'activation': 'relu'}]}
2020-10-26 17:15:43,541 - engine_logger:ERROR - Failed to build model. type: None, input_desc:{'shape': [28, 28]} outputdesc: {'units': 10, 'activation': 'softmax'}
2020-10-26 17:15:43,542 - engine_logger:ERROR - Layerds: [{}, {'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'units': 128, 'activation': 'relu'}, {'units': 64, 'activation': 'relu'}]
2020-10-26 17:15:43,604 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'shape': [28, 28]}, 'outputs': {'units': 10, 'activation': 'softmax'}, 'layers': [{}, {'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'units': 128, 'activation': 'relu'}, {'units': 64, 'activation': 'relu'}]}
2020-10-26 17:15:43,604 - engine_logger:ERROR - Failed to build model. type: None, input_desc:{'shape': [28, 28]} outputdesc: {'units': 10, 'activation': 'softmax'}
2020-10-26 17:15:43,604 - engine_logger:ERROR - Layerds: [{}, {'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'units': 128, 'activation': 'relu'}, {'units': 64, 'activation': 'relu'}]
2020-10-26 17:15:43,666 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'shape': [28, 28]}, 'outputs': {'units': 10, 'activation': 'softmax'}, 'layers': [{}, {'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'units': 128, 'activation': 'relu'}, {'units': 64, 'activation': 'relu'}]}
2020-10-26 17:15:43,667 - engine_logger:ERROR - Failed to build model. type: None, input_desc:{'shape': [28, 28]} outputdesc: {'units': 10, 'activation': 'softmax'}
2020-10-26 17:15:43,667 - engine_logger:ERROR - Layerds: [{}, {'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'units': 128, 'activation': 'relu'}, {'units': 64, 'activation': 'relu'}]
2020-10-26 17:15:43,667 - engine_logger:ERROR - Failed to tuner.search: Too many failed attempts to build model.
2020-10-26 17:15:43,667 - engine_logger:INFO - Finished tuning model. Summary:
2020-10-26 17:21:49,519 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 17:21:49,519 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 17:21:49,519 - engine_logger:INFO - logger info level msg 
2020-10-26 17:21:49,519 - engine_logger:WARNING - logger warn level msg 
2020-10-26 17:21:49,519 - engine_logger:ERROR - logger error level msg 
2020-10-26 17:21:49,519 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 17:21:49,519 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 17:21:49,519 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 17:21:49,520 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 17:21:49,529 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:21:49,529 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 17:21:49,529 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 17:21:49,529 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 17:21:49,529 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 17:21:49,529 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 17:21:49,537 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:21:49,545 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:21:49,545 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-26 17:21:49,605 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:21:49,973 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-26 17:21:50,034 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{}, {'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'units': 128, 'activation': 'relu'}, {'units': 64, 'activation': 'relu'}]}
2020-10-26 17:21:50,097 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{}, {'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'units': 128, 'activation': 'relu'}, {'units': 64, 'activation': 'relu'}]}
2020-10-26 17:21:50,158 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{}, {'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'units': 128, 'activation': 'relu'}, {'units': 64, 'activation': 'relu'}]}
2020-10-26 17:21:50,220 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{}, {'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'units': 128, 'activation': 'relu'}, {'units': 64, 'activation': 'relu'}]}
2020-10-26 17:21:50,282 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{}, {'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'units': 128, 'activation': 'relu'}, {'units': 64, 'activation': 'relu'}]}
2020-10-26 17:21:50,343 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{}, {'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'units': 128, 'activation': 'relu'}, {'units': 64, 'activation': 'relu'}]}
2020-10-26 17:21:50,345 - engine_logger:ERROR - Failed to tuner.search: Too many failed attempts to build model.
2020-10-26 17:21:50,346 - engine_logger:INFO - Finished tuning model. Summary:
2020-10-26 17:23:21,336 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 17:23:21,336 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 17:23:21,336 - engine_logger:INFO - logger info level msg 
2020-10-26 17:23:21,336 - engine_logger:WARNING - logger warn level msg 
2020-10-26 17:23:21,336 - engine_logger:ERROR - logger error level msg 
2020-10-26 17:23:21,336 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 17:23:21,336 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 17:23:21,336 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 17:23:21,338 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 17:23:21,346 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:23:21,346 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 17:23:21,346 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 17:23:21,346 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 17:23:21,346 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 17:23:21,346 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 17:23:21,354 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:23:21,362 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:23:21,363 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-26 17:23:21,423 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:23:21,790 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-26 17:23:21,850 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{}, {'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'units': 128, 'activation': 'relu'}, {'units': 64, 'activation': 'relu'}]}
2020-10-26 17:23:21,911 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{}, {'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'units': 128, 'activation': 'relu'}, {'units': 64, 'activation': 'relu'}]}
2020-10-26 17:23:21,973 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{}, {'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'units': 128, 'activation': 'relu'}, {'units': 64, 'activation': 'relu'}]}
2020-10-26 17:23:22,034 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{}, {'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'units': 128, 'activation': 'relu'}, {'units': 64, 'activation': 'relu'}]}
2020-10-26 17:23:22,095 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{}, {'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'units': 128, 'activation': 'relu'}, {'units': 64, 'activation': 'relu'}]}
2020-10-26 17:23:22,156 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{}, {'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'units': 128, 'activation': 'relu'}, {'units': 64, 'activation': 'relu'}]}
2020-10-26 17:23:22,159 - engine_logger:ERROR - Failed to tuner.search: Too many failed attempts to build model.
2020-10-26 17:23:22,159 - engine_logger:INFO - Finished tuning model. Summary:
2020-10-26 17:24:04,545 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 17:24:04,546 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 17:24:04,546 - engine_logger:INFO - logger info level msg 
2020-10-26 17:24:04,546 - engine_logger:WARNING - logger warn level msg 
2020-10-26 17:24:04,546 - engine_logger:ERROR - logger error level msg 
2020-10-26 17:24:04,546 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 17:24:04,546 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 17:24:04,546 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 17:24:04,547 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 17:24:04,555 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:24:04,556 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 17:24:04,556 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 17:24:04,556 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 17:24:04,556 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 17:24:04,556 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 17:24:04,564 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:24:04,572 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:24:04,572 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-26 17:24:04,634 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:24:04,700 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:24:04,761 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:24:04,823 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:24:04,884 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:24:04,946 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:24:49,003 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 17:24:49,003 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 17:24:49,004 - engine_logger:INFO - logger info level msg 
2020-10-26 17:24:49,004 - engine_logger:WARNING - logger warn level msg 
2020-10-26 17:24:49,004 - engine_logger:ERROR - logger error level msg 
2020-10-26 17:24:49,004 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 17:24:49,004 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 17:24:49,005 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 17:24:49,007 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 17:24:49,048 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:24:49,048 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 17:24:49,048 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 17:24:49,049 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 17:24:49,049 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 17:24:49,049 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 17:24:49,089 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:24:49,128 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:24:49,128 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-26 17:24:49,190 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:26:21,084 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:26:21,155 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:26:21,220 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:26:21,285 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:26:21,350 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:26:25,250 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 17:26:25,250 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 17:26:25,250 - engine_logger:INFO - logger info level msg 
2020-10-26 17:26:25,251 - engine_logger:WARNING - logger warn level msg 
2020-10-26 17:26:25,251 - engine_logger:ERROR - logger error level msg 
2020-10-26 17:26:25,251 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 17:26:25,251 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 17:26:25,251 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 17:26:25,252 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 17:26:25,261 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:26:25,261 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 17:26:25,261 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 17:26:25,261 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 17:26:25,261 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 17:26:25,261 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 17:26:25,270 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:26:25,279 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:26:25,279 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-26 17:26:25,340 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:26:25,406 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:26:25,468 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:26:25,530 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:26:25,591 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:26:25,653 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:26:42,185 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 17:26:42,185 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 17:26:42,185 - engine_logger:INFO - logger info level msg 
2020-10-26 17:26:42,185 - engine_logger:WARNING - logger warn level msg 
2020-10-26 17:26:42,185 - engine_logger:ERROR - logger error level msg 
2020-10-26 17:26:42,185 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 17:26:42,186 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 17:26:42,186 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 17:26:42,187 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 17:26:42,195 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:26:42,195 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 17:26:42,195 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 17:26:42,195 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 17:26:42,195 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 17:26:42,196 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 17:26:42,204 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:26:42,212 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:26:42,212 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-26 17:26:42,273 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:26:42,640 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-26 17:26:42,701 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:26:54,636 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:27:06,069 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:27:17,060 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:27:28,227 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:27:39,416 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:27:50,955 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:28:02,289 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:28:13,483 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:28:25,253 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:28:38,206 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:28:38,353 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:28:38,421 - engine_logger:INFO - Finished tuning model. Summary:
2020-10-26 17:47:55,513 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 17:47:55,514 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 17:47:55,514 - engine_logger:INFO - logger info level msg 
2020-10-26 17:47:55,514 - engine_logger:WARNING - logger warn level msg 
2020-10-26 17:47:55,514 - engine_logger:ERROR - logger error level msg 
2020-10-26 17:47:55,514 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 17:47:55,514 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 17:47:55,514 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 17:47:55,515 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 17:47:55,524 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:47:55,524 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 17:47:55,524 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 17:47:55,524 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 17:47:55,524 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 17:47:55,524 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 17:47:55,532 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:47:55,541 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:47:55,541 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-26 17:47:55,602 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:47:55,987 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-26 17:47:56,050 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:48:08,158 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:48:20,055 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:48:31,916 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:48:43,687 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:48:55,849 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:49:06,915 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 17:49:06,915 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 17:49:06,915 - engine_logger:INFO - logger info level msg 
2020-10-26 17:49:06,915 - engine_logger:WARNING - logger warn level msg 
2020-10-26 17:49:06,915 - engine_logger:ERROR - logger error level msg 
2020-10-26 17:49:06,916 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 17:49:06,916 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 17:49:06,916 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 17:49:06,917 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 17:49:06,925 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:49:06,925 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 17:49:06,925 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 17:49:06,925 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 17:49:06,926 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 17:49:06,926 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 17:49:06,934 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:49:06,943 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:49:06,943 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-26 17:49:07,005 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:49:07,074 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:49:07,137 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:49:07,201 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:49:07,265 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:49:07,328 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:51:09,240 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 17:51:09,240 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 17:51:09,240 - engine_logger:INFO - logger info level msg 
2020-10-26 17:51:09,240 - engine_logger:WARNING - logger warn level msg 
2020-10-26 17:51:09,240 - engine_logger:ERROR - logger error level msg 
2020-10-26 17:51:09,241 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 17:51:09,241 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 17:51:09,241 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 17:51:09,242 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 17:51:09,250 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:51:09,250 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 17:51:09,250 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 17:51:09,250 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 17:51:09,250 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 17:51:09,250 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 17:51:09,258 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:51:09,267 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 17:51:09,267 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-26 17:51:09,327 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:51:09,690 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-26 17:51:09,752 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:51:18,782 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:51:27,821 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:51:35,374 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:51:42,996 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:51:52,550 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:52:01,983 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:52:02,112 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 17:52:02,181 - engine_logger:INFO - Finished tuning model. Summary:
2020-10-26 20:36:15,556 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 20:36:15,556 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 20:36:15,556 - engine_logger:INFO - logger info level msg 
2020-10-26 20:36:15,556 - engine_logger:WARNING - logger warn level msg 
2020-10-26 20:36:15,556 - engine_logger:ERROR - logger error level msg 
2020-10-26 20:36:15,556 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 20:36:15,556 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 20:36:15,556 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 20:36:15,557 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 20:36:15,566 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 20:36:15,566 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 20:36:15,566 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 20:36:15,566 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 20:36:15,567 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 20:36:15,567 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 20:36:15,575 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 20:36:15,584 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 20:36:15,584 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-26 20:36:15,648 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 20:36:16,026 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-26 20:36:16,091 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 20:36:16,224 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 20:36:16,297 - engine_logger:INFO - Finished tuning model. Summary:
2020-10-26 20:36:25,980 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 20:36:25,980 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 20:36:25,980 - engine_logger:INFO - logger info level msg 
2020-10-26 20:36:25,980 - engine_logger:WARNING - logger warn level msg 
2020-10-26 20:36:25,980 - engine_logger:ERROR - logger error level msg 
2020-10-26 20:36:25,980 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 20:36:25,980 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 20:36:25,981 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 20:36:25,982 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 20:36:25,990 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 20:36:25,990 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 20:36:25,990 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 20:36:25,990 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 20:36:25,991 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 20:36:25,991 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 20:36:25,999 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 20:36:26,007 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 20:36:26,007 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-26 20:36:26,071 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 20:36:26,440 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-26 20:36:26,501 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 20:36:26,628 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 20:36:26,696 - engine_logger:INFO - Finished tuning model. Summary:
2020-10-26 20:37:06,938 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 20:37:06,938 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 20:37:06,938 - engine_logger:INFO - logger info level msg 
2020-10-26 20:37:06,938 - engine_logger:WARNING - logger warn level msg 
2020-10-26 20:37:06,938 - engine_logger:ERROR - logger error level msg 
2020-10-26 20:37:06,938 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 20:37:06,938 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 20:37:06,938 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 20:37:06,939 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 20:37:06,948 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 20:37:06,948 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 20:37:06,948 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 20:37:06,948 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 20:37:06,948 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 20:37:06,948 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 20:37:06,956 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 20:37:06,965 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 20:37:06,965 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-26 20:37:07,024 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 20:37:07,390 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-26 20:37:07,451 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 20:37:18,435 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 20:37:29,735 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 20:37:37,853 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 20:37:44,407 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 20:37:54,749 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 20:38:04,902 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 20:38:05,031 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 20:38:05,097 - engine_logger:INFO - Finished tuning model. Summary:
2020-10-26 20:41:03,500 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 20:41:03,500 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 20:41:03,500 - engine_logger:INFO - logger info level msg 
2020-10-26 20:41:03,500 - engine_logger:WARNING - logger warn level msg 
2020-10-26 20:41:03,500 - engine_logger:ERROR - logger error level msg 
2020-10-26 20:41:03,500 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 20:41:03,500 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 20:41:03,500 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 20:41:03,501 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 20:41:03,510 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 20:41:03,510 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 20:41:03,510 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 20:41:03,510 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 20:41:03,510 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 20:41:03,511 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 20:41:03,519 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 20:41:03,527 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 20:41:14,011 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 20:41:14,011 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 20:41:14,011 - engine_logger:INFO - logger info level msg 
2020-10-26 20:41:14,011 - engine_logger:WARNING - logger warn level msg 
2020-10-26 20:41:14,011 - engine_logger:ERROR - logger error level msg 
2020-10-26 20:41:14,011 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 20:41:14,011 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 20:41:14,011 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 20:41:14,012 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 20:41:14,021 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 20:41:14,021 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 20:41:14,021 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 20:41:14,021 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 20:41:14,021 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 20:41:14,021 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 20:41:14,029 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 20:41:14,037 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 20:41:14,037 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-26 20:41:14,101 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 20:41:14,470 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-26 20:41:14,531 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 20:41:14,660 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 20:41:14,724 - engine_logger:INFO - Finished tuning model. Summary:
2020-10-26 20:41:19,406 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 20:41:19,406 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 20:41:19,406 - engine_logger:INFO - logger info level msg 
2020-10-26 20:41:19,406 - engine_logger:WARNING - logger warn level msg 
2020-10-26 20:41:19,406 - engine_logger:ERROR - logger error level msg 
2020-10-26 20:41:19,406 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 20:41:19,406 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 20:41:19,406 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 20:41:19,407 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 20:41:19,416 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 20:41:19,416 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 20:41:19,416 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 20:41:19,416 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 20:41:19,416 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 20:41:19,417 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 20:41:19,425 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 20:41:19,433 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 20:41:19,433 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-26 20:41:19,497 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 20:41:19,868 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-26 20:41:19,929 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 20:41:20,059 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 20:41:20,123 - engine_logger:INFO - Finished tuning model. Summary:
2020-10-26 20:42:32,274 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-26 20:42:32,275 - engine_logger:DEBUG - logger debug level msg 
2020-10-26 20:42:32,275 - engine_logger:INFO - logger info level msg 
2020-10-26 20:42:32,275 - engine_logger:WARNING - logger warn level msg 
2020-10-26 20:42:32,275 - engine_logger:ERROR - logger error level msg 
2020-10-26 20:42:32,275 - engine_logger:CRITICAL - logger critical level msg 
2020-10-26 20:42:32,275 - engine_logger:INFO - Parsing args in ArgParser
2020-10-26 20:42:32,275 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-26 20:42:32,276 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-26 20:42:32,285 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 20:42:32,285 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-26 20:42:32,285 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optim, True
2020-10-26 20:42:32,285 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): optimizer, KerasTuner
2020-10-26 20:42:32,285 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TestModel
2020-10-26 20:42:32,285 - engine_logger:INFO - Done init in MainProgram.
2020-10-26 20:42:32,293 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 20:42:32,301 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'optim': True, 'optimizer': 'KerasTuner', 'model': 'TestModel'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-26 20:42:32,302 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-26 20:42:32,361 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 20:42:32,726 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-26 20:42:32,788 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 20:42:40,278 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 20:42:47,142 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 20:42:55,026 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 20:43:03,212 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 20:43:13,292 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 20:43:23,223 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 20:43:23,362 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-26 20:43:23,434 - engine_logger:INFO - Finished tuning model. Summary:
2020-10-27 16:35:50,091 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-27 16:35:50,091 - engine_logger:DEBUG - logger debug level msg 
2020-10-27 16:35:50,092 - engine_logger:INFO - logger info level msg 
2020-10-27 16:35:50,092 - engine_logger:WARNING - logger warn level msg 
2020-10-27 16:35:50,092 - engine_logger:ERROR - logger error level msg 
2020-10-27 16:35:50,092 - engine_logger:CRITICAL - logger critical level msg 
2020-10-27 16:35:50,092 - engine_logger:INFO - Parsing args in ArgParser
2020-10-27 16:35:50,092 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-27 16:35:50,093 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-27 16:35:50,101 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 16:35:50,101 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-27 16:35:50,101 - engine_logger:INFO - Done init in MainProgram.
2020-10-27 16:35:50,109 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 16:35:50,117 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 16:35:50,117 - engine_logger:INFO - Instantiating DigitsMNIST
2020-10-27 16:35:50,117 - engine_logger:INFO - Instantiating DigitsMNIST
2020-10-27 16:35:50,118 - engine_logger:INFO - Instantiating DefaultArch
2020-10-27 16:35:50,118 - engine_logger:INFO - Instantiating DefaultArch
2020-10-27 16:35:50,118 - engine_logger:INFO - Layers in _buildmodel: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}
2020-10-27 16:35:50,198 - engine_logger:INFO - Model instantiated in MP: DigitsMNIST
2020-10-27 16:35:50,486 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-27 16:35:55,094 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7f5888739c10>
2020-10-27 16:36:02,550 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-27 16:36:02,550 - engine_logger:DEBUG - logger debug level msg 
2020-10-27 16:36:02,550 - engine_logger:INFO - logger info level msg 
2020-10-27 16:36:02,550 - engine_logger:WARNING - logger warn level msg 
2020-10-27 16:36:02,550 - engine_logger:ERROR - logger error level msg 
2020-10-27 16:36:02,551 - engine_logger:CRITICAL - logger critical level msg 
2020-10-27 16:36:02,551 - engine_logger:INFO - Parsing args in ArgParser
2020-10-27 16:36:02,551 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-27 16:36:02,552 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-27 16:36:02,560 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 16:36:02,560 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-27 16:36:02,568 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 16:36:23,943 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-27 16:36:23,943 - engine_logger:DEBUG - logger debug level msg 
2020-10-27 16:36:23,943 - engine_logger:INFO - logger info level msg 
2020-10-27 16:36:23,943 - engine_logger:WARNING - logger warn level msg 
2020-10-27 16:36:23,943 - engine_logger:ERROR - logger error level msg 
2020-10-27 16:36:23,944 - engine_logger:CRITICAL - logger critical level msg 
2020-10-27 16:36:23,944 - engine_logger:INFO - Parsing args in ArgParser
2020-10-27 16:36:23,944 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-27 16:36:23,947 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-27 16:36:23,988 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 16:36:23,988 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-27 16:36:24,028 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 16:37:19,799 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-27 16:37:19,799 - engine_logger:DEBUG - logger debug level msg 
2020-10-27 16:37:19,799 - engine_logger:INFO - logger info level msg 
2020-10-27 16:37:19,800 - engine_logger:WARNING - logger warn level msg 
2020-10-27 16:37:19,800 - engine_logger:ERROR - logger error level msg 
2020-10-27 16:37:19,800 - engine_logger:CRITICAL - logger critical level msg 
2020-10-27 16:37:19,800 - engine_logger:INFO - Parsing args in ArgParser
2020-10-27 16:37:23,440 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 16:37:30,430 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 16:37:56,168 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-27 16:37:56,168 - engine_logger:DEBUG - logger debug level msg 
2020-10-27 16:37:56,169 - engine_logger:INFO - logger info level msg 
2020-10-27 16:37:56,169 - engine_logger:WARNING - logger warn level msg 
2020-10-27 16:37:56,169 - engine_logger:ERROR - logger error level msg 
2020-10-27 16:37:56,169 - engine_logger:CRITICAL - logger critical level msg 
2020-10-27 16:37:56,169 - engine_logger:INFO - Parsing args in ArgParser
2020-10-27 16:37:56,170 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-27 16:37:56,173 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-27 16:37:56,212 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 16:37:56,212 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-27 16:37:56,212 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-27 16:37:56,213 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, Tuner
2020-10-27 16:37:56,213 - engine_logger:INFO - Done init in MainProgram.
2020-10-27 16:37:56,251 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 16:37:56,290 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 16:37:56,290 - engine_logger:INFO - Instantiating Tuner
2020-10-27 16:37:56,290 - engine_logger:INFO - Instantiating Tuner
2020-10-27 16:37:56,290 - engine_logger:INFO - Instantiating DefaultArch
2020-10-27 16:37:56,290 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-27 16:37:56,355 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 16:37:56,787 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-27 16:37:56,846 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 16:38:46,964 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-27 16:38:46,964 - engine_logger:DEBUG - logger debug level msg 
2020-10-27 16:38:46,964 - engine_logger:INFO - logger info level msg 
2020-10-27 16:38:46,965 - engine_logger:WARNING - logger warn level msg 
2020-10-27 16:38:46,965 - engine_logger:ERROR - logger error level msg 
2020-10-27 16:38:46,965 - engine_logger:CRITICAL - logger critical level msg 
2020-10-27 16:38:46,965 - engine_logger:INFO - Parsing args in ArgParser
2020-10-27 16:38:46,965 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-27 16:38:46,966 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-27 16:38:46,975 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 16:38:46,975 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-27 16:38:46,975 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-27 16:38:46,975 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, Tuner
2020-10-27 16:38:46,975 - engine_logger:INFO - Done init in MainProgram.
2020-10-27 16:38:46,983 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 16:38:46,991 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 16:38:46,991 - engine_logger:INFO - Instantiating Tuner
2020-10-27 16:38:46,991 - engine_logger:INFO - Instantiating Tuner
2020-10-27 16:38:46,991 - engine_logger:INFO - Instantiating DefaultArch
2020-10-27 16:38:46,991 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-27 16:38:47,050 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 16:38:47,430 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-27 16:38:47,492 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 16:39:01,846 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 16:39:15,521 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 16:39:30,562 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 16:39:43,469 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 16:39:55,950 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 16:40:07,726 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 16:40:07,863 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 16:40:07,931 - engine_logger:INFO - Finished tuning model. Summary:
2020-10-27 16:51:53,660 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-27 16:51:53,661 - engine_logger:DEBUG - logger debug level msg 
2020-10-27 16:51:53,661 - engine_logger:INFO - logger info level msg 
2020-10-27 16:51:53,661 - engine_logger:WARNING - logger warn level msg 
2020-10-27 16:51:53,661 - engine_logger:ERROR - logger error level msg 
2020-10-27 16:51:53,661 - engine_logger:CRITICAL - logger critical level msg 
2020-10-27 16:51:53,661 - engine_logger:INFO - Parsing args in ArgParser
2020-10-27 16:51:53,661 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-27 16:51:53,662 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-27 16:51:53,671 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 16:51:53,671 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-27 16:51:53,671 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-27 16:51:53,671 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, Tuner
2020-10-27 16:51:53,671 - engine_logger:INFO - Done init in MainProgram.
2020-10-27 16:51:53,679 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 16:51:53,687 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 16:51:53,687 - engine_logger:INFO - Instantiating Tuner
2020-10-27 16:51:53,687 - engine_logger:INFO - Instantiating Tuner
2020-10-27 16:51:53,687 - engine_logger:INFO - Instantiating DefaultArch
2020-10-27 16:51:53,687 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-27 16:51:53,752 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 16:51:54,131 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-27 16:51:54,191 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 16:51:54,322 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 16:51:54,396 - engine_logger:INFO - Finished tuning model. Summary:
2020-10-27 16:53:06,418 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-27 16:53:06,418 - engine_logger:DEBUG - logger debug level msg 
2020-10-27 16:53:06,419 - engine_logger:INFO - logger info level msg 
2020-10-27 16:53:06,419 - engine_logger:WARNING - logger warn level msg 
2020-10-27 16:53:06,419 - engine_logger:ERROR - logger error level msg 
2020-10-27 16:53:06,419 - engine_logger:CRITICAL - logger critical level msg 
2020-10-27 16:53:06,419 - engine_logger:INFO - Parsing args in ArgParser
2020-10-27 16:53:06,419 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-27 16:53:06,420 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-27 16:53:06,428 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 16:53:06,428 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-27 16:53:06,428 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-27 16:53:06,429 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, Tuner
2020-10-27 16:53:06,429 - engine_logger:INFO - Done init in MainProgram.
2020-10-27 16:53:06,436 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 16:53:06,444 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 16:53:06,444 - engine_logger:INFO - Instantiating Tuner
2020-10-27 16:53:06,444 - engine_logger:INFO - Instantiating Tuner
2020-10-27 16:53:06,445 - engine_logger:INFO - Instantiating DefaultArch
2020-10-27 16:53:06,445 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-27 16:53:06,509 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 16:53:06,848 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-27 16:53:06,901 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 16:53:07,016 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 16:53:07,075 - engine_logger:INFO - Finished tuning model. Summary:
2020-10-27 16:53:14,289 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-27 16:53:14,289 - engine_logger:DEBUG - logger debug level msg 
2020-10-27 16:53:14,289 - engine_logger:INFO - logger info level msg 
2020-10-27 16:53:14,289 - engine_logger:WARNING - logger warn level msg 
2020-10-27 16:53:14,289 - engine_logger:ERROR - logger error level msg 
2020-10-27 16:53:14,290 - engine_logger:CRITICAL - logger critical level msg 
2020-10-27 16:53:14,290 - engine_logger:INFO - Parsing args in ArgParser
2020-10-27 16:53:14,290 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-27 16:53:14,291 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-27 16:53:14,299 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 16:53:14,299 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-27 16:53:14,300 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-27 16:53:14,300 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, Tuner
2020-10-27 16:53:14,300 - engine_logger:INFO - Done init in MainProgram.
2020-10-27 16:53:14,308 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 16:53:14,316 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 16:53:14,316 - engine_logger:INFO - Instantiating Tuner
2020-10-27 16:53:14,316 - engine_logger:INFO - Instantiating Tuner
2020-10-27 16:53:14,316 - engine_logger:INFO - Instantiating DefaultArch
2020-10-27 16:53:14,316 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-27 16:53:14,375 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 16:53:14,752 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-27 16:53:14,813 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 16:53:29,333 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 16:53:45,686 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 16:53:58,396 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 16:54:11,376 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 16:54:25,238 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 16:54:37,219 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 16:54:37,349 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 16:54:37,417 - engine_logger:INFO - Finished tuning model. Summary:
2020-10-27 17:05:30,742 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-27 17:05:30,742 - engine_logger:DEBUG - logger debug level msg 
2020-10-27 17:05:30,742 - engine_logger:INFO - logger info level msg 
2020-10-27 17:05:30,743 - engine_logger:WARNING - logger warn level msg 
2020-10-27 17:05:30,743 - engine_logger:ERROR - logger error level msg 
2020-10-27 17:05:30,743 - engine_logger:CRITICAL - logger critical level msg 
2020-10-27 17:05:30,743 - engine_logger:INFO - Parsing args in ArgParser
2020-10-27 17:05:30,743 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-27 17:05:30,746 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-27 17:05:30,786 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 17:05:30,787 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-27 17:05:30,787 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-27 17:05:30,787 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, Tuner
2020-10-27 17:05:30,787 - engine_logger:INFO - Done init in MainProgram.
2020-10-27 17:05:30,826 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 17:05:30,865 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 17:05:30,865 - engine_logger:INFO - Instantiating Tuner
2020-10-27 17:05:30,865 - engine_logger:INFO - Instantiating Tuner
2020-10-27 17:05:30,865 - engine_logger:INFO - Instantiating DefaultArch
2020-10-27 17:05:30,866 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-27 17:05:30,933 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 17:06:17,591 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-27 17:06:17,591 - engine_logger:DEBUG - logger debug level msg 
2020-10-27 17:06:17,592 - engine_logger:INFO - logger info level msg 
2020-10-27 17:06:17,592 - engine_logger:WARNING - logger warn level msg 
2020-10-27 17:06:17,592 - engine_logger:ERROR - logger error level msg 
2020-10-27 17:06:17,592 - engine_logger:CRITICAL - logger critical level msg 
2020-10-27 17:06:17,593 - engine_logger:INFO - Parsing args in ArgParser
2020-10-27 17:06:17,593 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-27 17:06:17,596 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-27 17:06:17,635 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 17:06:17,636 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-27 17:06:17,636 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-27 17:06:17,636 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, Tuner
2020-10-27 17:06:17,636 - engine_logger:INFO - Done init in MainProgram.
2020-10-27 17:06:17,675 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 17:06:17,714 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 17:06:17,714 - engine_logger:INFO - Instantiating Tuner
2020-10-27 17:06:17,715 - engine_logger:INFO - Instantiating Tuner
2020-10-27 17:06:17,715 - engine_logger:INFO - Instantiating DefaultArch
2020-10-27 17:06:17,715 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-27 17:06:17,784 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 17:09:00,409 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-27 17:09:00,410 - engine_logger:DEBUG - logger debug level msg 
2020-10-27 17:09:00,410 - engine_logger:INFO - logger info level msg 
2020-10-27 17:09:00,410 - engine_logger:WARNING - logger warn level msg 
2020-10-27 17:09:00,410 - engine_logger:ERROR - logger error level msg 
2020-10-27 17:09:00,410 - engine_logger:CRITICAL - logger critical level msg 
2020-10-27 17:09:00,410 - engine_logger:INFO - Parsing args in ArgParser
2020-10-27 17:09:00,410 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-27 17:09:00,411 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-27 17:09:00,420 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 17:09:00,420 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-27 17:09:00,420 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-27 17:09:00,420 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, Tuner
2020-10-27 17:09:00,420 - engine_logger:INFO - Done init in MainProgram.
2020-10-27 17:09:00,428 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 17:09:00,436 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 17:09:00,436 - engine_logger:INFO - Instantiating Tuner
2020-10-27 17:09:00,436 - engine_logger:INFO - Instantiating Tuner
2020-10-27 17:09:00,436 - engine_logger:INFO - Instantiating DefaultArch
2020-10-27 17:09:00,436 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-27 17:09:00,501 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 17:09:00,882 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-27 17:09:00,942 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 17:09:01,074 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 17:09:01,145 - engine_logger:INFO - Finished tuning model. Summary:
2020-10-27 17:09:11,647 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-27 17:09:11,647 - engine_logger:DEBUG - logger debug level msg 
2020-10-27 17:09:11,647 - engine_logger:INFO - logger info level msg 
2020-10-27 17:09:11,647 - engine_logger:WARNING - logger warn level msg 
2020-10-27 17:09:11,647 - engine_logger:ERROR - logger error level msg 
2020-10-27 17:09:11,648 - engine_logger:CRITICAL - logger critical level msg 
2020-10-27 17:09:11,648 - engine_logger:INFO - Parsing args in ArgParser
2020-10-27 17:09:11,648 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-27 17:09:11,649 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-27 17:09:11,657 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 17:09:11,657 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-27 17:09:11,658 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-27 17:09:11,658 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, Tuner
2020-10-27 17:09:11,658 - engine_logger:INFO - Done init in MainProgram.
2020-10-27 17:09:11,665 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 17:09:11,673 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 17:09:11,673 - engine_logger:INFO - Instantiating Tuner
2020-10-27 17:09:11,673 - engine_logger:INFO - Instantiating Tuner
2020-10-27 17:09:11,674 - engine_logger:INFO - Instantiating DefaultArch
2020-10-27 17:09:11,674 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-27 17:09:11,733 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 17:09:12,105 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-27 17:09:12,167 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 17:09:12,222 - engine_logger:ERROR - Failed to tuner.search: Data cardinality is ambiguous:
  x sizes: 30000
  y sizes: 60000
Please provide data which shares the same first dimension.
2020-10-27 17:09:12,224 - engine_logger:INFO - Finished tuning model. Summary:
2020-10-27 17:09:29,270 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-27 17:09:29,270 - engine_logger:DEBUG - logger debug level msg 
2020-10-27 17:09:29,270 - engine_logger:INFO - logger info level msg 
2020-10-27 17:09:29,270 - engine_logger:WARNING - logger warn level msg 
2020-10-27 17:09:29,271 - engine_logger:ERROR - logger error level msg 
2020-10-27 17:09:29,271 - engine_logger:CRITICAL - logger critical level msg 
2020-10-27 17:09:29,271 - engine_logger:INFO - Parsing args in ArgParser
2020-10-27 17:09:29,271 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-27 17:09:29,272 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-27 17:09:29,281 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 17:09:29,281 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-27 17:09:29,281 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-27 17:09:29,281 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, Tuner
2020-10-27 17:09:29,281 - engine_logger:INFO - Done init in MainProgram.
2020-10-27 17:09:29,289 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 17:09:29,297 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 17:09:29,297 - engine_logger:INFO - Instantiating Tuner
2020-10-27 17:09:29,297 - engine_logger:INFO - Instantiating Tuner
2020-10-27 17:09:29,297 - engine_logger:INFO - Instantiating DefaultArch
2020-10-27 17:09:29,297 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-27 17:09:29,356 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 17:09:29,731 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-27 17:09:29,793 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 17:09:29,850 - engine_logger:ERROR - Failed to tuner.search: Data cardinality is ambiguous:
  x sizes: 30000
  y sizes: 60000
Please provide data which shares the same first dimension.
2020-10-27 17:09:29,852 - engine_logger:INFO - Finished tuning model. Summary:
2020-10-27 17:10:18,642 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-27 17:10:18,643 - engine_logger:DEBUG - logger debug level msg 
2020-10-27 17:10:18,645 - engine_logger:INFO - logger info level msg 
2020-10-27 17:10:18,645 - engine_logger:WARNING - logger warn level msg 
2020-10-27 17:10:18,645 - engine_logger:ERROR - logger error level msg 
2020-10-27 17:10:18,646 - engine_logger:CRITICAL - logger critical level msg 
2020-10-27 17:10:18,646 - engine_logger:INFO - Parsing args in ArgParser
2020-10-27 17:10:18,646 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-27 17:10:18,649 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-27 17:10:18,688 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 17:10:18,689 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-27 17:10:18,689 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-27 17:10:18,689 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, Tuner
2020-10-27 17:10:18,689 - engine_logger:INFO - Done init in MainProgram.
2020-10-27 17:10:18,728 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 17:10:18,767 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 17:10:18,767 - engine_logger:INFO - Instantiating Tuner
2020-10-27 17:10:18,767 - engine_logger:INFO - Instantiating Tuner
2020-10-27 17:10:18,768 - engine_logger:INFO - Instantiating DefaultArch
2020-10-27 17:10:18,768 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-27 17:10:18,830 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 17:11:19,813 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-27 17:11:19,813 - engine_logger:DEBUG - logger debug level msg 
2020-10-27 17:11:19,813 - engine_logger:INFO - logger info level msg 
2020-10-27 17:11:19,813 - engine_logger:WARNING - logger warn level msg 
2020-10-27 17:11:19,813 - engine_logger:ERROR - logger error level msg 
2020-10-27 17:11:19,813 - engine_logger:CRITICAL - logger critical level msg 
2020-10-27 17:11:19,813 - engine_logger:INFO - Parsing args in ArgParser
2020-10-27 17:11:19,814 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-27 17:11:19,815 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-27 17:11:19,823 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 17:11:19,823 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-27 17:11:19,823 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-27 17:11:19,823 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, Tuner
2020-10-27 17:11:19,823 - engine_logger:INFO - Done init in MainProgram.
2020-10-27 17:11:19,831 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 17:11:19,839 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 17:11:19,839 - engine_logger:INFO - Instantiating Tuner
2020-10-27 17:11:19,839 - engine_logger:INFO - Instantiating Tuner
2020-10-27 17:11:19,840 - engine_logger:INFO - Instantiating DefaultArch
2020-10-27 17:11:19,840 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-27 17:11:19,901 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 17:11:20,234 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-27 17:11:20,287 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 17:11:26,734 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 17:11:32,888 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 17:11:39,763 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 17:11:46,362 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 17:11:50,197 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 17:11:54,553 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 17:11:54,684 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 17:11:54,748 - engine_logger:INFO - Finished tuning model. Summary:
2020-10-27 17:12:23,097 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-27 17:12:23,097 - engine_logger:DEBUG - logger debug level msg 
2020-10-27 17:12:23,097 - engine_logger:INFO - logger info level msg 
2020-10-27 17:12:23,097 - engine_logger:WARNING - logger warn level msg 
2020-10-27 17:12:23,097 - engine_logger:ERROR - logger error level msg 
2020-10-27 17:12:23,097 - engine_logger:CRITICAL - logger critical level msg 
2020-10-27 17:12:23,097 - engine_logger:INFO - Parsing args in ArgParser
2020-10-27 17:12:23,097 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-27 17:12:23,099 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-27 17:12:23,107 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 17:12:23,107 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-27 17:12:23,107 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-27 17:12:23,107 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, Tuner
2020-10-27 17:12:23,107 - engine_logger:INFO - Done init in MainProgram.
2020-10-27 17:12:23,115 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 17:12:23,123 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 17:12:23,123 - engine_logger:INFO - Instantiating Tuner
2020-10-27 17:12:23,123 - engine_logger:INFO - Instantiating Tuner
2020-10-27 17:12:23,123 - engine_logger:INFO - Instantiating DefaultArch
2020-10-27 17:12:23,124 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-27 17:12:23,189 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 17:12:23,569 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-27 17:12:23,630 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 17:12:23,756 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 17:12:23,820 - engine_logger:INFO - Finished tuning model. Summary:
2020-10-27 17:12:32,231 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-27 17:12:32,231 - engine_logger:DEBUG - logger debug level msg 
2020-10-27 17:12:32,231 - engine_logger:INFO - logger info level msg 
2020-10-27 17:12:32,231 - engine_logger:WARNING - logger warn level msg 
2020-10-27 17:12:32,231 - engine_logger:ERROR - logger error level msg 
2020-10-27 17:12:32,231 - engine_logger:CRITICAL - logger critical level msg 
2020-10-27 17:12:32,231 - engine_logger:INFO - Parsing args in ArgParser
2020-10-27 17:12:32,231 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-27 17:12:32,233 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-27 17:12:32,241 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 17:12:32,241 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-27 17:12:32,241 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-27 17:12:32,241 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, Tuner
2020-10-27 17:12:32,241 - engine_logger:INFO - Done init in MainProgram.
2020-10-27 17:12:32,249 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 17:12:32,257 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}}}
2020-10-27 17:12:32,257 - engine_logger:INFO - Instantiating Tuner
2020-10-27 17:12:32,257 - engine_logger:INFO - Instantiating Tuner
2020-10-27 17:12:32,257 - engine_logger:INFO - Instantiating DefaultArch
2020-10-27 17:12:32,257 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-27 17:12:32,317 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 17:12:32,694 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-27 17:12:32,755 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 17:12:35,945 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 17:12:40,065 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 17:12:44,027 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 17:12:47,865 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 17:12:51,297 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 17:12:54,974 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 17:12:55,105 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]}
2020-10-27 17:12:55,172 - engine_logger:INFO - Finished tuning model. Summary:
2020-10-27 17:54:57,320 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-27 17:54:57,320 - engine_logger:DEBUG - logger debug level msg 
2020-10-27 17:54:57,320 - engine_logger:INFO - logger info level msg 
2020-10-27 17:54:57,320 - engine_logger:WARNING - logger warn level msg 
2020-10-27 17:54:57,320 - engine_logger:ERROR - logger error level msg 
2020-10-27 17:54:57,320 - engine_logger:CRITICAL - logger critical level msg 
2020-10-27 17:54:57,320 - engine_logger:INFO - Parsing args in ArgParser
2020-10-27 17:54:57,320 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-27 17:54:57,321 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-27 17:54:57,330 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'optimizer': 'rmsprop', 'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-27 17:54:57,330 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-27 17:54:57,330 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-27 17:54:57,330 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, Tuner
2020-10-27 17:54:57,330 - engine_logger:INFO - Done init in MainProgram.
2020-10-27 17:54:57,339 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'optimizer': 'rmsprop', 'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-27 17:54:57,348 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'optimizer': 'rmsprop', 'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-27 17:54:57,348 - engine_logger:INFO - Instantiating Tuner
2020-10-27 17:54:57,348 - engine_logger:INFO - Instantiating Tuner
2020-10-27 17:54:57,348 - engine_logger:INFO - Instantiating DefaultArch
2020-10-27 17:54:57,348 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-27 17:54:57,413 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'optimizer': 'rmsprop', 'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-27 17:54:57,555 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'optimizer': 'rmsprop', 'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-27 17:54:57,646 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'optimizer': 'rmsprop', 'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-27 17:54:57,740 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'optimizer': 'rmsprop', 'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-27 17:54:57,838 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'optimizer': 'rmsprop', 'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-27 17:54:57,931 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'optimizer': 'rmsprop', 'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-27 17:55:11,257 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-27 17:55:11,257 - engine_logger:DEBUG - logger debug level msg 
2020-10-27 17:55:11,257 - engine_logger:INFO - logger info level msg 
2020-10-27 17:55:11,257 - engine_logger:WARNING - logger warn level msg 
2020-10-27 17:55:11,258 - engine_logger:ERROR - logger error level msg 
2020-10-27 17:55:11,258 - engine_logger:CRITICAL - logger critical level msg 
2020-10-27 17:55:11,258 - engine_logger:INFO - Parsing args in ArgParser
2020-10-27 17:55:11,258 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-27 17:55:11,259 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-27 17:55:11,268 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-27 17:55:11,268 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-27 17:55:11,268 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-27 17:55:11,268 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, Tuner
2020-10-27 17:55:11,268 - engine_logger:INFO - Done init in MainProgram.
2020-10-27 17:55:11,277 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-27 17:55:11,286 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-27 17:55:11,286 - engine_logger:INFO - Instantiating Tuner
2020-10-27 17:55:11,286 - engine_logger:INFO - Instantiating Tuner
2020-10-27 17:55:11,286 - engine_logger:INFO - Instantiating DefaultArch
2020-10-27 17:55:11,286 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-27 17:55:11,351 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-27 17:55:11,729 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-27 17:55:11,790 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-27 17:55:11,921 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-27 17:55:11,987 - engine_logger:INFO - Finished tuning model. Summary:
2020-10-27 17:55:22,123 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-27 17:55:22,124 - engine_logger:DEBUG - logger debug level msg 
2020-10-27 17:55:22,124 - engine_logger:INFO - logger info level msg 
2020-10-27 17:55:22,124 - engine_logger:WARNING - logger warn level msg 
2020-10-27 17:55:22,124 - engine_logger:ERROR - logger error level msg 
2020-10-27 17:55:22,124 - engine_logger:CRITICAL - logger critical level msg 
2020-10-27 17:55:22,124 - engine_logger:INFO - Parsing args in ArgParser
2020-10-27 17:55:22,124 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-27 17:55:22,125 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-27 17:55:22,134 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-27 17:55:22,134 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-27 17:55:22,134 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-27 17:55:22,134 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, Tuner
2020-10-27 17:55:22,134 - engine_logger:INFO - Done init in MainProgram.
2020-10-27 17:55:22,143 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-27 17:55:22,151 - engine_logger:INFO - Loaded yaml configs: {'default': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'tuner': {'main_program': {'tuner': True, 'model': 'Tuner'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-27 17:55:22,152 - engine_logger:INFO - Instantiating Tuner
2020-10-27 17:55:22,152 - engine_logger:INFO - Instantiating Tuner
2020-10-27 17:55:22,152 - engine_logger:INFO - Instantiating DefaultArch
2020-10-27 17:55:22,152 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-27 17:55:22,211 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-27 17:55:22,589 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-27 17:55:22,650 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-27 17:55:25,773 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-27 17:55:28,901 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-27 17:55:32,025 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-27 17:55:35,949 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-27 17:55:39,588 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-27 17:55:43,471 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-27 17:55:43,603 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-27 17:55:43,673 - engine_logger:INFO - Finished tuning model. Summary:
2020-10-27 18:43:21,773 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-27 18:43:21,773 - engine_logger:DEBUG - logger debug level msg 
2020-10-27 18:43:21,773 - engine_logger:INFO - logger info level msg 
2020-10-27 18:43:21,773 - engine_logger:WARNING - logger warn level msg 
2020-10-27 18:43:21,773 - engine_logger:ERROR - logger error level msg 
2020-10-27 18:43:21,773 - engine_logger:CRITICAL - logger critical level msg 
2020-10-27 18:43:21,773 - engine_logger:INFO - Parsing args in ArgParser
2020-10-27 18:43:21,774 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-27 18:43:21,775 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-27 18:43:40,037 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-27 18:43:40,037 - engine_logger:DEBUG - logger debug level msg 
2020-10-27 18:43:40,037 - engine_logger:INFO - logger info level msg 
2020-10-27 18:43:40,037 - engine_logger:WARNING - logger warn level msg 
2020-10-27 18:43:40,037 - engine_logger:ERROR - logger error level msg 
2020-10-27 18:43:40,037 - engine_logger:CRITICAL - logger critical level msg 
2020-10-27 18:43:40,037 - engine_logger:INFO - Parsing args in ArgParser
2020-10-27 18:43:40,037 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-27 18:43:40,039 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-27 18:43:40,051 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'DigitsMNIST', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-27 18:43:40,051 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-27 18:43:40,051 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-27 18:43:40,051 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-27 18:43:40,051 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-27 18:43:40,051 - engine_logger:INFO - Done init in MainProgram.
2020-10-27 18:43:40,062 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'DigitsMNIST', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-27 18:43:40,075 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'DigitsMNIST', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-27 18:43:40,075 - engine_logger:INFO - Instantiating DigitsMNIST
2020-10-27 18:43:40,075 - engine_logger:INFO - Instantiating DigitsMNIST
2020-10-27 18:43:40,075 - engine_logger:INFO - Instantiating DefaultArch
2020-10-27 18:43:40,075 - engine_logger:INFO - Instantiating DefaultArch
2020-10-27 18:44:05,889 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-27 18:44:05,889 - engine_logger:DEBUG - logger debug level msg 
2020-10-27 18:44:05,889 - engine_logger:INFO - logger info level msg 
2020-10-27 18:44:05,889 - engine_logger:WARNING - logger warn level msg 
2020-10-27 18:44:05,889 - engine_logger:ERROR - logger error level msg 
2020-10-27 18:44:05,890 - engine_logger:CRITICAL - logger critical level msg 
2020-10-27 18:44:05,890 - engine_logger:INFO - Parsing args in ArgParser
2020-10-27 18:44:05,890 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-27 18:44:05,891 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-27 18:44:05,902 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'DigitsMNIST', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-27 18:44:05,903 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-27 18:44:05,903 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-27 18:44:05,903 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-27 18:44:05,903 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-27 18:44:05,903 - engine_logger:INFO - Done init in MainProgram.
2020-10-27 18:44:05,914 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'DigitsMNIST', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-27 18:44:05,926 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'DigitsMNIST', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-27 18:44:05,926 - engine_logger:INFO - Instantiating DigitsMNIST
2020-10-27 18:44:05,926 - engine_logger:INFO - Instantiating DigitsMNIST
2020-10-27 18:44:05,927 - engine_logger:INFO - Instantiating DefaultArch
2020-10-27 18:44:05,927 - engine_logger:INFO - Instantiating DefaultArch
2020-10-27 18:44:05,927 - engine_logger:INFO - Layers in _buildmodel: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-27 18:44:29,617 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-27 18:44:29,617 - engine_logger:DEBUG - logger debug level msg 
2020-10-27 18:44:29,617 - engine_logger:INFO - logger info level msg 
2020-10-27 18:44:29,618 - engine_logger:WARNING - logger warn level msg 
2020-10-27 18:44:29,618 - engine_logger:ERROR - logger error level msg 
2020-10-27 18:44:29,618 - engine_logger:CRITICAL - logger critical level msg 
2020-10-27 18:44:29,618 - engine_logger:INFO - Parsing args in ArgParser
2020-10-27 18:44:29,619 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-27 18:44:29,622 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-27 18:44:29,689 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'DigitsMNIST', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-27 18:44:29,689 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-27 18:44:29,690 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-27 18:44:29,690 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-27 18:44:29,690 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-27 18:44:29,690 - engine_logger:INFO - Done init in MainProgram.
2020-10-27 18:44:29,756 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'DigitsMNIST', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-27 18:44:29,821 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'DigitsMNIST', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-27 18:44:29,822 - engine_logger:INFO - Instantiating DigitsMNIST
2020-10-27 18:44:29,822 - engine_logger:INFO - Instantiating DigitsMNIST
2020-10-27 18:44:29,822 - engine_logger:INFO - Instantiating DefaultArch
2020-10-27 18:44:29,822 - engine_logger:INFO - Instantiating DefaultArch
2020-10-27 18:44:29,823 - engine_logger:INFO - Layers in _buildmodel: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-27 18:45:52,365 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-27 18:45:52,366 - engine_logger:DEBUG - logger debug level msg 
2020-10-27 18:45:52,366 - engine_logger:INFO - logger info level msg 
2020-10-27 18:45:52,366 - engine_logger:WARNING - logger warn level msg 
2020-10-27 18:45:52,366 - engine_logger:ERROR - logger error level msg 
2020-10-27 18:45:52,366 - engine_logger:CRITICAL - logger critical level msg 
2020-10-27 18:45:52,366 - engine_logger:INFO - Parsing args in ArgParser
2020-10-27 18:45:52,366 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-27 18:45:52,367 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-27 18:45:52,379 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'DigitsMNIST', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-27 18:45:52,379 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-27 18:45:52,379 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-27 18:45:52,379 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-27 18:45:52,379 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-27 18:45:52,379 - engine_logger:INFO - Done init in MainProgram.
2020-10-27 18:45:52,390 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'DigitsMNIST', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-27 18:45:52,402 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'DigitsMNIST', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-27 18:45:52,402 - engine_logger:INFO - Instantiating DigitsMNIST
2020-10-27 18:45:52,402 - engine_logger:INFO - Instantiating DigitsMNIST
2020-10-27 18:45:52,402 - engine_logger:INFO - Instantiating DefaultArch
2020-10-27 18:45:52,403 - engine_logger:INFO - Instantiating DefaultArch
2020-10-27 18:45:52,403 - engine_logger:INFO - Layers in _buildmodel: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 07:31:10,922 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 07:31:10,922 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 07:31:10,922 - engine_logger:INFO - logger info level msg 
2020-10-28 07:31:10,922 - engine_logger:WARNING - logger warn level msg 
2020-10-28 07:31:10,922 - engine_logger:ERROR - logger error level msg 
2020-10-28 07:31:10,922 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 07:31:10,922 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 07:31:10,922 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 07:31:10,924 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-28 07:31:10,935 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'DigitsMNIST', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 07:31:10,936 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-28 07:31:10,936 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 07:31:10,936 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-28 07:31:10,936 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 07:31:10,936 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 07:31:10,947 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'DigitsMNIST', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 07:31:10,959 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'DigitsMNIST', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 07:31:10,959 - engine_logger:INFO - Instantiating DigitsMNIST
2020-10-28 07:31:10,959 - engine_logger:INFO - Instantiating DigitsMNIST
2020-10-28 07:31:10,959 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 07:31:10,959 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 07:31:10,959 - engine_logger:INFO - Layers in _buildmodel: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 07:35:44,191 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 07:35:44,191 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 07:35:44,191 - engine_logger:INFO - logger info level msg 
2020-10-28 07:35:44,191 - engine_logger:WARNING - logger warn level msg 
2020-10-28 07:35:44,191 - engine_logger:ERROR - logger error level msg 
2020-10-28 07:35:44,191 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 07:35:44,191 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 07:35:44,192 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 07:35:44,193 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-28 07:35:44,204 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'DigitsMNIST', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 07:35:44,204 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-28 07:35:44,205 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 07:35:44,205 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-28 07:35:44,205 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 07:35:44,205 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 07:35:44,216 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'DigitsMNIST', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 07:35:44,228 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'DigitsMNIST', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 07:35:44,228 - engine_logger:INFO - Instantiating DigitsMNIST
2020-10-28 07:35:44,228 - engine_logger:INFO - Instantiating DigitsMNIST
2020-10-28 07:35:44,228 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 07:35:44,228 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 07:35:44,228 - engine_logger:INFO - Layers in _buildmodel: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 07:36:01,663 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 07:36:01,663 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 07:36:01,663 - engine_logger:INFO - logger info level msg 
2020-10-28 07:36:01,663 - engine_logger:WARNING - logger warn level msg 
2020-10-28 07:36:01,664 - engine_logger:ERROR - logger error level msg 
2020-10-28 07:36:01,664 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 07:36:01,664 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 07:36:01,664 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 07:36:01,667 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-28 07:36:01,723 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'DigitsMNIST', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 07:36:01,724 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-28 07:36:01,724 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 07:36:01,724 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-28 07:36:01,724 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 07:36:01,724 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 07:36:01,779 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'DigitsMNIST', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 07:36:01,834 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'DigitsMNIST', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 07:36:01,834 - engine_logger:INFO - Instantiating DigitsMNIST
2020-10-28 07:36:01,834 - engine_logger:INFO - Instantiating DigitsMNIST
2020-10-28 07:36:01,835 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 07:36:01,835 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 07:36:01,835 - engine_logger:INFO - Layers in _buildmodel: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 07:37:43,447 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'DigitsMNIST', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 07:37:49,501 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'DigitsMNIST', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 07:37:49,530 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'DigitsMNIST', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 07:37:49,551 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'DigitsMNIST', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 07:37:49,568 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'DigitsMNIST', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 07:37:49,610 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'DigitsMNIST', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 07:37:49,635 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'DigitsMNIST', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 07:37:49,658 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'DigitsMNIST', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 07:38:24,325 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'DigitsMNIST', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 07:39:22,280 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 07:39:22,280 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 07:39:22,280 - engine_logger:INFO - logger info level msg 
2020-10-28 07:39:22,281 - engine_logger:WARNING - logger warn level msg 
2020-10-28 07:39:22,281 - engine_logger:ERROR - logger error level msg 
2020-10-28 07:39:22,281 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 07:39:22,281 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 07:39:22,281 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 07:39:22,285 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-28 07:39:22,352 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'Tuner', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 07:39:22,352 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-28 07:39:22,353 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 07:39:22,353 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, Tuner
2020-10-28 07:39:22,353 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 07:39:22,353 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 07:39:22,418 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'Tuner', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 07:39:22,474 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'Tuner', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 07:39:22,474 - engine_logger:INFO - Instantiating Tuner
2020-10-28 07:39:22,475 - engine_logger:INFO - Instantiating Tuner
2020-10-28 07:39:22,475 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 07:39:24,965 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'Tuner', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 07:39:24,979 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'Tuner', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 07:39:24,992 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'Tuner', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 07:39:25,005 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'Tuner', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 07:39:25,032 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'Tuner', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 07:39:25,049 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'Tuner', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 07:39:25,064 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'Tuner', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 07:39:31,082 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 07:39:31,082 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 07:39:31,082 - engine_logger:INFO - logger info level msg 
2020-10-28 07:39:31,082 - engine_logger:WARNING - logger warn level msg 
2020-10-28 07:39:31,083 - engine_logger:ERROR - logger error level msg 
2020-10-28 07:39:31,083 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 07:39:31,083 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 07:39:31,083 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 07:39:31,084 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-28 07:39:31,096 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'Tuner', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 07:39:31,096 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-28 07:39:31,096 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 07:39:31,096 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, Tuner
2020-10-28 07:39:31,096 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 07:39:31,096 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 07:39:31,108 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'Tuner', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 07:39:31,120 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'Tuner', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 07:39:31,120 - engine_logger:INFO - Instantiating Tuner
2020-10-28 07:39:31,120 - engine_logger:INFO - Instantiating Tuner
2020-10-28 07:39:31,120 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 07:39:31,120 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-28 07:39:31,184 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 07:39:31,564 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 07:39:31,624 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 07:39:31,755 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 07:39:31,826 - engine_logger:INFO - Finished tuning model. Summary:
2020-10-28 07:39:42,973 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 07:39:42,973 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 07:39:42,973 - engine_logger:INFO - logger info level msg 
2020-10-28 07:39:42,973 - engine_logger:WARNING - logger warn level msg 
2020-10-28 07:39:42,973 - engine_logger:ERROR - logger error level msg 
2020-10-28 07:39:42,973 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 07:39:42,973 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 07:39:42,973 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 07:39:42,974 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-28 07:39:42,986 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'Tuner', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 07:39:42,986 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, DigitsMNIST
2020-10-28 07:39:42,986 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 07:39:42,986 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, Tuner
2020-10-28 07:39:42,987 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 07:39:42,987 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 07:39:42,998 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'Tuner', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 07:39:43,010 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'DigitsMNIST'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'DigitsMNIST', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'Tuner', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 07:39:43,010 - engine_logger:INFO - Instantiating Tuner
2020-10-28 07:39:43,010 - engine_logger:INFO - Instantiating Tuner
2020-10-28 07:39:43,010 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 07:39:43,010 - engine_logger:INFO - Model instantiated in MP: Tuner
2020-10-28 07:39:43,069 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 07:39:43,445 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 07:39:43,509 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 07:39:46,533 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 07:39:49,603 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 07:39:53,225 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 07:39:56,806 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 07:40:00,546 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 07:40:05,283 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 07:40:05,412 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 07:40:05,476 - engine_logger:INFO - Finished tuning model. Summary:
2020-10-28 08:01:41,158 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 08:01:41,158 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 08:01:41,158 - engine_logger:INFO - logger info level msg 
2020-10-28 08:01:41,159 - engine_logger:WARNING - logger warn level msg 
2020-10-28 08:01:41,159 - engine_logger:ERROR - logger error level msg 
2020-10-28 08:01:41,159 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 08:01:41,159 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 08:01:41,159 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 08:01:41,160 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-28 08:01:41,172 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'PredictionEngine'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 08:01:41,172 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, PredictionEngine
2020-10-28 08:01:41,172 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 08:01:41,172 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): model, TunerEngine
2020-10-28 08:01:41,172 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 08:01:41,172 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 08:01:41,184 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'PredictionEngine'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 08:01:41,195 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'model': 'PredictionEngine'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'model': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'model': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 08:01:41,195 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 08:01:41,196 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 08:01:41,196 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 08:01:41,196 - engine_logger:INFO - Model instantiated in MP: TunerEngine
2020-10-28 08:01:41,256 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 08:01:41,633 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 08:01:41,695 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 08:04:53,724 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 08:04:53,724 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 08:04:53,724 - engine_logger:INFO - logger info level msg 
2020-10-28 08:04:53,724 - engine_logger:WARNING - logger warn level msg 
2020-10-28 08:04:53,724 - engine_logger:ERROR - logger error level msg 
2020-10-28 08:04:53,724 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 08:04:53,724 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 08:04:53,724 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 08:04:53,725 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-28 08:04:53,737 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 08:04:53,737 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 08:04:53,737 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 08:04:53,737 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, TunerEngine
2020-10-28 08:04:53,737 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 08:04:53,738 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 08:04:53,749 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 08:04:53,761 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 08:04:53,761 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 08:04:53,761 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 08:04:53,761 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 08:04:53,761 - engine_logger:INFO - Engine instantiated in MP: TunerEngine
2020-10-28 08:04:53,823 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 08:04:54,196 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 08:04:54,256 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 08:04:57,482 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 08:05:04,457 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 08:05:04,457 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 08:05:04,457 - engine_logger:INFO - logger info level msg 
2020-10-28 08:05:04,457 - engine_logger:WARNING - logger warn level msg 
2020-10-28 08:05:04,457 - engine_logger:ERROR - logger error level msg 
2020-10-28 08:05:04,457 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 08:05:04,457 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 08:05:04,457 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 08:05:04,458 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-28 08:05:04,471 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 08:05:04,471 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 08:05:04,471 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 08:05:04,471 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 08:05:04,482 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 08:05:04,494 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine'}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 08:05:04,494 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 08:05:04,494 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 08:05:04,494 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 08:05:04,494 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 08:05:04,495 - engine_logger:INFO - Layers in _buildmodel: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 08:05:04,575 - engine_logger:INFO - Engine instantiated in MP: PredictionEngine
2020-10-28 08:05:04,863 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 08:05:05,960 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7f65a0564c40>
2020-10-28 08:53:58,659 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 08:53:58,660 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 08:53:58,660 - engine_logger:INFO - logger info level msg 
2020-10-28 08:53:58,660 - engine_logger:WARNING - logger warn level msg 
2020-10-28 08:53:58,660 - engine_logger:ERROR - logger error level msg 
2020-10-28 08:53:58,660 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 08:53:58,660 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 08:53:58,660 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 08:53:58,661 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='default')
2020-10-28 08:53:58,674 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 08:53:58,674 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 08:53:58,674 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 08:53:58,674 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 08:53:58,686 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 08:53:58,699 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 08:53:58,699 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 08:53:58,699 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 08:53:58,699 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 08:53:58,699 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 08:53:58,700 - engine_logger:INFO - Layers in _buildmodel: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 08:53:58,779 - engine_logger:INFO - Engine instantiated in MP: PredictionEngine
2020-10-28 08:53:59,067 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 08:54:00,441 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7f44d4625c40>
2020-10-28 10:44:01,968 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 10:44:01,968 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 10:44:01,968 - engine_logger:INFO - logger info level msg 
2020-10-28 10:44:01,968 - engine_logger:WARNING - logger warn level msg 
2020-10-28 10:44:01,968 - engine_logger:ERROR - logger error level msg 
2020-10-28 10:44:01,968 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 10:44:01,968 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 10:44:01,969 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 10:44:01,970 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner_2')
2020-10-28 10:44:01,987 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 10:44:01,987 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 10:44:01,987 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 10:44:01,987 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, TunerEngine
2020-10-28 10:44:01,987 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 10:44:01,987 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 10:44:02,004 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 10:44:02,021 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 10:44:02,021 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 10:44:02,021 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 10:44:02,021 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 10:44:02,021 - engine_logger:INFO - Engine instantiated in MP: TunerEngine
2020-10-28 10:44:02,083 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:44:02,448 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 10:44:02,508 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:44:05,130 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:44:07,838 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:44:10,719 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:44:13,388 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:44:15,528 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:44:18,484 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:44:18,592 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:44:18,635 - engine_logger:INFO - Finished tuning model. Summary:
2020-10-28 10:45:11,626 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 10:45:11,626 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 10:45:11,627 - engine_logger:INFO - logger info level msg 
2020-10-28 10:45:11,627 - engine_logger:WARNING - logger warn level msg 
2020-10-28 10:45:11,627 - engine_logger:ERROR - logger error level msg 
2020-10-28 10:45:11,627 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 10:45:11,627 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 10:45:11,627 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 10:45:11,628 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner_2')
2020-10-28 10:45:11,645 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 10:45:11,645 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 10:45:11,645 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 10:45:11,645 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, TunerEngine
2020-10-28 10:45:11,645 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 10:45:11,646 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 10:45:11,663 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 10:45:11,679 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 10:45:11,679 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 10:45:11,680 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 10:45:11,680 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 10:45:11,680 - engine_logger:INFO - Engine instantiated in MP: TunerEngine
2020-10-28 10:45:11,744 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:45:12,116 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 10:45:12,177 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:45:19,029 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:45:25,356 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:45:31,317 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:45:38,317 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:45:43,132 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:45:47,473 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:45:53,817 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:46:01,227 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:46:06,521 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:46:12,529 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:46:18,386 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:46:24,459 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:46:29,501 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:46:34,239 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:46:40,956 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:46:48,430 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:46:53,555 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:46:59,000 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:46:59,106 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:46:59,151 - engine_logger:INFO - Finished tuning model. Summary:
2020-10-28 10:48:41,700 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 10:48:41,700 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 10:48:41,700 - engine_logger:INFO - logger info level msg 
2020-10-28 10:48:41,700 - engine_logger:WARNING - logger warn level msg 
2020-10-28 10:48:41,701 - engine_logger:ERROR - logger error level msg 
2020-10-28 10:48:41,701 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 10:48:41,701 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 10:48:41,701 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 10:48:41,704 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner_2')
2020-10-28 10:48:41,787 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 10:48:41,787 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 10:48:41,787 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 10:48:41,787 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, TunerEngine
2020-10-28 10:48:41,787 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 10:48:41,788 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 10:48:41,868 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 10:48:41,951 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 10:48:41,951 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 10:48:41,951 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 10:48:41,951 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 10:48:48,617 - engine_logger:INFO - Engine instantiated in MP: TunerEngine
2020-10-28 10:48:49,210 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:48:54,998 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 10:48:55,101 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:48:55,383 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:49:31,924 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 10:49:31,924 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 10:49:31,924 - engine_logger:INFO - logger info level msg 
2020-10-28 10:49:31,924 - engine_logger:WARNING - logger warn level msg 
2020-10-28 10:49:31,924 - engine_logger:ERROR - logger error level msg 
2020-10-28 10:49:31,924 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 10:49:31,925 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 10:49:31,925 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 10:49:31,926 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner_2')
2020-10-28 10:49:31,943 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 10:49:31,943 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 10:49:31,943 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 10:49:31,943 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, TunerEngine
2020-10-28 10:49:31,943 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 10:49:31,943 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 10:49:31,960 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 10:49:31,977 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 10:49:31,977 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 10:49:31,977 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 10:49:31,977 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 10:49:31,977 - engine_logger:INFO - Engine instantiated in MP: TunerEngine
2020-10-28 10:49:32,049 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:49:32,425 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 10:49:32,486 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:49:36,818 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:49:40,505 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:49:44,390 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:49:48,126 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:49:52,257 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:49:56,180 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:50:01,072 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:50:05,691 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:50:09,109 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:50:12,340 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:50:15,134 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:50:18,039 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:50:21,276 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:50:24,869 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:50:28,607 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:50:31,810 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:50:35,549 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:50:38,993 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:50:42,368 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:50:46,413 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:50:50,311 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:50:54,342 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:50:57,803 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:51:01,412 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:51:04,758 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:51:08,491 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:51:12,662 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:51:15,552 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:51:19,151 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:51:22,916 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:51:26,202 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:51:29,267 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:51:32,967 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:51:35,648 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:51:39,927 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:51:44,260 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:51:47,703 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:51:51,475 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:51:54,701 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:51:57,950 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:52:02,018 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:52:06,267 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:52:09,534 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:52:13,070 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:52:16,843 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:52:20,975 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:52:24,564 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:52:27,855 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:52:31,376 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:52:35,036 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:52:39,242 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:52:43,403 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:52:46,887 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:52:50,350 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:52:54,353 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:52:58,031 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:53:01,518 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:53:05,570 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:53:08,734 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:53:11,195 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:53:13,764 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:53:17,109 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:53:20,692 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:53:24,216 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:53:27,238 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:53:30,382 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:53:34,065 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:53:37,582 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:53:40,669 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:53:44,278 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:53:48,388 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:53:52,447 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:53:55,096 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:53:58,004 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:54:01,184 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:54:04,284 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:54:04,397 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}
2020-10-28 10:54:04,443 - engine_logger:INFO - Finished tuning model. Summary:
2020-10-28 11:36:38,244 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 11:36:38,244 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 11:36:38,244 - engine_logger:INFO - logger info level msg 
2020-10-28 11:36:38,244 - engine_logger:WARNING - logger warn level msg 
2020-10-28 11:36:38,244 - engine_logger:ERROR - logger error level msg 
2020-10-28 11:36:38,244 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 11:36:38,244 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 11:36:38,244 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 11:36:38,245 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner_2')
2020-10-28 11:36:38,263 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 11:36:38,263 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 11:36:38,263 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 11:36:38,263 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, TunerEngine
2020-10-28 11:36:38,263 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 11:36:38,263 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 11:36:38,281 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 11:36:38,298 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 11:36:38,298 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:36:38,298 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 11:37:43,222 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 11:37:43,223 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 11:37:43,223 - engine_logger:INFO - logger info level msg 
2020-10-28 11:37:43,223 - engine_logger:WARNING - logger warn level msg 
2020-10-28 11:37:43,223 - engine_logger:ERROR - logger error level msg 
2020-10-28 11:37:43,223 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 11:37:43,224 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 11:37:43,224 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 11:37:43,227 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner_2')
2020-10-28 11:37:43,328 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 11:37:43,328 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 11:37:43,328 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 11:37:43,328 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, TunerEngine
2020-10-28 11:37:43,329 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 11:37:43,329 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 11:37:43,427 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 11:37:43,526 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 11:37:43,527 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:37:43,527 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 11:39:52,814 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 11:39:52,814 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 11:39:52,814 - engine_logger:INFO - logger info level msg 
2020-10-28 11:39:52,814 - engine_logger:WARNING - logger warn level msg 
2020-10-28 11:39:52,814 - engine_logger:ERROR - logger error level msg 
2020-10-28 11:39:52,814 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 11:39:52,814 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 11:39:52,814 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 11:39:52,815 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner_2')
2020-10-28 11:39:52,833 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 11:39:52,833 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 11:39:52,833 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 11:39:52,833 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, TunerEngine
2020-10-28 11:39:52,833 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 11:39:52,834 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 11:39:52,851 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 11:39:52,868 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 11:39:52,868 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:39:52,868 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 11:40:02,728 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 11:40:02,728 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 11:40:02,728 - engine_logger:INFO - logger info level msg 
2020-10-28 11:40:02,729 - engine_logger:WARNING - logger warn level msg 
2020-10-28 11:40:02,729 - engine_logger:ERROR - logger error level msg 
2020-10-28 11:40:02,729 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 11:40:02,729 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 11:40:02,729 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 11:40:02,732 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner_2')
2020-10-28 11:40:02,819 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 11:40:02,820 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 11:40:02,820 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 11:40:02,820 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, TunerEngine
2020-10-28 11:40:02,820 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 11:40:02,820 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 11:40:02,904 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 11:40:02,997 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}}}}
2020-10-28 11:40:02,998 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:40:02,998 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 11:40:53,631 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 11:40:53,631 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 11:40:53,631 - engine_logger:INFO - logger info level msg 
2020-10-28 11:40:53,631 - engine_logger:WARNING - logger warn level msg 
2020-10-28 11:40:53,632 - engine_logger:ERROR - logger error level msg 
2020-10-28 11:40:53,632 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 11:40:53,632 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 11:40:53,632 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 11:40:53,633 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner_2')
2020-10-28 11:40:53,651 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:40:53,651 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 11:40:53,651 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 11:40:53,651 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, TunerEngine
2020-10-28 11:40:53,651 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 11:40:53,652 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 11:40:53,669 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:40:53,687 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:40:53,687 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:40:53,687 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 11:40:53,687 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:40:53,687 - engine_logger:INFO - Engine instantiated in MP: TunerEngine
2020-10-28 11:40:53,792 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:40:53,909 - engine_logger:INFO - Getting MNIST data.... 
2020-10-28 11:40:54,197 - engine_logger:INFO - Got MNIST data(reduced sample): {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 7, 1, 7], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 9, 4, 4], dtype=uint8)}
2020-10-28 11:40:54,197 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 11:40:54,258 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:40:54,366 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:40:54,411 - engine_logger:INFO - Finished tuning model. Summary:
2020-10-28 11:41:12,895 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 11:41:12,896 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 11:41:12,896 - engine_logger:INFO - logger info level msg 
2020-10-28 11:41:12,896 - engine_logger:WARNING - logger warn level msg 
2020-10-28 11:41:12,896 - engine_logger:ERROR - logger error level msg 
2020-10-28 11:41:12,896 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 11:41:12,896 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 11:41:12,896 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 11:41:12,897 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner_2')
2020-10-28 11:41:12,915 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:41:12,915 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 11:41:12,915 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 11:41:12,915 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, TunerEngine
2020-10-28 11:41:12,915 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 11:41:12,915 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 11:41:12,933 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:41:12,950 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:41:12,950 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:41:12,951 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 11:41:12,951 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:41:12,951 - engine_logger:INFO - Engine instantiated in MP: TunerEngine
2020-10-28 11:41:13,010 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:41:13,088 - engine_logger:INFO - Getting MNIST data.... 
2020-10-28 11:41:13,376 - engine_logger:INFO - Got MNIST data(reduced sample): {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 7, 1, 7], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 9, 4, 4], dtype=uint8)}
2020-10-28 11:41:13,376 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 11:41:13,437 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:41:17,723 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:41:21,344 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:41:25,533 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:41:29,119 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:41:34,690 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:41:40,271 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:41:44,801 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:41:49,026 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:47:10,869 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 11:47:10,869 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 11:47:10,869 - engine_logger:INFO - logger info level msg 
2020-10-28 11:47:10,870 - engine_logger:WARNING - logger warn level msg 
2020-10-28 11:47:10,870 - engine_logger:ERROR - logger error level msg 
2020-10-28 11:47:10,870 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 11:47:10,870 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 11:47:10,870 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 11:47:10,871 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner_2')
2020-10-28 11:47:10,889 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:47:10,889 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 11:47:10,889 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 11:47:10,889 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, TunerEngine
2020-10-28 11:47:10,889 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 11:47:10,889 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 11:47:10,907 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:47:10,925 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:47:10,925 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:47:10,925 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 11:47:10,925 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:47:10,925 - engine_logger:INFO - Engine instantiated in MP: TunerEngine
2020-10-28 11:47:10,992 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:47:11,077 - engine_logger:INFO - Getting MNIST data.... 
2020-10-28 11:47:11,365 - engine_logger:INFO - Got MNIST data(reduced sample): {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 7, 1, 7], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 9, 4, 4], dtype=uint8)}
2020-10-28 11:47:11,365 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 11:47:11,425 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:47:15,001 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:47:18,443 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:47:37,724 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 11:47:37,724 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 11:47:37,724 - engine_logger:INFO - logger info level msg 
2020-10-28 11:47:37,724 - engine_logger:WARNING - logger warn level msg 
2020-10-28 11:47:37,724 - engine_logger:ERROR - logger error level msg 
2020-10-28 11:47:37,724 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 11:47:37,724 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 11:47:37,724 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 11:47:37,726 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner_2')
2020-10-28 11:47:37,744 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:47:37,744 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 11:47:37,744 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 11:47:37,744 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, TunerEngine
2020-10-28 11:47:37,744 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 11:47:37,744 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 11:47:37,762 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:47:37,779 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:47:37,779 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:47:37,780 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 11:47:37,780 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:47:37,780 - engine_logger:INFO - Engine instantiated in MP: TunerEngine
2020-10-28 11:47:37,847 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:47:37,931 - engine_logger:INFO - Getting MNIST data.... 
2020-10-28 11:47:38,220 - engine_logger:INFO - Got MNIST data(reduced sample): {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 7, 1, 7], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 9, 4, 4], dtype=uint8)}
2020-10-28 11:47:38,220 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 11:47:38,280 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:47:44,331 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:48:00,881 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 11:48:00,881 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 11:48:00,881 - engine_logger:INFO - logger info level msg 
2020-10-28 11:48:00,881 - engine_logger:WARNING - logger warn level msg 
2020-10-28 11:48:00,881 - engine_logger:ERROR - logger error level msg 
2020-10-28 11:48:00,881 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 11:48:00,881 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 11:48:00,881 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 11:48:00,882 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner_2')
2020-10-28 11:48:00,901 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:48:00,901 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 11:48:00,901 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 11:48:00,901 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, TunerEngine
2020-10-28 11:48:00,901 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 11:48:00,901 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 11:48:00,919 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:48:00,936 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 512, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:48:00,936 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:48:00,936 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 11:48:00,936 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:48:00,937 - engine_logger:INFO - Engine instantiated in MP: TunerEngine
2020-10-28 11:48:01,004 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:48:01,089 - engine_logger:INFO - Getting MNIST data.... 
2020-10-28 11:48:01,380 - engine_logger:INFO - Got MNIST data(reduced sample): {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 8, 6, 9], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, 0, 4, 1, 4, 9, 5, 9, 0, 6, 9, 0, 1, 5, 9, 7, 3, 4, 9, 6,
       6, 5, 4, 0, 7, 4, 0, 1, 3, 1, 3, 4, 7, 2, 7, 1, 2, 1, 1, 7, 4, 2,
       3, 5, 1, 2, 4, 4, 6, 3, 5, 5, 6, 0, 4, 1, 9, 5, 7, 8, 9, 3, 7, 4,
       6, 4, 3, 0, 7, 0, 2, 9, 1, 7, 3, 2, 9, 7, 7, 6, 2, 7, 8, 4, 7, 3,
       6, 1, 3, 6, 9, 3, 1, 4, 1, 7, 6, 9, 6, 0, 5, 4, 9, 9, 2, 1, 9, 4,
       8, 7, 3, 9, 7, 4, 4, 4, 9, 2, 5, 4, 7, 6, 7, 9, 0, 5, 8, 5, 6, 6,
       5, 7, 8, 1, 0, 1, 6, 4, 6, 7, 3, 1, 7, 1, 8, 2, 0, 2, 9, 9, 5, 5,
       1, 5, 6, 0, 3, 4, 4, 6, 5, 4, 6, 5, 4, 5, 1, 4, 4, 7, 2, 3, 2, 7,
       1, 8, 1, 8, 1, 8, 5, 0, 8, 9, 2, 5, 0, 1, 1, 1, 0, 9, 0, 3, 1, 6,
       4, 2, 3, 6, 1, 1, 1, 3, 9, 5, 2, 9, 4, 5, 9, 3, 9, 0, 3, 6, 5, 5,
       7, 2, 2, 7, 1, 2, 8, 4, 1, 7, 3, 3, 8, 8, 7, 9, 2, 2, 4, 1, 5, 9,
       8, 7, 2, 3, 0, 4, 4, 2, 4, 1, 9, 5, 7, 7, 2, 8, 2, 6, 8, 5, 7, 7,
       9, 1, 8, 1, 8, 0, 3, 0, 1, 9, 9, 4, 1, 8, 2, 1, 2, 9, 7, 5, 9, 2,
       6, 4, 1, 5, 8, 2, 9, 2, 0, 4, 0, 0, 2, 8, 4, 7, 1, 2, 4, 0, 2, 7,
       4, 3, 3, 0, 0, 3, 1, 9, 6, 5, 2, 5, 9, 2, 9, 3, 0, 4, 2, 0, 7, 1,
       1, 2, 1, 5, 3, 3, 9, 7, 8, 6, 5, 6, 1, 3, 8, 1, 0, 5, 1, 3, 1, 5,
       5, 6, 1, 8, 5, 1, 7, 9, 4, 6, 2, 2, 5, 0, 6, 5, 6, 3, 7, 2, 0, 8,
       8, 5, 4, 1, 1, 4, 0, 3, 3, 7, 6, 1, 6, 2, 1, 9, 2, 8, 6, 1, 9, 5,
       2, 5, 4, 4, 2, 8, 3, 8, 2, 4, 5, 0, 3, 1, 7, 7, 5, 7, 9, 7, 1, 9,
       2, 1, 4, 2, 9, 2, 0, 4, 9, 1, 4, 8, 1, 8, 4, 5, 9, 8, 8, 3, 7, 6,
       0, 0, 3, 0, 2, 6, 6, 4, 9, 3, 3, 3, 2, 3, 9, 1, 2, 6, 8, 0, 5, 6,
       6, 6, 3, 8, 8, 2, 7, 5, 8, 9, 6, 1, 8, 4, 1, 2, 5, 9, 1, 9, 7, 5,
       4, 0, 8, 9, 9, 1, 0, 5, 2, 3, 7, 8, 9, 4, 0, 6, 3, 9, 5, 2, 1, 3,
       1, 3, 6, 5, 7, 4, 2, 2, 6, 3, 2, 6, 5, 4, 8, 9, 7, 1, 3, 0, 3, 8,
       3, 1, 9, 3, 4, 4, 6, 4, 2, 1, 8, 2, 5, 4, 8, 8, 4, 0, 0, 2, 3, 2,
       7, 7, 0, 8, 7, 4, 4, 7, 9, 6, 9, 0, 9, 8, 0, 4, 6, 0, 6, 3, 5, 4,
       8, 3, 3, 9, 3, 3, 3, 7, 8, 0, 8, 2, 1, 7, 0, 6, 5, 4, 3, 8, 0, 9,
       6, 3, 8, 0, 9, 9, 6, 8, 6, 8, 5, 7, 8, 6, 0, 2, 4, 0, 2, 2, 3, 1,
       9, 7, 5, 1, 0, 8, 4, 6, 2, 6, 7, 9, 3, 2, 9, 8, 2, 2, 9, 2, 7, 3,
       5, 9, 1, 8, 0, 2, 0, 5, 2, 1, 3, 7, 6, 7, 1, 2, 5, 8, 0, 3, 7, 2,
       4, 0, 9, 1, 8, 6, 7, 7, 4, 3, 4, 9, 1, 9, 5, 1, 7, 3, 9, 7, 6, 9,
       1, 3, 7, 8, 3, 3, 6, 7, 2, 8, 5, 8, 5, 1, 1, 4, 4, 3, 1, 0, 7, 7,
       0, 7, 9, 4, 4, 8, 5, 5, 4, 0, 8, 2, 1, 0, 8, 4, 5, 0, 4, 0, 6, 1,
       7, 3, 2, 6, 7, 2, 6, 9, 3, 1, 4, 6, 2, 5, 4, 2, 0, 6, 2, 1, 7, 3,
       4, 1, 0, 5, 4, 3, 1, 1, 7, 4, 9, 9, 4, 8, 4, 0, 2, 4, 5, 1, 1, 6,
       4, 7, 1, 9, 4, 2, 4, 1, 5, 5, 3, 8, 3, 1, 4, 5, 6, 8, 9, 4, 1, 5,
       3, 8, 0, 3, 2, 5, 1, 2, 8, 3, 4, 4, 0, 8, 8, 3, 3, 1, 7, 3, 5, 9,
       6, 3, 2, 6, 1, 3, 6, 0, 7, 2, 1, 7, 1, 4, 2, 4, 2, 1, 7, 9, 6, 1,
       1, 2, 4, 8, 1, 7, 7, 4, 8, 0, 7, 3, 1, 3, 1, 0, 7, 7, 0, 3, 5, 5,
       2, 7, 6, 6, 9, 2, 8, 3, 5, 2, 2, 5, 6, 0, 8, 2, 9, 2, 8, 8, 8, 8,
       7, 4, 9, 3, 0, 6, 6, 3, 2, 1, 3, 2, 2, 9, 3, 0, 0, 5, 7, 8, 1, 4,
       4, 6, 0, 2, 9, 1, 4, 7, 4, 7, 3, 9, 8, 8, 4, 7, 1, 2, 1, 2, 2, 3,
       2, 3, 2, 3, 9, 1, 7, 4, 0, 3, 5, 5, 8, 6, 3, 2, 6, 7, 6, 6, 3, 2,
       7, 8, 1, 1, 7, 5, 6, 4, 9, 5, 1, 3, 3, 4, 7, 8, 9, 1, 1, 6, 9, 1,
       4, 4, 5, 4, 0, 6, 2, 2, 3, 1, 5, 1, 2, 0, 3, 8, 1, 2, 6, 7, 1, 6,
       2, 3, 9, 0, 1, 2, 2, 0, 8, 9], dtype=uint8)}
2020-10-28 11:48:01,380 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 11:48:01,441 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:48:04,501 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:48:07,205 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:48:09,744 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:48:12,240 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:48:14,340 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:48:16,564 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:48:18,324 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:48:19,964 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:48:21,240 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:48:22,775 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:48:25,782 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:48:28,590 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:48:30,237 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:48:32,074 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:48:33,734 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:48:35,311 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:48:37,214 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:48:38,964 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:48:41,274 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:48:43,736 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:48:45,276 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:48:46,974 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:48:48,833 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:48:50,975 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:48:53,756 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:49:00,007 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 11:49:00,007 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 11:49:00,007 - engine_logger:INFO - logger info level msg 
2020-10-28 11:49:00,008 - engine_logger:WARNING - logger warn level msg 
2020-10-28 11:49:00,008 - engine_logger:ERROR - logger error level msg 
2020-10-28 11:49:00,008 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 11:49:00,008 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 11:49:00,008 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 11:49:00,009 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-28 11:49:00,027 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:49:00,027 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 11:49:00,027 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 11:49:00,027 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, TunerEngine
2020-10-28 11:49:00,027 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 11:49:00,027 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 11:49:00,045 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:49:00,062 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:49:00,062 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:49:00,062 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 11:49:00,062 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:49:00,062 - engine_logger:INFO - Engine instantiated in MP: TunerEngine
2020-10-28 11:49:00,141 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:49:00,244 - engine_logger:INFO - Getting MNIST data.... 
2020-10-28 11:49:00,534 - engine_logger:INFO - Got MNIST data(reduced sample): {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 8, 6, 9], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, 0, 4, 1, 4, 9, 5, 9, 0, 6, 9, 0, 1, 5, 9, 7, 3, 4, 9, 6,
       6, 5, 4, 0, 7, 4, 0, 1, 3, 1, 3, 4, 7, 2, 7, 1, 2, 1, 1, 7, 4, 2,
       3, 5, 1, 2, 4, 4, 6, 3, 5, 5, 6, 0, 4, 1, 9, 5, 7, 8, 9, 3, 7, 4,
       6, 4, 3, 0, 7, 0, 2, 9, 1, 7, 3, 2, 9, 7, 7, 6, 2, 7, 8, 4, 7, 3,
       6, 1, 3, 6, 9, 3, 1, 4, 1, 7, 6, 9, 6, 0, 5, 4, 9, 9, 2, 1, 9, 4,
       8, 7, 3, 9, 7, 4, 4, 4, 9, 2, 5, 4, 7, 6, 7, 9, 0, 5, 8, 5, 6, 6,
       5, 7, 8, 1, 0, 1, 6, 4, 6, 7, 3, 1, 7, 1, 8, 2, 0, 2, 9, 9, 5, 5,
       1, 5, 6, 0, 3, 4, 4, 6, 5, 4, 6, 5, 4, 5, 1, 4, 4, 7, 2, 3, 2, 7,
       1, 8, 1, 8, 1, 8, 5, 0, 8, 9, 2, 5, 0, 1, 1, 1, 0, 9, 0, 3, 1, 6,
       4, 2, 3, 6, 1, 1, 1, 3, 9, 5, 2, 9, 4, 5, 9, 3, 9, 0, 3, 6, 5, 5,
       7, 2, 2, 7, 1, 2, 8, 4, 1, 7, 3, 3, 8, 8, 7, 9, 2, 2, 4, 1, 5, 9,
       8, 7, 2, 3, 0, 4, 4, 2, 4, 1, 9, 5, 7, 7, 2, 8, 2, 6, 8, 5, 7, 7,
       9, 1, 8, 1, 8, 0, 3, 0, 1, 9, 9, 4, 1, 8, 2, 1, 2, 9, 7, 5, 9, 2,
       6, 4, 1, 5, 8, 2, 9, 2, 0, 4, 0, 0, 2, 8, 4, 7, 1, 2, 4, 0, 2, 7,
       4, 3, 3, 0, 0, 3, 1, 9, 6, 5, 2, 5, 9, 2, 9, 3, 0, 4, 2, 0, 7, 1,
       1, 2, 1, 5, 3, 3, 9, 7, 8, 6, 5, 6, 1, 3, 8, 1, 0, 5, 1, 3, 1, 5,
       5, 6, 1, 8, 5, 1, 7, 9, 4, 6, 2, 2, 5, 0, 6, 5, 6, 3, 7, 2, 0, 8,
       8, 5, 4, 1, 1, 4, 0, 3, 3, 7, 6, 1, 6, 2, 1, 9, 2, 8, 6, 1, 9, 5,
       2, 5, 4, 4, 2, 8, 3, 8, 2, 4, 5, 0, 3, 1, 7, 7, 5, 7, 9, 7, 1, 9,
       2, 1, 4, 2, 9, 2, 0, 4, 9, 1, 4, 8, 1, 8, 4, 5, 9, 8, 8, 3, 7, 6,
       0, 0, 3, 0, 2, 6, 6, 4, 9, 3, 3, 3, 2, 3, 9, 1, 2, 6, 8, 0, 5, 6,
       6, 6, 3, 8, 8, 2, 7, 5, 8, 9, 6, 1, 8, 4, 1, 2, 5, 9, 1, 9, 7, 5,
       4, 0, 8, 9, 9, 1, 0, 5, 2, 3, 7, 8, 9, 4, 0, 6, 3, 9, 5, 2, 1, 3,
       1, 3, 6, 5, 7, 4, 2, 2, 6, 3, 2, 6, 5, 4, 8, 9, 7, 1, 3, 0, 3, 8,
       3, 1, 9, 3, 4, 4, 6, 4, 2, 1, 8, 2, 5, 4, 8, 8, 4, 0, 0, 2, 3, 2,
       7, 7, 0, 8, 7, 4, 4, 7, 9, 6, 9, 0, 9, 8, 0, 4, 6, 0, 6, 3, 5, 4,
       8, 3, 3, 9, 3, 3, 3, 7, 8, 0, 8, 2, 1, 7, 0, 6, 5, 4, 3, 8, 0, 9,
       6, 3, 8, 0, 9, 9, 6, 8, 6, 8, 5, 7, 8, 6, 0, 2, 4, 0, 2, 2, 3, 1,
       9, 7, 5, 1, 0, 8, 4, 6, 2, 6, 7, 9, 3, 2, 9, 8, 2, 2, 9, 2, 7, 3,
       5, 9, 1, 8, 0, 2, 0, 5, 2, 1, 3, 7, 6, 7, 1, 2, 5, 8, 0, 3, 7, 2,
       4, 0, 9, 1, 8, 6, 7, 7, 4, 3, 4, 9, 1, 9, 5, 1, 7, 3, 9, 7, 6, 9,
       1, 3, 7, 8, 3, 3, 6, 7, 2, 8, 5, 8, 5, 1, 1, 4, 4, 3, 1, 0, 7, 7,
       0, 7, 9, 4, 4, 8, 5, 5, 4, 0, 8, 2, 1, 0, 8, 4, 5, 0, 4, 0, 6, 1,
       7, 3, 2, 6, 7, 2, 6, 9, 3, 1, 4, 6, 2, 5, 4, 2, 0, 6, 2, 1, 7, 3,
       4, 1, 0, 5, 4, 3, 1, 1, 7, 4, 9, 9, 4, 8, 4, 0, 2, 4, 5, 1, 1, 6,
       4, 7, 1, 9, 4, 2, 4, 1, 5, 5, 3, 8, 3, 1, 4, 5, 6, 8, 9, 4, 1, 5,
       3, 8, 0, 3, 2, 5, 1, 2, 8, 3, 4, 4, 0, 8, 8, 3, 3, 1, 7, 3, 5, 9,
       6, 3, 2, 6, 1, 3, 6, 0, 7, 2, 1, 7, 1, 4, 2, 4, 2, 1, 7, 9, 6, 1,
       1, 2, 4, 8, 1, 7, 7, 4, 8, 0, 7, 3, 1, 3, 1, 0, 7, 7, 0, 3, 5, 5,
       2, 7, 6, 6, 9, 2, 8, 3, 5, 2, 2, 5, 6, 0, 8, 2, 9, 2, 8, 8, 8, 8,
       7, 4, 9, 3, 0, 6, 6, 3, 2, 1, 3, 2, 2, 9, 3, 0, 0, 5, 7, 8, 1, 4,
       4, 6, 0, 2, 9, 1, 4, 7, 4, 7, 3, 9, 8, 8, 4, 7, 1, 2, 1, 2, 2, 3,
       2, 3, 2, 3, 9, 1, 7, 4, 0, 3, 5, 5, 8, 6, 3, 2, 6, 7, 6, 6, 3, 2,
       7, 8, 1, 1, 7, 5, 6, 4, 9, 5, 1, 3, 3, 4, 7, 8, 9, 1, 1, 6, 9, 1,
       4, 4, 5, 4, 0, 6, 2, 2, 3, 1, 5, 1, 2, 0, 3, 8, 1, 2, 6, 7, 1, 6,
       2, 3, 9, 0, 1, 2, 2, 0, 8, 9], dtype=uint8)}
2020-10-28 11:49:00,534 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 11:49:00,595 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:49:03,676 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:49:06,603 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:49:08,833 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:49:10,887 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:49:13,775 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:49:16,640 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:49:19,798 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:49:22,826 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:49:24,695 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:49:26,894 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:49:29,526 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:49:32,064 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:49:34,675 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:49:37,289 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:49:39,591 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:49:41,821 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:49:45,066 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:49:48,144 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:49:50,443 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:49:52,734 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:49:54,578 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:49:56,511 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:49:58,822 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:50:01,013 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:50:02,833 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:50:04,768 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:50:07,642 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:50:10,422 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:50:12,085 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:50:14,211 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:50:16,462 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:50:18,705 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:50:21,362 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:50:33,270 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 11:50:33,270 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 11:50:33,270 - engine_logger:INFO - logger info level msg 
2020-10-28 11:50:33,270 - engine_logger:WARNING - logger warn level msg 
2020-10-28 11:50:33,270 - engine_logger:ERROR - logger error level msg 
2020-10-28 11:50:33,270 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 11:50:33,270 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 11:50:33,270 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 11:50:33,271 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-28 11:50:33,290 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:50:33,290 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 11:50:33,290 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 11:50:33,290 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, TunerEngine
2020-10-28 11:50:33,290 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 11:50:33,290 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 11:50:33,308 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:50:33,326 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:50:33,326 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:50:33,326 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 11:50:33,326 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:50:33,326 - engine_logger:INFO - Engine instantiated in MP: TunerEngine
2020-10-28 11:50:33,418 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:50:33,536 - engine_logger:INFO - Getting MNIST data.... 
2020-10-28 11:50:33,829 - engine_logger:INFO - Got MNIST data(reduced sample): {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-28 11:50:33,829 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 11:50:33,890 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:50:52,691 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:51:05,027 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 11:51:05,028 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 11:51:05,028 - engine_logger:INFO - logger info level msg 
2020-10-28 11:51:05,028 - engine_logger:WARNING - logger warn level msg 
2020-10-28 11:51:05,028 - engine_logger:ERROR - logger error level msg 
2020-10-28 11:51:05,028 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 11:51:05,028 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 11:51:05,028 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 11:51:05,029 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-28 11:51:05,047 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:51:05,047 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 11:51:05,047 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 11:51:05,047 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, TunerEngine
2020-10-28 11:51:05,047 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 11:51:05,047 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 11:51:05,065 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:51:05,082 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:51:05,082 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:51:05,082 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 11:51:05,082 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:51:05,082 - engine_logger:INFO - Engine instantiated in MP: TunerEngine
2020-10-28 11:51:05,172 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:51:05,287 - engine_logger:INFO - Getting MNIST data.... 
2020-10-28 11:51:05,578 - engine_logger:INFO - Got MNIST data(reduced sample): {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 8, 6, 9], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, 0, 4, 1, 4, 9, 5, 9, 0, 6, 9, 0, 1, 5, 9, 7, 3, 4, 9, 6,
       6, 5, 4, 0, 7, 4, 0, 1, 3, 1, 3, 4, 7, 2, 7, 1, 2, 1, 1, 7, 4, 2,
       3, 5, 1, 2, 4, 4, 6, 3, 5, 5, 6, 0, 4, 1, 9, 5, 7, 8, 9, 3, 7, 4,
       6, 4, 3, 0, 7, 0, 2, 9, 1, 7, 3, 2, 9, 7, 7, 6, 2, 7, 8, 4, 7, 3,
       6, 1, 3, 6, 9, 3, 1, 4, 1, 7, 6, 9, 6, 0, 5, 4, 9, 9, 2, 1, 9, 4,
       8, 7, 3, 9, 7, 4, 4, 4, 9, 2, 5, 4, 7, 6, 7, 9, 0, 5, 8, 5, 6, 6,
       5, 7, 8, 1, 0, 1, 6, 4, 6, 7, 3, 1, 7, 1, 8, 2, 0, 2, 9, 9, 5, 5,
       1, 5, 6, 0, 3, 4, 4, 6, 5, 4, 6, 5, 4, 5, 1, 4, 4, 7, 2, 3, 2, 7,
       1, 8, 1, 8, 1, 8, 5, 0, 8, 9, 2, 5, 0, 1, 1, 1, 0, 9, 0, 3, 1, 6,
       4, 2, 3, 6, 1, 1, 1, 3, 9, 5, 2, 9, 4, 5, 9, 3, 9, 0, 3, 6, 5, 5,
       7, 2, 2, 7, 1, 2, 8, 4, 1, 7, 3, 3, 8, 8, 7, 9, 2, 2, 4, 1, 5, 9,
       8, 7, 2, 3, 0, 4, 4, 2, 4, 1, 9, 5, 7, 7, 2, 8, 2, 6, 8, 5, 7, 7,
       9, 1, 8, 1, 8, 0, 3, 0, 1, 9, 9, 4, 1, 8, 2, 1, 2, 9, 7, 5, 9, 2,
       6, 4, 1, 5, 8, 2, 9, 2, 0, 4, 0, 0, 2, 8, 4, 7, 1, 2, 4, 0, 2, 7,
       4, 3, 3, 0, 0, 3, 1, 9, 6, 5, 2, 5, 9, 2, 9, 3, 0, 4, 2, 0, 7, 1,
       1, 2, 1, 5, 3, 3, 9, 7, 8, 6, 5, 6, 1, 3, 8, 1, 0, 5, 1, 3, 1, 5,
       5, 6, 1, 8, 5, 1, 7, 9, 4, 6, 2, 2, 5, 0, 6, 5, 6, 3, 7, 2, 0, 8,
       8, 5, 4, 1, 1, 4, 0, 3, 3, 7, 6, 1, 6, 2, 1, 9, 2, 8, 6, 1, 9, 5,
       2, 5, 4, 4, 2, 8, 3, 8, 2, 4, 5, 0, 3, 1, 7, 7, 5, 7, 9, 7, 1, 9,
       2, 1, 4, 2, 9, 2, 0, 4, 9, 1, 4, 8, 1, 8, 4, 5, 9, 8, 8, 3, 7, 6,
       0, 0, 3, 0, 2, 6, 6, 4, 9, 3, 3, 3, 2, 3, 9, 1, 2, 6, 8, 0, 5, 6,
       6, 6, 3, 8, 8, 2, 7, 5, 8, 9, 6, 1, 8, 4, 1, 2, 5, 9, 1, 9, 7, 5,
       4, 0, 8, 9, 9, 1, 0, 5, 2, 3, 7, 8, 9, 4, 0, 6, 3, 9, 5, 2, 1, 3,
       1, 3, 6, 5, 7, 4, 2, 2, 6, 3, 2, 6, 5, 4, 8, 9, 7, 1, 3, 0, 3, 8,
       3, 1, 9, 3, 4, 4, 6, 4, 2, 1, 8, 2, 5, 4, 8, 8, 4, 0, 0, 2, 3, 2,
       7, 7, 0, 8, 7, 4, 4, 7, 9, 6, 9, 0, 9, 8, 0, 4, 6, 0, 6, 3, 5, 4,
       8, 3, 3, 9, 3, 3, 3, 7, 8, 0, 8, 2, 1, 7, 0, 6, 5, 4, 3, 8, 0, 9,
       6, 3, 8, 0, 9, 9, 6, 8, 6, 8, 5, 7, 8, 6, 0, 2, 4, 0, 2, 2, 3, 1,
       9, 7, 5, 1, 0, 8, 4, 6, 2, 6, 7, 9, 3, 2, 9, 8, 2, 2, 9, 2, 7, 3,
       5, 9, 1, 8, 0, 2, 0, 5, 2, 1, 3, 7, 6, 7, 1, 2, 5, 8, 0, 3, 7, 2,
       4, 0, 9, 1, 8, 6, 7, 7, 4, 3, 4, 9, 1, 9, 5, 1, 7, 3, 9, 7, 6, 9,
       1, 3, 7, 8, 3, 3, 6, 7, 2, 8, 5, 8, 5, 1, 1, 4, 4, 3, 1, 0, 7, 7,
       0, 7, 9, 4, 4, 8, 5, 5, 4, 0, 8, 2, 1, 0, 8, 4, 5, 0, 4, 0, 6, 1,
       7, 3, 2, 6, 7, 2, 6, 9, 3, 1, 4, 6, 2, 5, 4, 2, 0, 6, 2, 1, 7, 3,
       4, 1, 0, 5, 4, 3, 1, 1, 7, 4, 9, 9, 4, 8, 4, 0, 2, 4, 5, 1, 1, 6,
       4, 7, 1, 9, 4, 2, 4, 1, 5, 5, 3, 8, 3, 1, 4, 5, 6, 8, 9, 4, 1, 5,
       3, 8, 0, 3, 2, 5, 1, 2, 8, 3, 4, 4, 0, 8, 8, 3, 3, 1, 7, 3, 5, 9,
       6, 3, 2, 6, 1, 3, 6, 0, 7, 2, 1, 7, 1, 4, 2, 4, 2, 1, 7, 9, 6, 1,
       1, 2, 4, 8, 1, 7, 7, 4, 8, 0, 7, 3, 1, 3, 1, 0, 7, 7, 0, 3, 5, 5,
       2, 7, 6, 6, 9, 2, 8, 3, 5, 2, 2, 5, 6, 0, 8, 2, 9, 2, 8, 8, 8, 8,
       7, 4, 9, 3, 0, 6, 6, 3, 2, 1, 3, 2, 2, 9, 3, 0, 0, 5, 7, 8, 1, 4,
       4, 6, 0, 2, 9, 1, 4, 7, 4, 7, 3, 9, 8, 8, 4, 7, 1, 2, 1, 2, 2, 3,
       2, 3, 2, 3, 9, 1, 7, 4, 0, 3, 5, 5, 8, 6, 3, 2, 6, 7, 6, 6, 3, 2,
       7, 8, 1, 1, 7, 5, 6, 4, 9, 5, 1, 3, 3, 4, 7, 8, 9, 1, 1, 6, 9, 1,
       4, 4, 5, 4, 0, 6, 2, 2, 3, 1, 5, 1, 2, 0, 3, 8, 1, 2, 6, 7, 1, 6,
       2, 3, 9, 0, 1, 2, 2, 0, 8, 9], dtype=uint8)}
2020-10-28 11:51:05,578 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 11:51:05,639 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:51:08,336 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:51:10,845 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:51:12,800 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:51:14,848 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:51:24,294 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 11:51:24,295 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 11:51:24,295 - engine_logger:INFO - logger info level msg 
2020-10-28 11:51:24,295 - engine_logger:WARNING - logger warn level msg 
2020-10-28 11:51:24,295 - engine_logger:ERROR - logger error level msg 
2020-10-28 11:51:24,295 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 11:51:24,295 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 11:51:24,295 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 11:51:24,296 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-28 11:51:24,314 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:51:24,314 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 11:51:24,314 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 11:51:24,314 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, TunerEngine
2020-10-28 11:51:24,315 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 11:51:24,315 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 11:51:24,333 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:51:24,351 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:51:24,351 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:51:24,351 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 11:51:24,351 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:51:24,351 - engine_logger:INFO - Engine instantiated in MP: TunerEngine
2020-10-28 11:51:24,444 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:51:24,563 - engine_logger:INFO - Getting MNIST data.... 
2020-10-28 11:51:24,851 - engine_logger:INFO - Got MNIST data(reduced sample): {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 2, 8, 3], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 3, 9, 5], dtype=uint8)}
2020-10-28 11:51:24,852 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 11:51:24,912 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:51:30,382 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:51:35,652 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:51:38,964 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:51:45,063 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 11:51:45,064 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 11:51:45,064 - engine_logger:INFO - logger info level msg 
2020-10-28 11:51:45,064 - engine_logger:WARNING - logger warn level msg 
2020-10-28 11:51:45,064 - engine_logger:ERROR - logger error level msg 
2020-10-28 11:51:45,064 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 11:51:45,064 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 11:51:45,064 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 11:51:45,065 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-28 11:51:45,083 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:51:45,083 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 11:51:45,083 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 11:51:45,083 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, TunerEngine
2020-10-28 11:51:45,084 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 11:51:45,084 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 11:51:45,102 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:51:45,119 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:51:45,119 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:51:45,119 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 11:51:45,119 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:51:45,119 - engine_logger:INFO - Engine instantiated in MP: TunerEngine
2020-10-28 11:51:45,216 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:51:45,339 - engine_logger:INFO - Getting MNIST data.... 
2020-10-28 11:51:45,632 - engine_logger:INFO - Got MNIST data(reduced sample): {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 5, 6, 8], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 4, 5, 6], dtype=uint8)}
2020-10-28 11:51:45,632 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 11:51:45,693 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:52:00,848 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:52:06,031 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 11:52:06,031 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 11:52:06,031 - engine_logger:INFO - logger info level msg 
2020-10-28 11:52:06,031 - engine_logger:WARNING - logger warn level msg 
2020-10-28 11:52:06,031 - engine_logger:ERROR - logger error level msg 
2020-10-28 11:52:06,032 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 11:52:06,032 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 11:52:06,032 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 11:52:06,033 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-28 11:52:06,051 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:52:06,051 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 11:52:06,051 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 11:52:06,051 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, TunerEngine
2020-10-28 11:52:06,051 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 11:52:06,051 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 11:52:06,069 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:52:06,086 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:52:06,087 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:52:06,087 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 11:52:06,087 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:52:06,087 - engine_logger:INFO - Engine instantiated in MP: TunerEngine
2020-10-28 11:52:06,182 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:52:06,301 - engine_logger:INFO - Getting MNIST data.... 
2020-10-28 11:52:06,591 - engine_logger:INFO - Got MNIST data(reduced sample): {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 8, 6, 9], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, 0, 4, 1, 4, 9, 5, 9, 0, 6, 9, 0, 1, 5, 9, 7, 3, 4, 9, 6,
       6, 5, 4, 0, 7, 4, 0, 1, 3, 1, 3, 4, 7, 2, 7, 1, 2, 1, 1, 7, 4, 2,
       3, 5, 1, 2, 4, 4, 6, 3, 5, 5, 6, 0, 4, 1, 9, 5, 7, 8, 9, 3, 7, 4,
       6, 4, 3, 0, 7, 0, 2, 9, 1, 7, 3, 2, 9, 7, 7, 6, 2, 7, 8, 4, 7, 3,
       6, 1, 3, 6, 9, 3, 1, 4, 1, 7, 6, 9, 6, 0, 5, 4, 9, 9, 2, 1, 9, 4,
       8, 7, 3, 9, 7, 4, 4, 4, 9, 2, 5, 4, 7, 6, 7, 9, 0, 5, 8, 5, 6, 6,
       5, 7, 8, 1, 0, 1, 6, 4, 6, 7, 3, 1, 7, 1, 8, 2, 0, 2, 9, 9, 5, 5,
       1, 5, 6, 0, 3, 4, 4, 6, 5, 4, 6, 5, 4, 5, 1, 4, 4, 7, 2, 3, 2, 7,
       1, 8, 1, 8, 1, 8, 5, 0, 8, 9, 2, 5, 0, 1, 1, 1, 0, 9, 0, 3, 1, 6,
       4, 2, 3, 6, 1, 1, 1, 3, 9, 5, 2, 9, 4, 5, 9, 3, 9, 0, 3, 6, 5, 5,
       7, 2, 2, 7, 1, 2, 8, 4, 1, 7, 3, 3, 8, 8, 7, 9, 2, 2, 4, 1, 5, 9,
       8, 7, 2, 3, 0, 4, 4, 2, 4, 1, 9, 5, 7, 7, 2, 8, 2, 6, 8, 5, 7, 7,
       9, 1, 8, 1, 8, 0, 3, 0, 1, 9, 9, 4, 1, 8, 2, 1, 2, 9, 7, 5, 9, 2,
       6, 4, 1, 5, 8, 2, 9, 2, 0, 4, 0, 0, 2, 8, 4, 7, 1, 2, 4, 0, 2, 7,
       4, 3, 3, 0, 0, 3, 1, 9, 6, 5, 2, 5, 9, 2, 9, 3, 0, 4, 2, 0, 7, 1,
       1, 2, 1, 5, 3, 3, 9, 7, 8, 6, 5, 6, 1, 3, 8, 1, 0, 5, 1, 3, 1, 5,
       5, 6, 1, 8, 5, 1, 7, 9, 4, 6, 2, 2, 5, 0, 6, 5, 6, 3, 7, 2, 0, 8,
       8, 5, 4, 1, 1, 4, 0, 3, 3, 7, 6, 1, 6, 2, 1, 9, 2, 8, 6, 1, 9, 5,
       2, 5, 4, 4, 2, 8, 3, 8, 2, 4, 5, 0, 3, 1, 7, 7, 5, 7, 9, 7, 1, 9,
       2, 1, 4, 2, 9, 2, 0, 4, 9, 1, 4, 8, 1, 8, 4, 5, 9, 8, 8, 3, 7, 6,
       0, 0, 3, 0, 2, 6, 6, 4, 9, 3, 3, 3, 2, 3, 9, 1, 2, 6, 8, 0, 5, 6,
       6, 6, 3, 8, 8, 2, 7, 5, 8, 9, 6, 1, 8, 4, 1, 2, 5, 9, 1, 9, 7, 5,
       4, 0, 8, 9, 9, 1, 0, 5, 2, 3, 7, 8, 9, 4, 0, 6, 3, 9, 5, 2, 1, 3,
       1, 3, 6, 5, 7, 4, 2, 2, 6, 3, 2, 6, 5, 4, 8, 9, 7, 1, 3, 0, 3, 8,
       3, 1, 9, 3, 4, 4, 6, 4, 2, 1, 8, 2, 5, 4, 8, 8, 4, 0, 0, 2, 3, 2,
       7, 7, 0, 8, 7, 4, 4, 7, 9, 6, 9, 0, 9, 8, 0, 4, 6, 0, 6, 3, 5, 4,
       8, 3, 3, 9, 3, 3, 3, 7, 8, 0, 8, 2, 1, 7, 0, 6, 5, 4, 3, 8, 0, 9,
       6, 3, 8, 0, 9, 9, 6, 8, 6, 8, 5, 7, 8, 6, 0, 2, 4, 0, 2, 2, 3, 1,
       9, 7, 5, 1, 0, 8, 4, 6, 2, 6, 7, 9, 3, 2, 9, 8, 2, 2, 9, 2, 7, 3,
       5, 9, 1, 8, 0, 2, 0, 5, 2, 1, 3, 7, 6, 7, 1, 2, 5, 8, 0, 3, 7, 2,
       4, 0, 9, 1, 8, 6, 7, 7, 4, 3, 4, 9, 1, 9, 5, 1, 7, 3, 9, 7, 6, 9,
       1, 3, 7, 8, 3, 3, 6, 7, 2, 8, 5, 8, 5, 1, 1, 4, 4, 3, 1, 0, 7, 7,
       0, 7, 9, 4, 4, 8, 5, 5, 4, 0, 8, 2, 1, 0, 8, 4, 5, 0, 4, 0, 6, 1,
       7, 3, 2, 6, 7, 2, 6, 9, 3, 1, 4, 6, 2, 5, 4, 2, 0, 6, 2, 1, 7, 3,
       4, 1, 0, 5, 4, 3, 1, 1, 7, 4, 9, 9, 4, 8, 4, 0, 2, 4, 5, 1, 1, 6,
       4, 7, 1, 9, 4, 2, 4, 1, 5, 5, 3, 8, 3, 1, 4, 5, 6, 8, 9, 4, 1, 5,
       3, 8, 0, 3, 2, 5, 1, 2, 8, 3, 4, 4, 0, 8, 8, 3, 3, 1, 7, 3, 5, 9,
       6, 3, 2, 6, 1, 3, 6, 0, 7, 2, 1, 7, 1, 4, 2, 4, 2, 1, 7, 9, 6, 1,
       1, 2, 4, 8, 1, 7, 7, 4, 8, 0, 7, 3, 1, 3, 1, 0, 7, 7, 0, 3, 5, 5,
       2, 7, 6, 6, 9, 2, 8, 3, 5, 2, 2, 5, 6, 0, 8, 2, 9, 2, 8, 8, 8, 8,
       7, 4, 9, 3, 0, 6, 6, 3, 2, 1, 3, 2, 2, 9, 3, 0, 0, 5, 7, 8, 1, 4,
       4, 6, 0, 2, 9, 1, 4, 7, 4, 7, 3, 9, 8, 8, 4, 7, 1, 2, 1, 2, 2, 3,
       2, 3, 2, 3, 9, 1, 7, 4, 0, 3, 5, 5, 8, 6, 3, 2, 6, 7, 6, 6, 3, 2,
       7, 8, 1, 1, 7, 5, 6, 4, 9, 5, 1, 3, 3, 4, 7, 8, 9, 1, 1, 6, 9, 1,
       4, 4, 5, 4, 0, 6, 2, 2, 3, 1, 5, 1, 2, 0, 3, 8, 1, 2, 6, 7, 1, 6,
       2, 3, 9, 0, 1, 2, 2, 0, 8, 9], dtype=uint8)}
2020-10-28 11:52:06,592 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 11:52:06,653 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:52:08,688 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:52:10,761 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:52:17,457 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 11:52:17,458 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 11:52:17,458 - engine_logger:INFO - logger info level msg 
2020-10-28 11:52:17,458 - engine_logger:WARNING - logger warn level msg 
2020-10-28 11:52:17,458 - engine_logger:ERROR - logger error level msg 
2020-10-28 11:52:17,458 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 11:52:17,458 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 11:52:17,458 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 11:52:17,459 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-28 11:52:17,477 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:52:17,477 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 11:52:17,477 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 11:52:17,477 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, TunerEngine
2020-10-28 11:52:17,477 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 11:52:17,477 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 11:52:17,495 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:52:17,512 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:52:17,512 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:52:17,512 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 11:52:17,512 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:52:17,512 - engine_logger:INFO - Engine instantiated in MP: TunerEngine
2020-10-28 11:52:17,602 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:52:17,718 - engine_logger:INFO - Getting MNIST data.... 
2020-10-28 11:52:18,006 - engine_logger:INFO - Got MNIST data(reduced sample): {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 2, 8, 3], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, ..., 3, 9, 5], dtype=uint8)}
2020-10-28 11:52:18,006 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 11:52:18,067 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:52:22,445 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:52:28,968 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 11:52:28,968 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 11:52:28,968 - engine_logger:INFO - logger info level msg 
2020-10-28 11:52:28,968 - engine_logger:WARNING - logger warn level msg 
2020-10-28 11:52:28,969 - engine_logger:ERROR - logger error level msg 
2020-10-28 11:52:28,969 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 11:52:28,969 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 11:52:28,969 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 11:52:28,970 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-28 11:52:28,988 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:52:28,988 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 11:52:28,988 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 11:52:28,988 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, TunerEngine
2020-10-28 11:52:28,988 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 11:52:28,988 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 11:52:29,006 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:52:29,023 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:52:29,023 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:52:29,023 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 11:52:29,023 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:52:29,023 - engine_logger:INFO - Engine instantiated in MP: TunerEngine
2020-10-28 11:52:29,118 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:52:29,237 - engine_logger:INFO - Getting MNIST data.... 
2020-10-28 11:52:29,528 - engine_logger:INFO - Got MNIST data(reduced sample): {'x_train': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_train': array([5, 0, 4, ..., 8, 6, 9], dtype=uint8), 'x_test': array([[[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=uint8), 'y_test': array([7, 2, 1, 0, 4, 1, 4, 9, 5, 9, 0, 6, 9, 0, 1, 5, 9, 7, 3, 4, 9, 6,
       6, 5, 4, 0, 7, 4, 0, 1, 3, 1, 3, 4, 7, 2, 7, 1, 2, 1, 1, 7, 4, 2,
       3, 5, 1, 2, 4, 4, 6, 3, 5, 5, 6, 0, 4, 1, 9, 5, 7, 8, 9, 3, 7, 4,
       6, 4, 3, 0, 7, 0, 2, 9, 1, 7, 3, 2, 9, 7, 7, 6, 2, 7, 8, 4, 7, 3,
       6, 1, 3, 6, 9, 3, 1, 4, 1, 7, 6, 9, 6, 0, 5, 4, 9, 9, 2, 1, 9, 4,
       8, 7, 3, 9, 7, 4, 4, 4, 9, 2, 5, 4, 7, 6, 7, 9, 0, 5, 8, 5, 6, 6,
       5, 7, 8, 1, 0, 1, 6, 4, 6, 7, 3, 1, 7, 1, 8, 2, 0, 2, 9, 9, 5, 5,
       1, 5, 6, 0, 3, 4, 4, 6, 5, 4, 6, 5, 4, 5, 1, 4, 4, 7, 2, 3, 2, 7,
       1, 8, 1, 8, 1, 8, 5, 0, 8, 9, 2, 5, 0, 1, 1, 1, 0, 9, 0, 3, 1, 6,
       4, 2, 3, 6, 1, 1, 1, 3, 9, 5, 2, 9, 4, 5, 9, 3, 9, 0, 3, 6, 5, 5,
       7, 2, 2, 7, 1, 2, 8, 4, 1, 7, 3, 3, 8, 8, 7, 9, 2, 2, 4, 1, 5, 9,
       8, 7, 2, 3, 0, 4, 4, 2, 4, 1, 9, 5, 7, 7, 2, 8, 2, 6, 8, 5, 7, 7,
       9, 1, 8, 1, 8, 0, 3, 0, 1, 9, 9, 4, 1, 8, 2, 1, 2, 9, 7, 5, 9, 2,
       6, 4, 1, 5, 8, 2, 9, 2, 0, 4, 0, 0, 2, 8, 4, 7, 1, 2, 4, 0, 2, 7,
       4, 3, 3, 0, 0, 3, 1, 9, 6, 5, 2, 5, 9, 2, 9, 3, 0, 4, 2, 0, 7, 1,
       1, 2, 1, 5, 3, 3, 9, 7, 8, 6, 5, 6, 1, 3, 8, 1, 0, 5, 1, 3, 1, 5,
       5, 6, 1, 8, 5, 1, 7, 9, 4, 6, 2, 2, 5, 0, 6, 5, 6, 3, 7, 2, 0, 8,
       8, 5, 4, 1, 1, 4, 0, 3, 3, 7, 6, 1, 6, 2, 1, 9, 2, 8, 6, 1, 9, 5,
       2, 5, 4, 4, 2, 8, 3, 8, 2, 4, 5, 0, 3, 1, 7, 7, 5, 7, 9, 7, 1, 9,
       2, 1, 4, 2, 9, 2, 0, 4, 9, 1, 4, 8, 1, 8, 4, 5, 9, 8, 8, 3, 7, 6,
       0, 0, 3, 0, 2, 6, 6, 4, 9, 3, 3, 3, 2, 3, 9, 1, 2, 6, 8, 0, 5, 6,
       6, 6, 3, 8, 8, 2, 7, 5, 8, 9, 6, 1, 8, 4, 1, 2, 5, 9, 1, 9, 7, 5,
       4, 0, 8, 9, 9, 1, 0, 5, 2, 3, 7, 8, 9, 4, 0, 6, 3, 9, 5, 2, 1, 3,
       1, 3, 6, 5, 7, 4, 2, 2, 6, 3, 2, 6, 5, 4, 8, 9, 7, 1, 3, 0, 3, 8,
       3, 1, 9, 3, 4, 4, 6, 4, 2, 1, 8, 2, 5, 4, 8, 8, 4, 0, 0, 2, 3, 2,
       7, 7, 0, 8, 7, 4, 4, 7, 9, 6, 9, 0, 9, 8, 0, 4, 6, 0, 6, 3, 5, 4,
       8, 3, 3, 9, 3, 3, 3, 7, 8, 0, 8, 2, 1, 7, 0, 6, 5, 4, 3, 8, 0, 9,
       6, 3, 8, 0, 9, 9, 6, 8, 6, 8, 5, 7, 8, 6, 0, 2, 4, 0, 2, 2, 3, 1,
       9, 7, 5, 1, 0, 8, 4, 6, 2, 6, 7, 9, 3, 2, 9, 8, 2, 2, 9, 2, 7, 3,
       5, 9, 1, 8, 0, 2, 0, 5, 2, 1, 3, 7, 6, 7, 1, 2, 5, 8, 0, 3, 7, 2,
       4, 0, 9, 1, 8, 6, 7, 7, 4, 3, 4, 9, 1, 9, 5, 1, 7, 3, 9, 7, 6, 9,
       1, 3, 7, 8, 3, 3, 6, 7, 2, 8, 5, 8, 5, 1, 1, 4, 4, 3, 1, 0, 7, 7,
       0, 7, 9, 4, 4, 8, 5, 5, 4, 0, 8, 2, 1, 0, 8, 4, 5, 0, 4, 0, 6, 1,
       7, 3, 2, 6, 7, 2, 6, 9, 3, 1, 4, 6, 2, 5, 4, 2, 0, 6, 2, 1, 7, 3,
       4, 1, 0, 5, 4, 3, 1, 1, 7, 4, 9, 9, 4, 8, 4, 0, 2, 4, 5, 1, 1, 6,
       4, 7, 1, 9, 4, 2, 4, 1, 5, 5, 3, 8, 3, 1, 4, 5, 6, 8, 9, 4, 1, 5,
       3, 8, 0, 3, 2, 5, 1, 2, 8, 3, 4, 4, 0, 8, 8, 3, 3, 1, 7, 3, 5, 9,
       6, 3, 2, 6, 1, 3, 6, 0, 7, 2, 1, 7, 1, 4, 2, 4, 2, 1, 7, 9, 6, 1,
       1, 2, 4, 8, 1, 7, 7, 4, 8, 0, 7, 3, 1, 3, 1, 0, 7, 7, 0, 3, 5, 5,
       2, 7, 6, 6, 9, 2, 8, 3, 5, 2, 2, 5, 6, 0, 8, 2, 9, 2, 8, 8, 8, 8,
       7, 4, 9, 3, 0, 6, 6, 3, 2, 1, 3, 2, 2, 9, 3, 0, 0, 5, 7, 8, 1, 4,
       4, 6, 0, 2, 9, 1, 4, 7, 4, 7, 3, 9, 8, 8, 4, 7, 1, 2, 1, 2, 2, 3,
       2, 3, 2, 3, 9, 1, 7, 4, 0, 3, 5, 5, 8, 6, 3, 2, 6, 7, 6, 6, 3, 2,
       7, 8, 1, 1, 7, 5, 6, 4, 9, 5, 1, 3, 3, 4, 7, 8, 9, 1, 1, 6, 9, 1,
       4, 4, 5, 4, 0, 6, 2, 2, 3, 1, 5, 1, 2, 0, 3, 8, 1, 2, 6, 7, 1, 6,
       2, 3, 9, 0, 1, 2, 2, 0, 8, 9], dtype=uint8)}
2020-10-28 11:52:29,528 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 11:52:29,590 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:52:32,076 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:52:34,599 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:52:37,077 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:52:39,581 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:52:41,941 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:52:44,395 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:52:45,972 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:52:47,708 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:52:50,230 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:52:52,431 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:52:55,027 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:52:57,565 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:53:00,356 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:53:03,203 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:53:05,874 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:53:08,355 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:53:10,725 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:53:13,198 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:53:15,675 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:53:18,234 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:53:20,694 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:53:23,166 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:53:25,942 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:53:28,642 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:53:31,586 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:53:34,366 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:53:53,785 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 11:53:53,785 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 11:53:53,785 - engine_logger:INFO - logger info level msg 
2020-10-28 11:53:53,785 - engine_logger:WARNING - logger warn level msg 
2020-10-28 11:53:53,785 - engine_logger:ERROR - logger error level msg 
2020-10-28 11:53:53,785 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 11:53:53,785 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 11:53:53,785 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 11:53:53,787 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-28 11:53:53,805 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:53:53,805 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 11:53:53,806 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 11:53:53,806 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, TunerEngine
2020-10-28 11:53:53,806 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 11:53:53,806 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 11:53:53,824 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:53:53,842 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:53:53,843 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:53:53,843 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 11:53:53,843 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:53:53,843 - engine_logger:INFO - Engine instantiated in MP: TunerEngine
2020-10-28 11:53:53,950 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:53:54,086 - engine_logger:INFO - Getting MNIST data.... 
2020-10-28 11:54:44,213 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 11:54:44,213 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 11:54:44,213 - engine_logger:INFO - logger info level msg 
2020-10-28 11:54:44,213 - engine_logger:WARNING - logger warn level msg 
2020-10-28 11:54:44,213 - engine_logger:ERROR - logger error level msg 
2020-10-28 11:54:44,213 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 11:54:44,213 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 11:54:44,213 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 11:54:44,214 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-28 11:54:44,232 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:54:44,232 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 11:54:44,232 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 11:54:44,232 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, TunerEngine
2020-10-28 11:54:44,233 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 11:54:44,233 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 11:54:44,250 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:54:44,268 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:54:44,268 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:54:44,268 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 11:54:44,268 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:54:44,268 - engine_logger:INFO - Engine instantiated in MP: TunerEngine
2020-10-28 11:54:44,374 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {'path': 'mnist.npz'}}}
2020-10-28 11:54:44,508 - engine_logger:INFO - Getting MNIST data.... 
2020-10-28 11:55:41,047 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 11:55:41,047 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 11:55:41,047 - engine_logger:INFO - logger info level msg 
2020-10-28 11:55:41,047 - engine_logger:WARNING - logger warn level msg 
2020-10-28 11:55:41,047 - engine_logger:ERROR - logger error level msg 
2020-10-28 11:55:41,047 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 11:55:41,047 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 11:55:41,047 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 11:55:41,048 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-28 11:55:41,067 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'type': 'cifar10', 'kwargs': None}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:55:41,067 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 11:55:41,067 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 11:55:41,067 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, TunerEngine
2020-10-28 11:55:41,067 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 11:55:41,067 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 11:55:41,086 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'type': 'cifar10', 'kwargs': None}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:55:41,103 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'type': 'cifar10', 'kwargs': None}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:55:41,104 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:55:41,104 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 11:55:55,332 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 11:55:55,332 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 11:55:55,332 - engine_logger:INFO - logger info level msg 
2020-10-28 11:55:55,332 - engine_logger:WARNING - logger warn level msg 
2020-10-28 11:55:55,333 - engine_logger:ERROR - logger error level msg 
2020-10-28 11:55:55,333 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 11:55:55,333 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 11:55:55,333 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 11:55:55,336 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-28 11:55:55,423 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'type': 'cifar10', 'kwargs': None}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:55:55,423 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 11:55:55,423 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 11:55:55,423 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, TunerEngine
2020-10-28 11:55:55,423 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 11:55:55,424 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 11:55:55,510 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'type': 'cifar10', 'kwargs': None}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:55:55,598 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'type': 'cifar10', 'kwargs': None}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:55:55,598 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:55:55,599 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 11:56:25,812 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 11:56:25,812 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 11:56:25,812 - engine_logger:INFO - logger info level msg 
2020-10-28 11:56:25,812 - engine_logger:WARNING - logger warn level msg 
2020-10-28 11:56:25,812 - engine_logger:ERROR - logger error level msg 
2020-10-28 11:56:25,812 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 11:56:25,812 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 11:56:25,813 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 11:56:25,814 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-28 11:56:25,832 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': None}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:56:25,832 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 11:56:25,832 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 11:56:25,832 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, TunerEngine
2020-10-28 11:56:25,832 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 11:56:25,832 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 11:56:25,850 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': None}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:56:25,867 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': None}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:56:25,868 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:56:25,868 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 11:56:25,868 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:56:25,868 - engine_logger:INFO - Engine instantiated in MP: TunerEngine
2020-10-28 11:56:25,975 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': None}}
2020-10-28 11:56:26,105 - engine_logger:INFO - Getting MNIST data.... 
2020-10-28 11:56:35,728 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 11:56:35,728 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 11:56:35,729 - engine_logger:INFO - logger info level msg 
2020-10-28 11:56:35,729 - engine_logger:WARNING - logger warn level msg 
2020-10-28 11:56:35,729 - engine_logger:ERROR - logger error level msg 
2020-10-28 11:56:35,729 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 11:56:35,729 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 11:56:35,729 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 11:56:35,730 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-28 11:56:35,749 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': None}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:56:35,749 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 11:56:35,749 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 11:56:35,749 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, TunerEngine
2020-10-28 11:56:35,749 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 11:56:35,749 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 11:56:35,768 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': None}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:56:35,785 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': None}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:56:35,785 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:56:35,785 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 11:56:35,785 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:56:35,785 - engine_logger:INFO - Engine instantiated in MP: TunerEngine
2020-10-28 11:56:35,891 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': None}}
2020-10-28 11:56:36,020 - engine_logger:INFO - Getting MNIST data.... 
2020-10-28 11:56:59,329 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 11:56:59,329 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 11:56:59,329 - engine_logger:INFO - logger info level msg 
2020-10-28 11:56:59,329 - engine_logger:WARNING - logger warn level msg 
2020-10-28 11:56:59,330 - engine_logger:ERROR - logger error level msg 
2020-10-28 11:56:59,330 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 11:56:59,330 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 11:56:59,330 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 11:56:59,331 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-28 11:56:59,349 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:56:59,349 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 11:56:59,349 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 11:56:59,349 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, TunerEngine
2020-10-28 11:56:59,349 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 11:56:59,349 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 11:56:59,367 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:56:59,385 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:56:59,385 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:56:59,385 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 11:56:59,385 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:56:59,385 - engine_logger:INFO - Engine instantiated in MP: TunerEngine
2020-10-28 11:56:59,492 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 11:56:59,619 - engine_logger:INFO - Getting MNIST data.... 
2020-10-28 11:57:42,340 - engine_logger:INFO - Got MNIST data(reduced sample): {'x_train': array([[[[ 59,  62,  63],
         [ 43,  46,  45],
         [ 50,  48,  43],
         ...,
         [158, 132, 108],
         [152, 125, 102],
         [148, 124, 103]],

        [[ 16,  20,  20],
         [  0,   0,   0],
         [ 18,   8,   0],
         ...,
         [123,  88,  55],
         [119,  83,  50],
         [122,  87,  57]],

        [[ 25,  24,  21],
         [ 16,   7,   0],
         [ 49,  27,   8],
         ...,
         [118,  84,  50],
         [120,  84,  50],
         [109,  73,  42]],

        ...,

        [[208, 170,  96],
         [201, 153,  34],
         [198, 161,  26],
         ...,
         [160, 133,  70],
         [ 56,  31,   7],
         [ 53,  34,  20]],

        [[180, 139,  96],
         [173, 123,  42],
         [186, 144,  30],
         ...,
         [184, 148,  94],
         [ 97,  62,  34],
         [ 83,  53,  34]],

        [[177, 144, 116],
         [168, 129,  94],
         [179, 142,  87],
         ...,
         [216, 184, 140],
         [151, 118,  84],
         [123,  92,  72]]],


       [[[154, 177, 187],
         [126, 137, 136],
         [105, 104,  95],
         ...,
         [ 91,  95,  71],
         [ 87,  90,  71],
         [ 79,  81,  70]],

        [[140, 160, 169],
         [145, 153, 154],
         [125, 125, 118],
         ...,
         [ 96,  99,  78],
         [ 77,  80,  62],
         [ 71,  73,  61]],

        [[140, 155, 164],
         [139, 146, 149],
         [115, 115, 112],
         ...,
         [ 79,  82,  64],
         [ 68,  70,  55],
         [ 67,  69,  55]],

        ...,

        [[175, 167, 166],
         [156, 154, 160],
         [154, 160, 170],
         ...,
         [ 42,  34,  36],
         [ 61,  53,  57],
         [ 93,  83,  91]],

        [[165, 154, 128],
         [156, 152, 130],
         [159, 161, 142],
         ...,
         [103,  93,  96],
         [123, 114, 120],
         [131, 121, 131]],

        [[163, 148, 120],
         [158, 148, 122],
         [163, 156, 133],
         ...,
         [143, 133, 139],
         [143, 134, 142],
         [143, 133, 144]]],


       [[[255, 255, 255],
         [253, 253, 253],
         [253, 253, 253],
         ...,
         [253, 253, 253],
         [253, 253, 253],
         [253, 253, 253]],

        [[255, 255, 255],
         [255, 255, 255],
         [255, 255, 255],
         ...,
         [255, 255, 255],
         [255, 255, 255],
         [255, 255, 255]],

        [[255, 255, 255],
         [254, 254, 254],
         [254, 254, 254],
         ...,
         [254, 254, 254],
         [254, 254, 254],
         [254, 254, 254]],

        ...,

        [[113, 120, 112],
         [111, 118, 111],
         [105, 112, 106],
         ...,
         [ 72,  81,  80],
         [ 72,  80,  79],
         [ 72,  80,  79]],

        [[111, 118, 110],
         [104, 111, 104],
         [ 99, 106,  98],
         ...,
         [ 68,  75,  73],
         [ 70,  76,  75],
         [ 78,  84,  82]],

        [[106, 113, 105],
         [ 99, 106,  98],
         [ 95, 102,  94],
         ...,
         [ 78,  85,  83],
         [ 79,  85,  83],
         [ 80,  86,  84]]],


       ...,


       [[[167, 163, 145],
         [206, 201, 181],
         [202, 196, 177],
         ...,
         [ 91,  85,  89],
         [ 50,  64,  68],
         [ 46,  86,  90]],

        [[156, 153, 136],
         [206, 201, 181],
         [206, 199, 180],
         ...,
         [171, 166, 174],
         [ 99, 115, 123],
         [ 48,  88,  94]],

        [[147, 143, 128],
         [192, 186, 167],
         [206, 198, 177],
         ...,
         [173, 176, 186],
         [106, 130, 140],
         [ 48,  90,  96]],

        ...,

        [[144, 156, 151],
         [145, 153, 148],
         [152, 160, 156],
         ...,
         [ 45,  85,  91],
         [ 41,  78,  85],
         [ 47,  88,  94]],

        [[143, 155, 150],
         [148, 157, 154],
         [156, 167, 167],
         ...,
         [ 32,  56,  65],
         [ 31,  58,  66],
         [ 34,  66,  73]],

        [[139, 154, 149],
         [144, 157, 155],
         [140, 157, 159],
         ...,
         [ 39,  75,  81],
         [ 42,  82,  87],
         [ 42,  78,  84]]],


       [[[154, 152, 125],
         [156, 154, 130],
         [149, 146, 125],
         ...,
         [156, 154, 110],
         [131, 130,  97],
         [154, 149, 111]],

        [[163, 150, 111],
         [178, 167, 125],
         [179, 168, 126],
         ...,
         [185, 175, 127],
         [166, 165, 118],
         [168, 164, 117]],

        [[198, 184, 126],
         [188, 173, 117],
         [193, 179, 121],
         ...,
         [188, 166, 118],
         [184, 172, 126],
         [183, 179, 128]],

        ...,

        [[187, 185, 132],
         [175, 175, 129],
         [162, 162, 109],
         ...,
         [201, 217, 129],
         [200, 220, 129],
         [190, 205, 118]],

        [[157, 160, 109],
         [147, 153, 104],
         [144, 157,  98],
         ...,
         [213, 232, 134],
         [191, 227, 117],
         [173, 216, 105]],

        [[153, 150, 102],
         [150, 159,  99],
         [173, 195, 124],
         ...,
         [195, 234, 113],
         [187, 237, 108],
         [194, 247, 114]]],


       [[[ 45,  32,  21],
         [ 48,  34,  21],
         [ 66,  54,  41],
         ...,
         [ 19,   9,   7],
         [ 23,  14,  10],
         [ 20,  10,   8]],

        [[ 47,  33,  21],
         [ 50,  35,  22],
         [ 71,  58,  44],
         ...,
         [ 22,  10,   8],
         [ 22,  11,  10],
         [ 19,   8,   7]],

        [[ 47,  35,  22],
         [ 54,  40,  24],
         [ 63,  50,  35],
         ...,
         [ 24,  10,   7],
         [ 18,   6,   6],
         [ 18,   7,   6]],

        ...,

        [[109, 105,  66],
         [113, 108,  68],
         [115, 106,  67],
         ...,
         [103,  87,  55],
         [ 85,  75,  43],
         [ 97,  85,  52]],

        [[ 96,  90,  53],
         [114, 106,  69],
         [111, 102,  64],
         ...,
         [164, 146, 104],
         [154, 135,  89],
         [152, 139,  97]],

        [[ 97,  91,  52],
         [ 85,  79,  40],
         [105,  99,  57],
         ...,
         [161, 148, 108],
         [156, 137,  93],
         [156, 142, 100]]]], dtype=uint8), 'y_train': array([[6],
       [9],
       [9],
       ...,
       [5],
       [4],
       [6]], dtype=uint8), 'x_test': array([[[[158, 112,  49],
         [159, 111,  47],
         [165, 116,  51],
         ...,
         [137,  95,  36],
         [126,  91,  36],
         [116,  85,  33]],

        [[152, 112,  51],
         [151, 110,  40],
         [159, 114,  45],
         ...,
         [136,  95,  31],
         [125,  91,  32],
         [119,  88,  34]],

        [[151, 110,  47],
         [151, 109,  33],
         [158, 111,  36],
         ...,
         [139,  98,  34],
         [130,  95,  34],
         [120,  89,  33]],

        ...,

        [[ 68, 124, 177],
         [ 42, 100, 148],
         [ 31,  88, 137],
         ...,
         [ 38,  97, 146],
         [ 13,  64, 108],
         [ 40,  85, 127]],

        [[ 61, 116, 168],
         [ 49, 102, 148],
         [ 35,  85, 132],
         ...,
         [ 26,  82, 130],
         [ 29,  82, 126],
         [ 20,  64, 107]],

        [[ 54, 107, 160],
         [ 56, 105, 149],
         [ 45,  89, 132],
         ...,
         [ 24,  77, 124],
         [ 34,  84, 129],
         [ 21,  67, 110]]],


       [[[235, 235, 235],
         [231, 231, 231],
         [232, 232, 232],
         ...,
         [233, 233, 233],
         [233, 233, 233],
         [232, 232, 232]],

        [[238, 238, 238],
         [235, 235, 235],
         [235, 235, 235],
         ...,
         [236, 236, 236],
         [236, 236, 236],
         [235, 235, 235]],

        [[237, 237, 237],
         [234, 234, 234],
         [234, 234, 234],
         ...,
         [235, 235, 235],
         [235, 235, 235],
         [234, 234, 234]],

        ...,

        [[ 87,  99,  89],
         [ 43,  51,  37],
         [ 19,  23,  11],
         ...,
         [169, 184, 179],
         [182, 197, 193],
         [188, 202, 201]],

        [[ 82,  96,  82],
         [ 46,  57,  36],
         [ 36,  44,  22],
         ...,
         [174, 189, 183],
         [185, 200, 196],
         [187, 202, 200]],

        [[ 85, 101,  83],
         [ 62,  75,  48],
         [ 58,  67,  38],
         ...,
         [168, 183, 178],
         [180, 195, 191],
         [186, 200, 199]]],


       [[[158, 190, 222],
         [158, 187, 218],
         [139, 166, 194],
         ...,
         [228, 231, 234],
         [237, 239, 243],
         [238, 241, 246]],

        [[170, 200, 229],
         [172, 199, 226],
         [151, 176, 201],
         ...,
         [232, 232, 236],
         [246, 246, 250],
         [246, 247, 251]],

        [[174, 201, 225],
         [176, 200, 222],
         [157, 179, 199],
         ...,
         [230, 229, 232],
         [250, 249, 251],
         [245, 244, 247]],

        ...,

        [[ 31,  40,  45],
         [ 30,  39,  44],
         [ 26,  35,  40],
         ...,
         [ 37,  40,  46],
         [  9,  13,  14],
         [  4,   7,   5]],

        [[ 23,  34,  39],
         [ 27,  38,  43],
         [ 25,  36,  41],
         ...,
         [ 19,  20,  24],
         [  4,   6,   3],
         [  5,   7,   3]],

        [[ 28,  41,  47],
         [ 30,  43,  50],
         [ 32,  45,  52],
         ...,
         [  5,   6,   8],
         [  4,   5,   3],
         [  7,   8,   7]]],


       ...,


       [[[103, 124, 101],
         [124, 149, 120],
         [ 73,  98,  73],
         ...,
         [ 17,  25,  16],
         [ 10,  15,   9],
         [ 15,  19,  13]],

        [[162, 175, 148],
         [122, 137, 107],
         [111, 126, 103],
         ...,
         [ 28,  38,  25],
         [ 18,  22,  16],
         [ 11,  12,   8]],

        [[226, 236, 200],
         [209, 217, 183],
         [204, 216, 161],
         ...,
         [ 21,  29,  18],
         [ 19,  24,  17],
         [ 14,  17,  11]],

        ...,

        [[132, 134, 145],
         [126, 128, 138],
         [127, 127, 139],
         ...,
         [ 43,  36,  33],
         [ 64,  46,  31],
         [ 88,  53,  32]],

        [[125, 123, 134],
         [123, 122, 132],
         [121, 120, 132],
         ...,
         [ 41,  42,  43],
         [ 52,  39,  35],
         [ 87,  56,  43]],

        [[121, 119, 131],
         [119, 117, 129],
         [118, 118, 130],
         ...,
         [ 48,  49,  53],
         [ 53,  48,  50],
         [ 67,  42,  37]]],


       [[[ 77, 114,  33],
         [ 72, 111,  25],
         [ 76, 110,  34],
         ...,
         [ 59,  64,  46],
         [ 56,  58,  42],
         [ 56,  58,  40]],

        [[ 74, 107,  34],
         [ 71,  93,  31],
         [ 80, 102,  39],
         ...,
         [ 52,  55,  44],
         [ 57,  60,  45],
         [ 54,  58,  39]],

        [[ 80, 101,  38],
         [ 84,  98,  43],
         [ 74,  95,  32],
         ...,
         [ 50,  55,  51],
         [ 50,  55,  50],
         [ 61,  67,  59]],

        ...,

        [[ 65,  92,  26],
         [ 63,  84,  24],
         [ 52,  77,  20],
         ...,
         [ 84,  82,  68],
         [ 56,  57,  48],
         [ 28,  33,  24]],

        [[ 70,  89,  26],
         [ 77,  89,  32],
         [ 60,  92,  30],
         ...,
         [ 77,  77,  66],
         [ 39,  39,  35],
         [ 32,  39,  28]],

        [[ 48,  73,  12],
         [ 57,  71,  21],
         [ 56,  85,  30],
         ...,
         [ 51,  53,  47],
         [ 24,  27,  22],
         [ 35,  44,  30]]],


       [[[175, 180, 174],
         [176, 181, 175],
         [181, 186, 180],
         ...,
         [193, 207, 210],
         [190, 204, 207],
         [188, 202, 205]],

        [[177, 182, 176],
         [179, 184, 178],
         [183, 188, 182],
         ...,
         [196, 210, 213],
         [192, 206, 209],
         [191, 205, 208]],

        [[176, 181, 175],
         [177, 182, 176],
         [182, 187, 181],
         ...,
         [194, 208, 211],
         [191, 205, 208],
         [189, 203, 206]],

        ...,

        [[122, 121, 129],
         [117, 118, 129],
         [114, 118, 130],
         ...,
         [ 58,  73,  91],
         [ 81,  97, 118],
         [ 99, 118, 141]],

        [[116, 115, 123],
         [110, 111, 121],
         [107, 111, 123],
         ...,
         [ 57,  70,  88],
         [ 78,  93, 113],
         [100, 117, 140]],

        [[113, 112, 119],
         [106, 107, 117],
         [105, 109, 121],
         ...,
         [ 57,  68,  85],
         [ 71,  85, 103],
         [ 93, 110, 131]]]], dtype=uint8), 'y_test': array([[3],
       [8],
       [8],
       [0],
       [6],
       [6],
       [1],
       [6],
       [3],
       [1],
       [0],
       [9],
       [5],
       [7],
       [9],
       [8],
       [5],
       [7],
       [8],
       [6],
       [7],
       [0],
       [4],
       [9],
       [5],
       [2],
       [4],
       [0],
       [9],
       [6],
       [6],
       [5],
       [4],
       [5],
       [9],
       [2],
       [4],
       [1],
       [9],
       [5],
       [4],
       [6],
       [5],
       [6],
       [0],
       [9],
       [3],
       [9],
       [7],
       [6],
       [9],
       [8],
       [0],
       [3],
       [8],
       [8],
       [7],
       [7],
       [4],
       [6],
       [7],
       [3],
       [6],
       [3],
       [6],
       [2],
       [1],
       [2],
       [3],
       [7],
       [2],
       [6],
       [8],
       [8],
       [0],
       [2],
       [9],
       [3],
       [3],
       [8],
       [8],
       [1],
       [1],
       [7],
       [2],
       [5],
       [2],
       [7],
       [8],
       [9],
       [0],
       [3],
       [8],
       [6],
       [4],
       [6],
       [6],
       [0],
       [0],
       [7],
       [4],
       [5],
       [6],
       [3],
       [1],
       [1],
       [3],
       [6],
       [8],
       [7],
       [4],
       [0],
       [6],
       [2],
       [1],
       [3],
       [0],
       [4],
       [2],
       [7],
       [8],
       [3],
       [1],
       [2],
       [8],
       [0],
       [8],
       [3],
       [5],
       [2],
       [4],
       [1],
       [8],
       [9],
       [1],
       [2],
       [9],
       [7],
       [2],
       [9],
       [6],
       [5],
       [6],
       [3],
       [8],
       [7],
       [6],
       [2],
       [5],
       [2],
       [8],
       [9],
       [6],
       [0],
       [0],
       [5],
       [2],
       [9],
       [5],
       [4],
       [2],
       [1],
       [6],
       [6],
       [8],
       [4],
       [8],
       [4],
       [5],
       [0],
       [9],
       [9],
       [9],
       [8],
       [9],
       [9],
       [3],
       [7],
       [5],
       [0],
       [0],
       [5],
       [2],
       [2],
       [3],
       [8],
       [6],
       [3],
       [4],
       [0],
       [5],
       [8],
       [0],
       [1],
       [7],
       [2],
       [8],
       [8],
       [7],
       [8],
       [5],
       [1],
       [8],
       [7],
       [1],
       [3],
       [0],
       [5],
       [7],
       [9],
       [7],
       [4],
       [5],
       [9],
       [8],
       [0],
       [7],
       [9],
       [8],
       [2],
       [7],
       [6],
       [9],
       [4],
       [3],
       [9],
       [6],
       [4],
       [7],
       [6],
       [5],
       [1],
       [5],
       [8],
       [8],
       [0],
       [4],
       [0],
       [5],
       [5],
       [1],
       [1],
       [8],
       [9],
       [0],
       [3],
       [1],
       [9],
       [2],
       [2],
       [5],
       [3],
       [9],
       [9],
       [4],
       [0],
       [3],
       [0],
       [0],
       [9],
       [8],
       [1],
       [5],
       [7],
       [0],
       [8],
       [2],
       [4],
       [7],
       [0],
       [2],
       [3],
       [6],
       [3],
       [8],
       [5],
       [0],
       [3],
       [4],
       [3],
       [9],
       [0],
       [6],
       [1],
       [0],
       [9],
       [1],
       [0],
       [7],
       [9],
       [1],
       [2],
       [6],
       [9],
       [3],
       [4],
       [6],
       [0],
       [0],
       [6],
       [6],
       [6],
       [3],
       [2],
       [6],
       [1],
       [8],
       [2],
       [1],
       [6],
       [8],
       [6],
       [8],
       [0],
       [4],
       [0],
       [7],
       [7],
       [5],
       [5],
       [3],
       [5],
       [2],
       [3],
       [4],
       [1],
       [7],
       [5],
       [4],
       [6],
       [1],
       [9],
       [3],
       [6],
       [6],
       [9],
       [3],
       [8],
       [0],
       [7],
       [2],
       [6],
       [2],
       [5],
       [8],
       [5],
       [4],
       [6],
       [8],
       [9],
       [9],
       [1],
       [0],
       [2],
       [2],
       [7],
       [3],
       [2],
       [8],
       [0],
       [9],
       [5],
       [8],
       [1],
       [9],
       [4],
       [1],
       [3],
       [8],
       [1],
       [4],
       [7],
       [9],
       [4],
       [2],
       [7],
       [0],
       [7],
       [0],
       [6],
       [6],
       [9],
       [0],
       [9],
       [2],
       [8],
       [7],
       [2],
       [2],
       [5],
       [1],
       [2],
       [6],
       [2],
       [9],
       [6],
       [2],
       [3],
       [0],
       [3],
       [9],
       [8],
       [7],
       [8],
       [8],
       [4],
       [0],
       [1],
       [8],
       [2],
       [7],
       [9],
       [3],
       [6],
       [1],
       [9],
       [0],
       [7],
       [3],
       [7],
       [4],
       [5],
       [0],
       [0],
       [2],
       [9],
       [3],
       [4],
       [0],
       [6],
       [2],
       [5],
       [3],
       [7],
       [3],
       [7],
       [2],
       [5],
       [3],
       [1],
       [1],
       [4],
       [9],
       [9],
       [5],
       [7],
       [5],
       [0],
       [2],
       [2],
       [2],
       [9],
       [7],
       [3],
       [9],
       [4],
       [3],
       [5],
       [4],
       [6],
       [5],
       [6],
       [1],
       [4],
       [3],
       [4],
       [4],
       [3],
       [7],
       [8],
       [3],
       [7],
       [8],
       [0],
       [5],
       [7],
       [6],
       [0],
       [5],
       [4],
       [8],
       [6],
       [8],
       [5],
       [5],
       [9],
       [9],
       [9],
       [5],
       [0],
       [1],
       [0],
       [8],
       [1],
       [1],
       [8],
       [0],
       [2],
       [2],
       [0],
       [4],
       [6],
       [5],
       [4],
       [9],
       [4],
       [7],
       [9],
       [9],
       [4],
       [5],
       [6],
       [6],
       [1],
       [5],
       [3],
       [8],
       [9],
       [5],
       [8],
       [5],
       [7],
       [0],
       [7],
       [0],
       [5],
       [0],
       [0],
       [4],
       [6],
       [9],
       [0],
       [9],
       [5],
       [6],
       [6],
       [6],
       [2],
       [9],
       [0],
       [1],
       [7],
       [6],
       [7],
       [5],
       [9],
       [1],
       [6],
       [2],
       [5],
       [5],
       [5],
       [8],
       [5],
       [9],
       [4],
       [6],
       [4],
       [3],
       [2],
       [0],
       [7],
       [6],
       [2],
       [2],
       [3],
       [9],
       [7],
       [9],
       [2],
       [6],
       [7],
       [1],
       [3],
       [6],
       [6],
       [8],
       [9],
       [7],
       [5],
       [4],
       [0],
       [8],
       [4],
       [0],
       [9],
       [3],
       [4],
       [8],
       [9],
       [6],
       [9],
       [2],
       [6],
       [1],
       [4],
       [7],
       [3],
       [5],
       [3],
       [8],
       [5],
       [0],
       [2],
       [1],
       [6],
       [4],
       [3],
       [3],
       [9],
       [6],
       [9],
       [8],
       [8],
       [5],
       [8],
       [6],
       [6],
       [2],
       [1],
       [7],
       [7],
       [1],
       [2],
       [7],
       [9],
       [9],
       [4],
       [4],
       [1],
       [2],
       [5],
       [6],
       [8],
       [7],
       [6],
       [8],
       [3],
       [0],
       [5],
       [5],
       [3],
       [0],
       [7],
       [9],
       [1],
       [3],
       [4],
       [4],
       [5],
       [3],
       [9],
       [5],
       [6],
       [9],
       [2],
       [1],
       [1],
       [4],
       [1],
       [9],
       [4],
       [7],
       [6],
       [3],
       [8],
       [9],
       [0],
       [1],
       [3],
       [6],
       [3],
       [6],
       [3],
       [2],
       [0],
       [3],
       [1],
       [0],
       [5],
       [9],
       [6],
       [4],
       [8],
       [9],
       [6],
       [9],
       [6],
       [3],
       [0],
       [3],
       [2],
       [2],
       [7],
       [8],
       [3],
       [8],
       [2],
       [7],
       [5],
       [7],
       [2],
       [4],
       [8],
       [7],
       [4],
       [2],
       [9],
       [8],
       [8],
       [6],
       [8],
       [8],
       [7],
       [4],
       [3],
       [3],
       [8],
       [4],
       [9],
       [4],
       [8],
       [8],
       [1],
       [8],
       [2],
       [1],
       [3],
       [6],
       [5],
       [4],
       [2],
       [7],
       [9],
       [9],
       [4],
       [1],
       [4],
       [1],
       [3],
       [2],
       [7],
       [0],
       [7],
       [9],
       [7],
       [6],
       [6],
       [2],
       [5],
       [9],
       [2],
       [9],
       [1],
       [2],
       [2],
       [6],
       [8],
       [2],
       [1],
       [3],
       [6],
       [6],
       [0],
       [1],
       [2],
       [7],
       [0],
       [5],
       [4],
       [6],
       [1],
       [6],
       [4],
       [0],
       [2],
       [2],
       [6],
       [0],
       [5],
       [9],
       [1],
       [7],
       [6],
       [7],
       [0],
       [3],
       [9],
       [6],
       [8],
       [3],
       [0],
       [3],
       [4],
       [7],
       [7],
       [1],
       [4],
       [7],
       [2],
       [7],
       [1],
       [4],
       [7],
       [4],
       [4],
       [8],
       [4],
       [7],
       [7],
       [5],
       [3],
       [7],
       [2],
       [0],
       [8],
       [9],
       [5],
       [8],
       [3],
       [6],
       [2],
       [0],
       [8],
       [7],
       [3],
       [7],
       [6],
       [5],
       [3],
       [1],
       [3],
       [2],
       [2],
       [5],
       [4],
       [1],
       [2],
       [9],
       [2],
       [7],
       [0],
       [7],
       [2],
       [1],
       [3],
       [2],
       [0],
       [2],
       [4],
       [7],
       [9],
       [8],
       [9],
       [0],
       [7],
       [7],
       [0],
       [7],
       [8],
       [4],
       [6],
       [3],
       [3],
       [0],
       [1],
       [3],
       [7],
       [0],
       [1],
       [3],
       [1],
       [4],
       [2],
       [3],
       [8],
       [4],
       [2],
       [3],
       [7],
       [8],
       [4],
       [3],
       [0],
       [9],
       [0],
       [0],
       [1],
       [0],
       [4],
       [4],
       [6],
       [7],
       [6],
       [1],
       [1],
       [3],
       [7],
       [3],
       [5],
       [2],
       [6],
       [6],
       [5],
       [8],
       [7],
       [1],
       [6],
       [8],
       [8],
       [5],
       [3],
       [0],
       [4],
       [0],
       [1],
       [3],
       [8],
       [8],
       [0],
       [6],
       [9],
       [9],
       [9],
       [5],
       [5],
       [8],
       [6],
       [0],
       [0],
       [4],
       [2],
       [3],
       [2],
       [7],
       [2],
       [2],
       [5],
       [9],
       [8],
       [9],
       [1],
       [7],
       [4],
       [0],
       [3],
       [0],
       [1],
       [3],
       [8],
       [3],
       [9],
       [6],
       [1],
       [4],
       [7],
       [0],
       [3],
       [7],
       [8],
       [9],
       [1],
       [1],
       [6],
       [6],
       [6],
       [6],
       [9],
       [1],
       [9],
       [9],
       [4],
       [2],
       [1],
       [7],
       [0],
       [6],
       [8],
       [1],
       [9],
       [2],
       [9],
       [0],
       [4],
       [7],
       [8],
       [3],
       [1],
       [2],
       [0],
       [1],
       [5],
       [8],
       [4],
       [6],
       [3],
       [8],
       [1],
       [3],
       [8]], dtype=uint8)}
2020-10-28 11:57:42,340 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 11:57:42,394 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 11:59:26,951 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 11:59:26,951 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 11:59:26,951 - engine_logger:INFO - logger info level msg 
2020-10-28 11:59:26,951 - engine_logger:WARNING - logger warn level msg 
2020-10-28 11:59:26,951 - engine_logger:ERROR - logger error level msg 
2020-10-28 11:59:26,951 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 11:59:26,951 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 11:59:26,951 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 11:59:26,952 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-28 11:59:26,970 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:59:26,970 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 11:59:26,970 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 11:59:26,971 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, TunerEngine
2020-10-28 11:59:26,971 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 11:59:26,971 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 11:59:26,988 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:59:27,005 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:59:27,005 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:59:27,005 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 11:59:27,006 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:59:27,006 - engine_logger:INFO - Engine instantiated in MP: TunerEngine
2020-10-28 11:59:27,111 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 11:59:27,283 - engine_logger:INFO - Getting MNIST data.... 
2020-10-28 11:59:28,224 - engine_logger:INFO - Got MNIST data(reduced sample): {'x_train': array([[[[ 59,  62,  63],
         [ 43,  46,  45],
         [ 50,  48,  43],
         ...,
         [158, 132, 108],
         [152, 125, 102],
         [148, 124, 103]],

        [[ 16,  20,  20],
         [  0,   0,   0],
         [ 18,   8,   0],
         ...,
         [123,  88,  55],
         [119,  83,  50],
         [122,  87,  57]],

        [[ 25,  24,  21],
         [ 16,   7,   0],
         [ 49,  27,   8],
         ...,
         [118,  84,  50],
         [120,  84,  50],
         [109,  73,  42]],

        ...,

        [[208, 170,  96],
         [201, 153,  34],
         [198, 161,  26],
         ...,
         [160, 133,  70],
         [ 56,  31,   7],
         [ 53,  34,  20]],

        [[180, 139,  96],
         [173, 123,  42],
         [186, 144,  30],
         ...,
         [184, 148,  94],
         [ 97,  62,  34],
         [ 83,  53,  34]],

        [[177, 144, 116],
         [168, 129,  94],
         [179, 142,  87],
         ...,
         [216, 184, 140],
         [151, 118,  84],
         [123,  92,  72]]],


       [[[154, 177, 187],
         [126, 137, 136],
         [105, 104,  95],
         ...,
         [ 91,  95,  71],
         [ 87,  90,  71],
         [ 79,  81,  70]],

        [[140, 160, 169],
         [145, 153, 154],
         [125, 125, 118],
         ...,
         [ 96,  99,  78],
         [ 77,  80,  62],
         [ 71,  73,  61]],

        [[140, 155, 164],
         [139, 146, 149],
         [115, 115, 112],
         ...,
         [ 79,  82,  64],
         [ 68,  70,  55],
         [ 67,  69,  55]],

        ...,

        [[175, 167, 166],
         [156, 154, 160],
         [154, 160, 170],
         ...,
         [ 42,  34,  36],
         [ 61,  53,  57],
         [ 93,  83,  91]],

        [[165, 154, 128],
         [156, 152, 130],
         [159, 161, 142],
         ...,
         [103,  93,  96],
         [123, 114, 120],
         [131, 121, 131]],

        [[163, 148, 120],
         [158, 148, 122],
         [163, 156, 133],
         ...,
         [143, 133, 139],
         [143, 134, 142],
         [143, 133, 144]]],


       [[[255, 255, 255],
         [253, 253, 253],
         [253, 253, 253],
         ...,
         [253, 253, 253],
         [253, 253, 253],
         [253, 253, 253]],

        [[255, 255, 255],
         [255, 255, 255],
         [255, 255, 255],
         ...,
         [255, 255, 255],
         [255, 255, 255],
         [255, 255, 255]],

        [[255, 255, 255],
         [254, 254, 254],
         [254, 254, 254],
         ...,
         [254, 254, 254],
         [254, 254, 254],
         [254, 254, 254]],

        ...,

        [[113, 120, 112],
         [111, 118, 111],
         [105, 112, 106],
         ...,
         [ 72,  81,  80],
         [ 72,  80,  79],
         [ 72,  80,  79]],

        [[111, 118, 110],
         [104, 111, 104],
         [ 99, 106,  98],
         ...,
         [ 68,  75,  73],
         [ 70,  76,  75],
         [ 78,  84,  82]],

        [[106, 113, 105],
         [ 99, 106,  98],
         [ 95, 102,  94],
         ...,
         [ 78,  85,  83],
         [ 79,  85,  83],
         [ 80,  86,  84]]],


       ...,


       [[[167, 163, 145],
         [206, 201, 181],
         [202, 196, 177],
         ...,
         [ 91,  85,  89],
         [ 50,  64,  68],
         [ 46,  86,  90]],

        [[156, 153, 136],
         [206, 201, 181],
         [206, 199, 180],
         ...,
         [171, 166, 174],
         [ 99, 115, 123],
         [ 48,  88,  94]],

        [[147, 143, 128],
         [192, 186, 167],
         [206, 198, 177],
         ...,
         [173, 176, 186],
         [106, 130, 140],
         [ 48,  90,  96]],

        ...,

        [[144, 156, 151],
         [145, 153, 148],
         [152, 160, 156],
         ...,
         [ 45,  85,  91],
         [ 41,  78,  85],
         [ 47,  88,  94]],

        [[143, 155, 150],
         [148, 157, 154],
         [156, 167, 167],
         ...,
         [ 32,  56,  65],
         [ 31,  58,  66],
         [ 34,  66,  73]],

        [[139, 154, 149],
         [144, 157, 155],
         [140, 157, 159],
         ...,
         [ 39,  75,  81],
         [ 42,  82,  87],
         [ 42,  78,  84]]],


       [[[154, 152, 125],
         [156, 154, 130],
         [149, 146, 125],
         ...,
         [156, 154, 110],
         [131, 130,  97],
         [154, 149, 111]],

        [[163, 150, 111],
         [178, 167, 125],
         [179, 168, 126],
         ...,
         [185, 175, 127],
         [166, 165, 118],
         [168, 164, 117]],

        [[198, 184, 126],
         [188, 173, 117],
         [193, 179, 121],
         ...,
         [188, 166, 118],
         [184, 172, 126],
         [183, 179, 128]],

        ...,

        [[187, 185, 132],
         [175, 175, 129],
         [162, 162, 109],
         ...,
         [201, 217, 129],
         [200, 220, 129],
         [190, 205, 118]],

        [[157, 160, 109],
         [147, 153, 104],
         [144, 157,  98],
         ...,
         [213, 232, 134],
         [191, 227, 117],
         [173, 216, 105]],

        [[153, 150, 102],
         [150, 159,  99],
         [173, 195, 124],
         ...,
         [195, 234, 113],
         [187, 237, 108],
         [194, 247, 114]]],


       [[[ 45,  32,  21],
         [ 48,  34,  21],
         [ 66,  54,  41],
         ...,
         [ 19,   9,   7],
         [ 23,  14,  10],
         [ 20,  10,   8]],

        [[ 47,  33,  21],
         [ 50,  35,  22],
         [ 71,  58,  44],
         ...,
         [ 22,  10,   8],
         [ 22,  11,  10],
         [ 19,   8,   7]],

        [[ 47,  35,  22],
         [ 54,  40,  24],
         [ 63,  50,  35],
         ...,
         [ 24,  10,   7],
         [ 18,   6,   6],
         [ 18,   7,   6]],

        ...,

        [[109, 105,  66],
         [113, 108,  68],
         [115, 106,  67],
         ...,
         [103,  87,  55],
         [ 85,  75,  43],
         [ 97,  85,  52]],

        [[ 96,  90,  53],
         [114, 106,  69],
         [111, 102,  64],
         ...,
         [164, 146, 104],
         [154, 135,  89],
         [152, 139,  97]],

        [[ 97,  91,  52],
         [ 85,  79,  40],
         [105,  99,  57],
         ...,
         [161, 148, 108],
         [156, 137,  93],
         [156, 142, 100]]]], dtype=uint8), 'y_train': array([[6],
       [9],
       [9],
       ...,
       [5],
       [4],
       [6]], dtype=uint8), 'x_test': array([[[[158, 112,  49],
         [159, 111,  47],
         [165, 116,  51],
         ...,
         [137,  95,  36],
         [126,  91,  36],
         [116,  85,  33]],

        [[152, 112,  51],
         [151, 110,  40],
         [159, 114,  45],
         ...,
         [136,  95,  31],
         [125,  91,  32],
         [119,  88,  34]],

        [[151, 110,  47],
         [151, 109,  33],
         [158, 111,  36],
         ...,
         [139,  98,  34],
         [130,  95,  34],
         [120,  89,  33]],

        ...,

        [[ 68, 124, 177],
         [ 42, 100, 148],
         [ 31,  88, 137],
         ...,
         [ 38,  97, 146],
         [ 13,  64, 108],
         [ 40,  85, 127]],

        [[ 61, 116, 168],
         [ 49, 102, 148],
         [ 35,  85, 132],
         ...,
         [ 26,  82, 130],
         [ 29,  82, 126],
         [ 20,  64, 107]],

        [[ 54, 107, 160],
         [ 56, 105, 149],
         [ 45,  89, 132],
         ...,
         [ 24,  77, 124],
         [ 34,  84, 129],
         [ 21,  67, 110]]],


       [[[235, 235, 235],
         [231, 231, 231],
         [232, 232, 232],
         ...,
         [233, 233, 233],
         [233, 233, 233],
         [232, 232, 232]],

        [[238, 238, 238],
         [235, 235, 235],
         [235, 235, 235],
         ...,
         [236, 236, 236],
         [236, 236, 236],
         [235, 235, 235]],

        [[237, 237, 237],
         [234, 234, 234],
         [234, 234, 234],
         ...,
         [235, 235, 235],
         [235, 235, 235],
         [234, 234, 234]],

        ...,

        [[ 87,  99,  89],
         [ 43,  51,  37],
         [ 19,  23,  11],
         ...,
         [169, 184, 179],
         [182, 197, 193],
         [188, 202, 201]],

        [[ 82,  96,  82],
         [ 46,  57,  36],
         [ 36,  44,  22],
         ...,
         [174, 189, 183],
         [185, 200, 196],
         [187, 202, 200]],

        [[ 85, 101,  83],
         [ 62,  75,  48],
         [ 58,  67,  38],
         ...,
         [168, 183, 178],
         [180, 195, 191],
         [186, 200, 199]]],


       [[[158, 190, 222],
         [158, 187, 218],
         [139, 166, 194],
         ...,
         [228, 231, 234],
         [237, 239, 243],
         [238, 241, 246]],

        [[170, 200, 229],
         [172, 199, 226],
         [151, 176, 201],
         ...,
         [232, 232, 236],
         [246, 246, 250],
         [246, 247, 251]],

        [[174, 201, 225],
         [176, 200, 222],
         [157, 179, 199],
         ...,
         [230, 229, 232],
         [250, 249, 251],
         [245, 244, 247]],

        ...,

        [[ 31,  40,  45],
         [ 30,  39,  44],
         [ 26,  35,  40],
         ...,
         [ 37,  40,  46],
         [  9,  13,  14],
         [  4,   7,   5]],

        [[ 23,  34,  39],
         [ 27,  38,  43],
         [ 25,  36,  41],
         ...,
         [ 19,  20,  24],
         [  4,   6,   3],
         [  5,   7,   3]],

        [[ 28,  41,  47],
         [ 30,  43,  50],
         [ 32,  45,  52],
         ...,
         [  5,   6,   8],
         [  4,   5,   3],
         [  7,   8,   7]]],


       ...,


       [[[103, 124, 101],
         [124, 149, 120],
         [ 73,  98,  73],
         ...,
         [ 17,  25,  16],
         [ 10,  15,   9],
         [ 15,  19,  13]],

        [[162, 175, 148],
         [122, 137, 107],
         [111, 126, 103],
         ...,
         [ 28,  38,  25],
         [ 18,  22,  16],
         [ 11,  12,   8]],

        [[226, 236, 200],
         [209, 217, 183],
         [204, 216, 161],
         ...,
         [ 21,  29,  18],
         [ 19,  24,  17],
         [ 14,  17,  11]],

        ...,

        [[132, 134, 145],
         [126, 128, 138],
         [127, 127, 139],
         ...,
         [ 43,  36,  33],
         [ 64,  46,  31],
         [ 88,  53,  32]],

        [[125, 123, 134],
         [123, 122, 132],
         [121, 120, 132],
         ...,
         [ 41,  42,  43],
         [ 52,  39,  35],
         [ 87,  56,  43]],

        [[121, 119, 131],
         [119, 117, 129],
         [118, 118, 130],
         ...,
         [ 48,  49,  53],
         [ 53,  48,  50],
         [ 67,  42,  37]]],


       [[[ 77, 114,  33],
         [ 72, 111,  25],
         [ 76, 110,  34],
         ...,
         [ 59,  64,  46],
         [ 56,  58,  42],
         [ 56,  58,  40]],

        [[ 74, 107,  34],
         [ 71,  93,  31],
         [ 80, 102,  39],
         ...,
         [ 52,  55,  44],
         [ 57,  60,  45],
         [ 54,  58,  39]],

        [[ 80, 101,  38],
         [ 84,  98,  43],
         [ 74,  95,  32],
         ...,
         [ 50,  55,  51],
         [ 50,  55,  50],
         [ 61,  67,  59]],

        ...,

        [[ 65,  92,  26],
         [ 63,  84,  24],
         [ 52,  77,  20],
         ...,
         [ 84,  82,  68],
         [ 56,  57,  48],
         [ 28,  33,  24]],

        [[ 70,  89,  26],
         [ 77,  89,  32],
         [ 60,  92,  30],
         ...,
         [ 77,  77,  66],
         [ 39,  39,  35],
         [ 32,  39,  28]],

        [[ 48,  73,  12],
         [ 57,  71,  21],
         [ 56,  85,  30],
         ...,
         [ 51,  53,  47],
         [ 24,  27,  22],
         [ 35,  44,  30]]],


       [[[175, 180, 174],
         [176, 181, 175],
         [181, 186, 180],
         ...,
         [193, 207, 210],
         [190, 204, 207],
         [188, 202, 205]],

        [[177, 182, 176],
         [179, 184, 178],
         [183, 188, 182],
         ...,
         [196, 210, 213],
         [192, 206, 209],
         [191, 205, 208]],

        [[176, 181, 175],
         [177, 182, 176],
         [182, 187, 181],
         ...,
         [194, 208, 211],
         [191, 205, 208],
         [189, 203, 206]],

        ...,

        [[122, 121, 129],
         [117, 118, 129],
         [114, 118, 130],
         ...,
         [ 58,  73,  91],
         [ 81,  97, 118],
         [ 99, 118, 141]],

        [[116, 115, 123],
         [110, 111, 121],
         [107, 111, 123],
         ...,
         [ 57,  70,  88],
         [ 78,  93, 113],
         [100, 117, 140]],

        [[113, 112, 119],
         [106, 107, 117],
         [105, 109, 121],
         ...,
         [ 57,  68,  85],
         [ 71,  85, 103],
         [ 93, 110, 131]]]], dtype=uint8), 'y_test': array([[3],
       [8],
       [8],
       [0],
       [6],
       [6],
       [1],
       [6],
       [3],
       [1],
       [0],
       [9],
       [5],
       [7],
       [9],
       [8],
       [5],
       [7],
       [8],
       [6],
       [7],
       [0],
       [4],
       [9],
       [5],
       [2],
       [4],
       [0],
       [9],
       [6],
       [6],
       [5],
       [4],
       [5],
       [9],
       [2],
       [4],
       [1],
       [9],
       [5],
       [4],
       [6],
       [5],
       [6],
       [0],
       [9],
       [3],
       [9],
       [7],
       [6],
       [9],
       [8],
       [0],
       [3],
       [8],
       [8],
       [7],
       [7],
       [4],
       [6],
       [7],
       [3],
       [6],
       [3],
       [6],
       [2],
       [1],
       [2],
       [3],
       [7],
       [2],
       [6],
       [8],
       [8],
       [0],
       [2],
       [9],
       [3],
       [3],
       [8],
       [8],
       [1],
       [1],
       [7],
       [2],
       [5],
       [2],
       [7],
       [8],
       [9],
       [0],
       [3],
       [8],
       [6],
       [4],
       [6],
       [6],
       [0],
       [0],
       [7],
       [4],
       [5],
       [6],
       [3],
       [1],
       [1],
       [3],
       [6],
       [8],
       [7],
       [4],
       [0],
       [6],
       [2],
       [1],
       [3],
       [0],
       [4],
       [2],
       [7],
       [8],
       [3],
       [1],
       [2],
       [8],
       [0],
       [8],
       [3],
       [5],
       [2],
       [4],
       [1],
       [8],
       [9],
       [1],
       [2],
       [9],
       [7],
       [2],
       [9],
       [6],
       [5],
       [6],
       [3],
       [8],
       [7],
       [6],
       [2],
       [5],
       [2],
       [8],
       [9],
       [6],
       [0],
       [0],
       [5],
       [2],
       [9],
       [5],
       [4],
       [2],
       [1],
       [6],
       [6],
       [8],
       [4],
       [8],
       [4],
       [5],
       [0],
       [9],
       [9],
       [9],
       [8],
       [9],
       [9],
       [3],
       [7],
       [5],
       [0],
       [0],
       [5],
       [2],
       [2],
       [3],
       [8],
       [6],
       [3],
       [4],
       [0],
       [5],
       [8],
       [0],
       [1],
       [7],
       [2],
       [8],
       [8],
       [7],
       [8],
       [5],
       [1],
       [8],
       [7],
       [1],
       [3],
       [0],
       [5],
       [7],
       [9],
       [7],
       [4],
       [5],
       [9],
       [8],
       [0],
       [7],
       [9],
       [8],
       [2],
       [7],
       [6],
       [9],
       [4],
       [3],
       [9],
       [6],
       [4],
       [7],
       [6],
       [5],
       [1],
       [5],
       [8],
       [8],
       [0],
       [4],
       [0],
       [5],
       [5],
       [1],
       [1],
       [8],
       [9],
       [0],
       [3],
       [1],
       [9],
       [2],
       [2],
       [5],
       [3],
       [9],
       [9],
       [4],
       [0],
       [3],
       [0],
       [0],
       [9],
       [8],
       [1],
       [5],
       [7],
       [0],
       [8],
       [2],
       [4],
       [7],
       [0],
       [2],
       [3],
       [6],
       [3],
       [8],
       [5],
       [0],
       [3],
       [4],
       [3],
       [9],
       [0],
       [6],
       [1],
       [0],
       [9],
       [1],
       [0],
       [7],
       [9],
       [1],
       [2],
       [6],
       [9],
       [3],
       [4],
       [6],
       [0],
       [0],
       [6],
       [6],
       [6],
       [3],
       [2],
       [6],
       [1],
       [8],
       [2],
       [1],
       [6],
       [8],
       [6],
       [8],
       [0],
       [4],
       [0],
       [7],
       [7],
       [5],
       [5],
       [3],
       [5],
       [2],
       [3],
       [4],
       [1],
       [7],
       [5],
       [4],
       [6],
       [1],
       [9],
       [3],
       [6],
       [6],
       [9],
       [3],
       [8],
       [0],
       [7],
       [2],
       [6],
       [2],
       [5],
       [8],
       [5],
       [4],
       [6],
       [8],
       [9],
       [9],
       [1],
       [0],
       [2],
       [2],
       [7],
       [3],
       [2],
       [8],
       [0],
       [9],
       [5],
       [8],
       [1],
       [9],
       [4],
       [1],
       [3],
       [8],
       [1],
       [4],
       [7],
       [9],
       [4],
       [2],
       [7],
       [0],
       [7],
       [0],
       [6],
       [6],
       [9],
       [0],
       [9],
       [2],
       [8],
       [7],
       [2],
       [2],
       [5],
       [1],
       [2],
       [6],
       [2],
       [9],
       [6],
       [2],
       [3],
       [0],
       [3],
       [9],
       [8],
       [7],
       [8],
       [8],
       [4],
       [0],
       [1],
       [8],
       [2],
       [7],
       [9],
       [3],
       [6],
       [1],
       [9],
       [0],
       [7],
       [3],
       [7],
       [4],
       [5],
       [0],
       [0],
       [2],
       [9],
       [3],
       [4],
       [0],
       [6],
       [2],
       [5],
       [3],
       [7],
       [3],
       [7],
       [2],
       [5],
       [3],
       [1],
       [1],
       [4],
       [9],
       [9],
       [5],
       [7],
       [5],
       [0],
       [2],
       [2],
       [2],
       [9],
       [7],
       [3],
       [9],
       [4],
       [3],
       [5],
       [4],
       [6],
       [5],
       [6],
       [1],
       [4],
       [3],
       [4],
       [4],
       [3],
       [7],
       [8],
       [3],
       [7],
       [8],
       [0],
       [5],
       [7],
       [6],
       [0],
       [5],
       [4],
       [8],
       [6],
       [8],
       [5],
       [5],
       [9],
       [9],
       [9],
       [5],
       [0],
       [1],
       [0],
       [8],
       [1],
       [1],
       [8],
       [0],
       [2],
       [2],
       [0],
       [4],
       [6],
       [5],
       [4],
       [9],
       [4],
       [7],
       [9],
       [9],
       [4],
       [5],
       [6],
       [6],
       [1],
       [5],
       [3],
       [8],
       [9],
       [5],
       [8],
       [5],
       [7],
       [0],
       [7],
       [0],
       [5],
       [0],
       [0],
       [4],
       [6],
       [9],
       [0],
       [9],
       [5],
       [6],
       [6],
       [6],
       [2],
       [9],
       [0],
       [1],
       [7],
       [6],
       [7],
       [5],
       [9],
       [1],
       [6],
       [2],
       [5],
       [5],
       [5],
       [8],
       [5],
       [9],
       [4],
       [6],
       [4],
       [3],
       [2],
       [0],
       [7],
       [6],
       [2],
       [2],
       [3],
       [9],
       [7],
       [9],
       [2],
       [6],
       [7],
       [1],
       [3],
       [6],
       [6],
       [8],
       [9],
       [7],
       [5],
       [4],
       [0],
       [8],
       [4],
       [0],
       [9],
       [3],
       [4],
       [8],
       [9],
       [6],
       [9],
       [2],
       [6],
       [1],
       [4],
       [7],
       [3],
       [5],
       [3],
       [8],
       [5],
       [0],
       [2],
       [1],
       [6],
       [4],
       [3],
       [3],
       [9],
       [6],
       [9],
       [8],
       [8],
       [5],
       [8],
       [6],
       [6],
       [2],
       [1],
       [7],
       [7],
       [1],
       [2],
       [7],
       [9],
       [9],
       [4],
       [4],
       [1],
       [2],
       [5],
       [6],
       [8],
       [7],
       [6],
       [8],
       [3],
       [0],
       [5],
       [5],
       [3],
       [0],
       [7],
       [9],
       [1],
       [3],
       [4],
       [4],
       [5],
       [3],
       [9],
       [5],
       [6],
       [9],
       [2],
       [1],
       [1],
       [4],
       [1],
       [9],
       [4],
       [7],
       [6],
       [3],
       [8],
       [9],
       [0],
       [1],
       [3],
       [6],
       [3],
       [6],
       [3],
       [2],
       [0],
       [3],
       [1],
       [0],
       [5],
       [9],
       [6],
       [4],
       [8],
       [9],
       [6],
       [9],
       [6],
       [3],
       [0],
       [3],
       [2],
       [2],
       [7],
       [8],
       [3],
       [8],
       [2],
       [7],
       [5],
       [7],
       [2],
       [4],
       [8],
       [7],
       [4],
       [2],
       [9],
       [8],
       [8],
       [6],
       [8],
       [8],
       [7],
       [4],
       [3],
       [3],
       [8],
       [4],
       [9],
       [4],
       [8],
       [8],
       [1],
       [8],
       [2],
       [1],
       [3],
       [6],
       [5],
       [4],
       [2],
       [7],
       [9],
       [9],
       [4],
       [1],
       [4],
       [1],
       [3],
       [2],
       [7],
       [0],
       [7],
       [9],
       [7],
       [6],
       [6],
       [2],
       [5],
       [9],
       [2],
       [9],
       [1],
       [2],
       [2],
       [6],
       [8],
       [2],
       [1],
       [3],
       [6],
       [6],
       [0],
       [1],
       [2],
       [7],
       [0],
       [5],
       [4],
       [6],
       [1],
       [6],
       [4],
       [0],
       [2],
       [2],
       [6],
       [0],
       [5],
       [9],
       [1],
       [7],
       [6],
       [7],
       [0],
       [3],
       [9],
       [6],
       [8],
       [3],
       [0],
       [3],
       [4],
       [7],
       [7],
       [1],
       [4],
       [7],
       [2],
       [7],
       [1],
       [4],
       [7],
       [4],
       [4],
       [8],
       [4],
       [7],
       [7],
       [5],
       [3],
       [7],
       [2],
       [0],
       [8],
       [9],
       [5],
       [8],
       [3],
       [6],
       [2],
       [0],
       [8],
       [7],
       [3],
       [7],
       [6],
       [5],
       [3],
       [1],
       [3],
       [2],
       [2],
       [5],
       [4],
       [1],
       [2],
       [9],
       [2],
       [7],
       [0],
       [7],
       [2],
       [1],
       [3],
       [2],
       [0],
       [2],
       [4],
       [7],
       [9],
       [8],
       [9],
       [0],
       [7],
       [7],
       [0],
       [7],
       [8],
       [4],
       [6],
       [3],
       [3],
       [0],
       [1],
       [3],
       [7],
       [0],
       [1],
       [3],
       [1],
       [4],
       [2],
       [3],
       [8],
       [4],
       [2],
       [3],
       [7],
       [8],
       [4],
       [3],
       [0],
       [9],
       [0],
       [0],
       [1],
       [0],
       [4],
       [4],
       [6],
       [7],
       [6],
       [1],
       [1],
       [3],
       [7],
       [3],
       [5],
       [2],
       [6],
       [6],
       [5],
       [8],
       [7],
       [1],
       [6],
       [8],
       [8],
       [5],
       [3],
       [0],
       [4],
       [0],
       [1],
       [3],
       [8],
       [8],
       [0],
       [6],
       [9],
       [9],
       [9],
       [5],
       [5],
       [8],
       [6],
       [0],
       [0],
       [4],
       [2],
       [3],
       [2],
       [7],
       [2],
       [2],
       [5],
       [9],
       [8],
       [9],
       [1],
       [7],
       [4],
       [0],
       [3],
       [0],
       [1],
       [3],
       [8],
       [3],
       [9],
       [6],
       [1],
       [4],
       [7],
       [0],
       [3],
       [7],
       [8],
       [9],
       [1],
       [1],
       [6],
       [6],
       [6],
       [6],
       [9],
       [1],
       [9],
       [9],
       [4],
       [2],
       [1],
       [7],
       [0],
       [6],
       [8],
       [1],
       [9],
       [2],
       [9],
       [0],
       [4],
       [7],
       [8],
       [3],
       [1],
       [2],
       [0],
       [1],
       [5],
       [8],
       [4],
       [6],
       [3],
       [8],
       [1],
       [3],
       [8]], dtype=uint8)}
2020-10-28 11:59:28,224 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 11:59:28,279 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 11:59:53,637 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 11:59:53,637 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 11:59:53,637 - engine_logger:INFO - logger info level msg 
2020-10-28 11:59:53,637 - engine_logger:WARNING - logger warn level msg 
2020-10-28 11:59:53,637 - engine_logger:ERROR - logger error level msg 
2020-10-28 11:59:53,637 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 11:59:53,637 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 11:59:53,637 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 11:59:53,638 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-28 11:59:53,656 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:59:53,656 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 11:59:53,656 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 11:59:53,656 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, TunerEngine
2020-10-28 11:59:53,657 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 11:59:53,657 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 11:59:53,674 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:59:53,692 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 11:59:53,692 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:59:53,692 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 11:59:53,692 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 11:59:53,692 - engine_logger:INFO - Engine instantiated in MP: TunerEngine
2020-10-28 11:59:53,800 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 11:59:53,972 - engine_logger:INFO - Getting MNIST data.... 
2020-10-28 11:59:54,907 - engine_logger:INFO - Got MNIST data(reduced sample): {'x_train': array([[[[ 59,  62,  63],
         [ 43,  46,  45],
         [ 50,  48,  43],
         ...,
         [158, 132, 108],
         [152, 125, 102],
         [148, 124, 103]],

        [[ 16,  20,  20],
         [  0,   0,   0],
         [ 18,   8,   0],
         ...,
         [123,  88,  55],
         [119,  83,  50],
         [122,  87,  57]],

        [[ 25,  24,  21],
         [ 16,   7,   0],
         [ 49,  27,   8],
         ...,
         [118,  84,  50],
         [120,  84,  50],
         [109,  73,  42]],

        ...,

        [[208, 170,  96],
         [201, 153,  34],
         [198, 161,  26],
         ...,
         [160, 133,  70],
         [ 56,  31,   7],
         [ 53,  34,  20]],

        [[180, 139,  96],
         [173, 123,  42],
         [186, 144,  30],
         ...,
         [184, 148,  94],
         [ 97,  62,  34],
         [ 83,  53,  34]],

        [[177, 144, 116],
         [168, 129,  94],
         [179, 142,  87],
         ...,
         [216, 184, 140],
         [151, 118,  84],
         [123,  92,  72]]],


       [[[154, 177, 187],
         [126, 137, 136],
         [105, 104,  95],
         ...,
         [ 91,  95,  71],
         [ 87,  90,  71],
         [ 79,  81,  70]],

        [[140, 160, 169],
         [145, 153, 154],
         [125, 125, 118],
         ...,
         [ 96,  99,  78],
         [ 77,  80,  62],
         [ 71,  73,  61]],

        [[140, 155, 164],
         [139, 146, 149],
         [115, 115, 112],
         ...,
         [ 79,  82,  64],
         [ 68,  70,  55],
         [ 67,  69,  55]],

        ...,

        [[175, 167, 166],
         [156, 154, 160],
         [154, 160, 170],
         ...,
         [ 42,  34,  36],
         [ 61,  53,  57],
         [ 93,  83,  91]],

        [[165, 154, 128],
         [156, 152, 130],
         [159, 161, 142],
         ...,
         [103,  93,  96],
         [123, 114, 120],
         [131, 121, 131]],

        [[163, 148, 120],
         [158, 148, 122],
         [163, 156, 133],
         ...,
         [143, 133, 139],
         [143, 134, 142],
         [143, 133, 144]]],


       [[[255, 255, 255],
         [253, 253, 253],
         [253, 253, 253],
         ...,
         [253, 253, 253],
         [253, 253, 253],
         [253, 253, 253]],

        [[255, 255, 255],
         [255, 255, 255],
         [255, 255, 255],
         ...,
         [255, 255, 255],
         [255, 255, 255],
         [255, 255, 255]],

        [[255, 255, 255],
         [254, 254, 254],
         [254, 254, 254],
         ...,
         [254, 254, 254],
         [254, 254, 254],
         [254, 254, 254]],

        ...,

        [[113, 120, 112],
         [111, 118, 111],
         [105, 112, 106],
         ...,
         [ 72,  81,  80],
         [ 72,  80,  79],
         [ 72,  80,  79]],

        [[111, 118, 110],
         [104, 111, 104],
         [ 99, 106,  98],
         ...,
         [ 68,  75,  73],
         [ 70,  76,  75],
         [ 78,  84,  82]],

        [[106, 113, 105],
         [ 99, 106,  98],
         [ 95, 102,  94],
         ...,
         [ 78,  85,  83],
         [ 79,  85,  83],
         [ 80,  86,  84]]],


       ...,


       [[[167, 163, 145],
         [206, 201, 181],
         [202, 196, 177],
         ...,
         [ 91,  85,  89],
         [ 50,  64,  68],
         [ 46,  86,  90]],

        [[156, 153, 136],
         [206, 201, 181],
         [206, 199, 180],
         ...,
         [171, 166, 174],
         [ 99, 115, 123],
         [ 48,  88,  94]],

        [[147, 143, 128],
         [192, 186, 167],
         [206, 198, 177],
         ...,
         [173, 176, 186],
         [106, 130, 140],
         [ 48,  90,  96]],

        ...,

        [[144, 156, 151],
         [145, 153, 148],
         [152, 160, 156],
         ...,
         [ 45,  85,  91],
         [ 41,  78,  85],
         [ 47,  88,  94]],

        [[143, 155, 150],
         [148, 157, 154],
         [156, 167, 167],
         ...,
         [ 32,  56,  65],
         [ 31,  58,  66],
         [ 34,  66,  73]],

        [[139, 154, 149],
         [144, 157, 155],
         [140, 157, 159],
         ...,
         [ 39,  75,  81],
         [ 42,  82,  87],
         [ 42,  78,  84]]],


       [[[154, 152, 125],
         [156, 154, 130],
         [149, 146, 125],
         ...,
         [156, 154, 110],
         [131, 130,  97],
         [154, 149, 111]],

        [[163, 150, 111],
         [178, 167, 125],
         [179, 168, 126],
         ...,
         [185, 175, 127],
         [166, 165, 118],
         [168, 164, 117]],

        [[198, 184, 126],
         [188, 173, 117],
         [193, 179, 121],
         ...,
         [188, 166, 118],
         [184, 172, 126],
         [183, 179, 128]],

        ...,

        [[187, 185, 132],
         [175, 175, 129],
         [162, 162, 109],
         ...,
         [201, 217, 129],
         [200, 220, 129],
         [190, 205, 118]],

        [[157, 160, 109],
         [147, 153, 104],
         [144, 157,  98],
         ...,
         [213, 232, 134],
         [191, 227, 117],
         [173, 216, 105]],

        [[153, 150, 102],
         [150, 159,  99],
         [173, 195, 124],
         ...,
         [195, 234, 113],
         [187, 237, 108],
         [194, 247, 114]]],


       [[[ 45,  32,  21],
         [ 48,  34,  21],
         [ 66,  54,  41],
         ...,
         [ 19,   9,   7],
         [ 23,  14,  10],
         [ 20,  10,   8]],

        [[ 47,  33,  21],
         [ 50,  35,  22],
         [ 71,  58,  44],
         ...,
         [ 22,  10,   8],
         [ 22,  11,  10],
         [ 19,   8,   7]],

        [[ 47,  35,  22],
         [ 54,  40,  24],
         [ 63,  50,  35],
         ...,
         [ 24,  10,   7],
         [ 18,   6,   6],
         [ 18,   7,   6]],

        ...,

        [[109, 105,  66],
         [113, 108,  68],
         [115, 106,  67],
         ...,
         [103,  87,  55],
         [ 85,  75,  43],
         [ 97,  85,  52]],

        [[ 96,  90,  53],
         [114, 106,  69],
         [111, 102,  64],
         ...,
         [164, 146, 104],
         [154, 135,  89],
         [152, 139,  97]],

        [[ 97,  91,  52],
         [ 85,  79,  40],
         [105,  99,  57],
         ...,
         [161, 148, 108],
         [156, 137,  93],
         [156, 142, 100]]]], dtype=uint8), 'y_train': array([[6],
       [9],
       [9],
       ...,
       [5],
       [4],
       [6]], dtype=uint8), 'x_test': array([[[[158, 112,  49],
         [159, 111,  47],
         [165, 116,  51],
         ...,
         [137,  95,  36],
         [126,  91,  36],
         [116,  85,  33]],

        [[152, 112,  51],
         [151, 110,  40],
         [159, 114,  45],
         ...,
         [136,  95,  31],
         [125,  91,  32],
         [119,  88,  34]],

        [[151, 110,  47],
         [151, 109,  33],
         [158, 111,  36],
         ...,
         [139,  98,  34],
         [130,  95,  34],
         [120,  89,  33]],

        ...,

        [[ 68, 124, 177],
         [ 42, 100, 148],
         [ 31,  88, 137],
         ...,
         [ 38,  97, 146],
         [ 13,  64, 108],
         [ 40,  85, 127]],

        [[ 61, 116, 168],
         [ 49, 102, 148],
         [ 35,  85, 132],
         ...,
         [ 26,  82, 130],
         [ 29,  82, 126],
         [ 20,  64, 107]],

        [[ 54, 107, 160],
         [ 56, 105, 149],
         [ 45,  89, 132],
         ...,
         [ 24,  77, 124],
         [ 34,  84, 129],
         [ 21,  67, 110]]],


       [[[235, 235, 235],
         [231, 231, 231],
         [232, 232, 232],
         ...,
         [233, 233, 233],
         [233, 233, 233],
         [232, 232, 232]],

        [[238, 238, 238],
         [235, 235, 235],
         [235, 235, 235],
         ...,
         [236, 236, 236],
         [236, 236, 236],
         [235, 235, 235]],

        [[237, 237, 237],
         [234, 234, 234],
         [234, 234, 234],
         ...,
         [235, 235, 235],
         [235, 235, 235],
         [234, 234, 234]],

        ...,

        [[ 87,  99,  89],
         [ 43,  51,  37],
         [ 19,  23,  11],
         ...,
         [169, 184, 179],
         [182, 197, 193],
         [188, 202, 201]],

        [[ 82,  96,  82],
         [ 46,  57,  36],
         [ 36,  44,  22],
         ...,
         [174, 189, 183],
         [185, 200, 196],
         [187, 202, 200]],

        [[ 85, 101,  83],
         [ 62,  75,  48],
         [ 58,  67,  38],
         ...,
         [168, 183, 178],
         [180, 195, 191],
         [186, 200, 199]]],


       [[[158, 190, 222],
         [158, 187, 218],
         [139, 166, 194],
         ...,
         [228, 231, 234],
         [237, 239, 243],
         [238, 241, 246]],

        [[170, 200, 229],
         [172, 199, 226],
         [151, 176, 201],
         ...,
         [232, 232, 236],
         [246, 246, 250],
         [246, 247, 251]],

        [[174, 201, 225],
         [176, 200, 222],
         [157, 179, 199],
         ...,
         [230, 229, 232],
         [250, 249, 251],
         [245, 244, 247]],

        ...,

        [[ 31,  40,  45],
         [ 30,  39,  44],
         [ 26,  35,  40],
         ...,
         [ 37,  40,  46],
         [  9,  13,  14],
         [  4,   7,   5]],

        [[ 23,  34,  39],
         [ 27,  38,  43],
         [ 25,  36,  41],
         ...,
         [ 19,  20,  24],
         [  4,   6,   3],
         [  5,   7,   3]],

        [[ 28,  41,  47],
         [ 30,  43,  50],
         [ 32,  45,  52],
         ...,
         [  5,   6,   8],
         [  4,   5,   3],
         [  7,   8,   7]]],


       ...,


       [[[103, 124, 101],
         [124, 149, 120],
         [ 73,  98,  73],
         ...,
         [ 17,  25,  16],
         [ 10,  15,   9],
         [ 15,  19,  13]],

        [[162, 175, 148],
         [122, 137, 107],
         [111, 126, 103],
         ...,
         [ 28,  38,  25],
         [ 18,  22,  16],
         [ 11,  12,   8]],

        [[226, 236, 200],
         [209, 217, 183],
         [204, 216, 161],
         ...,
         [ 21,  29,  18],
         [ 19,  24,  17],
         [ 14,  17,  11]],

        ...,

        [[132, 134, 145],
         [126, 128, 138],
         [127, 127, 139],
         ...,
         [ 43,  36,  33],
         [ 64,  46,  31],
         [ 88,  53,  32]],

        [[125, 123, 134],
         [123, 122, 132],
         [121, 120, 132],
         ...,
         [ 41,  42,  43],
         [ 52,  39,  35],
         [ 87,  56,  43]],

        [[121, 119, 131],
         [119, 117, 129],
         [118, 118, 130],
         ...,
         [ 48,  49,  53],
         [ 53,  48,  50],
         [ 67,  42,  37]]],


       [[[ 77, 114,  33],
         [ 72, 111,  25],
         [ 76, 110,  34],
         ...,
         [ 59,  64,  46],
         [ 56,  58,  42],
         [ 56,  58,  40]],

        [[ 74, 107,  34],
         [ 71,  93,  31],
         [ 80, 102,  39],
         ...,
         [ 52,  55,  44],
         [ 57,  60,  45],
         [ 54,  58,  39]],

        [[ 80, 101,  38],
         [ 84,  98,  43],
         [ 74,  95,  32],
         ...,
         [ 50,  55,  51],
         [ 50,  55,  50],
         [ 61,  67,  59]],

        ...,

        [[ 65,  92,  26],
         [ 63,  84,  24],
         [ 52,  77,  20],
         ...,
         [ 84,  82,  68],
         [ 56,  57,  48],
         [ 28,  33,  24]],

        [[ 70,  89,  26],
         [ 77,  89,  32],
         [ 60,  92,  30],
         ...,
         [ 77,  77,  66],
         [ 39,  39,  35],
         [ 32,  39,  28]],

        [[ 48,  73,  12],
         [ 57,  71,  21],
         [ 56,  85,  30],
         ...,
         [ 51,  53,  47],
         [ 24,  27,  22],
         [ 35,  44,  30]]],


       [[[175, 180, 174],
         [176, 181, 175],
         [181, 186, 180],
         ...,
         [193, 207, 210],
         [190, 204, 207],
         [188, 202, 205]],

        [[177, 182, 176],
         [179, 184, 178],
         [183, 188, 182],
         ...,
         [196, 210, 213],
         [192, 206, 209],
         [191, 205, 208]],

        [[176, 181, 175],
         [177, 182, 176],
         [182, 187, 181],
         ...,
         [194, 208, 211],
         [191, 205, 208],
         [189, 203, 206]],

        ...,

        [[122, 121, 129],
         [117, 118, 129],
         [114, 118, 130],
         ...,
         [ 58,  73,  91],
         [ 81,  97, 118],
         [ 99, 118, 141]],

        [[116, 115, 123],
         [110, 111, 121],
         [107, 111, 123],
         ...,
         [ 57,  70,  88],
         [ 78,  93, 113],
         [100, 117, 140]],

        [[113, 112, 119],
         [106, 107, 117],
         [105, 109, 121],
         ...,
         [ 57,  68,  85],
         [ 71,  85, 103],
         [ 93, 110, 131]]]], dtype=uint8), 'y_test': array([[3],
       [8],
       [8],
       [0],
       [6],
       [6],
       [1],
       [6],
       [3],
       [1],
       [0],
       [9],
       [5],
       [7],
       [9],
       [8],
       [5],
       [7],
       [8],
       [6],
       [7],
       [0],
       [4],
       [9],
       [5],
       [2],
       [4],
       [0],
       [9],
       [6],
       [6],
       [5],
       [4],
       [5],
       [9],
       [2],
       [4],
       [1],
       [9],
       [5],
       [4],
       [6],
       [5],
       [6],
       [0],
       [9],
       [3],
       [9],
       [7],
       [6],
       [9],
       [8],
       [0],
       [3],
       [8],
       [8],
       [7],
       [7],
       [4],
       [6],
       [7],
       [3],
       [6],
       [3],
       [6],
       [2],
       [1],
       [2],
       [3],
       [7],
       [2],
       [6],
       [8],
       [8],
       [0],
       [2],
       [9],
       [3],
       [3],
       [8],
       [8],
       [1],
       [1],
       [7],
       [2],
       [5],
       [2],
       [7],
       [8],
       [9],
       [0],
       [3],
       [8],
       [6],
       [4],
       [6],
       [6],
       [0],
       [0],
       [7],
       [4],
       [5],
       [6],
       [3],
       [1],
       [1],
       [3],
       [6],
       [8],
       [7],
       [4],
       [0],
       [6],
       [2],
       [1],
       [3],
       [0],
       [4],
       [2],
       [7],
       [8],
       [3],
       [1],
       [2],
       [8],
       [0],
       [8],
       [3],
       [5],
       [2],
       [4],
       [1],
       [8],
       [9],
       [1],
       [2],
       [9],
       [7],
       [2],
       [9],
       [6],
       [5],
       [6],
       [3],
       [8],
       [7],
       [6],
       [2],
       [5],
       [2],
       [8],
       [9],
       [6],
       [0],
       [0],
       [5],
       [2],
       [9],
       [5],
       [4],
       [2],
       [1],
       [6],
       [6],
       [8],
       [4],
       [8],
       [4],
       [5],
       [0],
       [9],
       [9],
       [9],
       [8],
       [9],
       [9],
       [3],
       [7],
       [5],
       [0],
       [0],
       [5],
       [2],
       [2],
       [3],
       [8],
       [6],
       [3],
       [4],
       [0],
       [5],
       [8],
       [0],
       [1],
       [7],
       [2],
       [8],
       [8],
       [7],
       [8],
       [5],
       [1],
       [8],
       [7],
       [1],
       [3],
       [0],
       [5],
       [7],
       [9],
       [7],
       [4],
       [5],
       [9],
       [8],
       [0],
       [7],
       [9],
       [8],
       [2],
       [7],
       [6],
       [9],
       [4],
       [3],
       [9],
       [6],
       [4],
       [7],
       [6],
       [5],
       [1],
       [5],
       [8],
       [8],
       [0],
       [4],
       [0],
       [5],
       [5],
       [1],
       [1],
       [8],
       [9],
       [0],
       [3],
       [1],
       [9],
       [2],
       [2],
       [5],
       [3],
       [9],
       [9],
       [4],
       [0],
       [3],
       [0],
       [0],
       [9],
       [8],
       [1],
       [5],
       [7],
       [0],
       [8],
       [2],
       [4],
       [7],
       [0],
       [2],
       [3],
       [6],
       [3],
       [8],
       [5],
       [0],
       [3],
       [4],
       [3],
       [9],
       [0],
       [6],
       [1],
       [0],
       [9],
       [1],
       [0],
       [7],
       [9],
       [1],
       [2],
       [6],
       [9],
       [3],
       [4],
       [6],
       [0],
       [0],
       [6],
       [6],
       [6],
       [3],
       [2],
       [6],
       [1],
       [8],
       [2],
       [1],
       [6],
       [8],
       [6],
       [8],
       [0],
       [4],
       [0],
       [7],
       [7],
       [5],
       [5],
       [3],
       [5],
       [2],
       [3],
       [4],
       [1],
       [7],
       [5],
       [4],
       [6],
       [1],
       [9],
       [3],
       [6],
       [6],
       [9],
       [3],
       [8],
       [0],
       [7],
       [2],
       [6],
       [2],
       [5],
       [8],
       [5],
       [4],
       [6],
       [8],
       [9],
       [9],
       [1],
       [0],
       [2],
       [2],
       [7],
       [3],
       [2],
       [8],
       [0],
       [9],
       [5],
       [8],
       [1],
       [9],
       [4],
       [1],
       [3],
       [8],
       [1],
       [4],
       [7],
       [9],
       [4],
       [2],
       [7],
       [0],
       [7],
       [0],
       [6],
       [6],
       [9],
       [0],
       [9],
       [2],
       [8],
       [7],
       [2],
       [2],
       [5],
       [1],
       [2],
       [6],
       [2],
       [9],
       [6],
       [2],
       [3],
       [0],
       [3],
       [9],
       [8],
       [7],
       [8],
       [8],
       [4],
       [0],
       [1],
       [8],
       [2],
       [7],
       [9],
       [3],
       [6],
       [1],
       [9],
       [0],
       [7],
       [3],
       [7],
       [4],
       [5],
       [0],
       [0],
       [2],
       [9],
       [3],
       [4],
       [0],
       [6],
       [2],
       [5],
       [3],
       [7],
       [3],
       [7],
       [2],
       [5],
       [3],
       [1],
       [1],
       [4],
       [9],
       [9],
       [5],
       [7],
       [5],
       [0],
       [2],
       [2],
       [2],
       [9],
       [7],
       [3],
       [9],
       [4],
       [3],
       [5],
       [4],
       [6],
       [5],
       [6],
       [1],
       [4],
       [3],
       [4],
       [4],
       [3],
       [7],
       [8],
       [3],
       [7],
       [8],
       [0],
       [5],
       [7],
       [6],
       [0],
       [5],
       [4],
       [8],
       [6],
       [8],
       [5],
       [5],
       [9],
       [9],
       [9],
       [5],
       [0],
       [1],
       [0],
       [8],
       [1],
       [1],
       [8],
       [0],
       [2],
       [2],
       [0],
       [4],
       [6],
       [5],
       [4],
       [9],
       [4],
       [7],
       [9],
       [9],
       [4],
       [5],
       [6],
       [6],
       [1],
       [5],
       [3],
       [8],
       [9],
       [5],
       [8],
       [5],
       [7],
       [0],
       [7],
       [0],
       [5],
       [0],
       [0],
       [4],
       [6],
       [9],
       [0],
       [9],
       [5],
       [6],
       [6],
       [6],
       [2],
       [9],
       [0],
       [1],
       [7],
       [6],
       [7],
       [5],
       [9],
       [1],
       [6],
       [2],
       [5],
       [5],
       [5],
       [8],
       [5],
       [9],
       [4],
       [6],
       [4],
       [3],
       [2],
       [0],
       [7],
       [6],
       [2],
       [2],
       [3],
       [9],
       [7],
       [9],
       [2],
       [6],
       [7],
       [1],
       [3],
       [6],
       [6],
       [8],
       [9],
       [7],
       [5],
       [4],
       [0],
       [8],
       [4],
       [0],
       [9],
       [3],
       [4],
       [8],
       [9],
       [6],
       [9],
       [2],
       [6],
       [1],
       [4],
       [7],
       [3],
       [5],
       [3],
       [8],
       [5],
       [0],
       [2],
       [1],
       [6],
       [4],
       [3],
       [3],
       [9],
       [6],
       [9],
       [8],
       [8],
       [5],
       [8],
       [6],
       [6],
       [2],
       [1],
       [7],
       [7],
       [1],
       [2],
       [7],
       [9],
       [9],
       [4],
       [4],
       [1],
       [2],
       [5],
       [6],
       [8],
       [7],
       [6],
       [8],
       [3],
       [0],
       [5],
       [5],
       [3],
       [0],
       [7],
       [9],
       [1],
       [3],
       [4],
       [4],
       [5],
       [3],
       [9],
       [5],
       [6],
       [9],
       [2],
       [1],
       [1],
       [4],
       [1],
       [9],
       [4],
       [7],
       [6],
       [3],
       [8],
       [9],
       [0],
       [1],
       [3],
       [6],
       [3],
       [6],
       [3],
       [2],
       [0],
       [3],
       [1],
       [0],
       [5],
       [9],
       [6],
       [4],
       [8],
       [9],
       [6],
       [9],
       [6],
       [3],
       [0],
       [3],
       [2],
       [2],
       [7],
       [8],
       [3],
       [8],
       [2],
       [7],
       [5],
       [7],
       [2],
       [4],
       [8],
       [7],
       [4],
       [2],
       [9],
       [8],
       [8],
       [6],
       [8],
       [8],
       [7],
       [4],
       [3],
       [3],
       [8],
       [4],
       [9],
       [4],
       [8],
       [8],
       [1],
       [8],
       [2],
       [1],
       [3],
       [6],
       [5],
       [4],
       [2],
       [7],
       [9],
       [9],
       [4],
       [1],
       [4],
       [1],
       [3],
       [2],
       [7],
       [0],
       [7],
       [9],
       [7],
       [6],
       [6],
       [2],
       [5],
       [9],
       [2],
       [9],
       [1],
       [2],
       [2],
       [6],
       [8],
       [2],
       [1],
       [3],
       [6],
       [6],
       [0],
       [1],
       [2],
       [7],
       [0],
       [5],
       [4],
       [6],
       [1],
       [6],
       [4],
       [0],
       [2],
       [2],
       [6],
       [0],
       [5],
       [9],
       [1],
       [7],
       [6],
       [7],
       [0],
       [3],
       [9],
       [6],
       [8],
       [3],
       [0],
       [3],
       [4],
       [7],
       [7],
       [1],
       [4],
       [7],
       [2],
       [7],
       [1],
       [4],
       [7],
       [4],
       [4],
       [8],
       [4],
       [7],
       [7],
       [5],
       [3],
       [7],
       [2],
       [0],
       [8],
       [9],
       [5],
       [8],
       [3],
       [6],
       [2],
       [0],
       [8],
       [7],
       [3],
       [7],
       [6],
       [5],
       [3],
       [1],
       [3],
       [2],
       [2],
       [5],
       [4],
       [1],
       [2],
       [9],
       [2],
       [7],
       [0],
       [7],
       [2],
       [1],
       [3],
       [2],
       [0],
       [2],
       [4],
       [7],
       [9],
       [8],
       [9],
       [0],
       [7],
       [7],
       [0],
       [7],
       [8],
       [4],
       [6],
       [3],
       [3],
       [0],
       [1],
       [3],
       [7],
       [0],
       [1],
       [3],
       [1],
       [4],
       [2],
       [3],
       [8],
       [4],
       [2],
       [3],
       [7],
       [8],
       [4],
       [3],
       [0],
       [9],
       [0],
       [0],
       [1],
       [0],
       [4],
       [4],
       [6],
       [7],
       [6],
       [1],
       [1],
       [3],
       [7],
       [3],
       [5],
       [2],
       [6],
       [6],
       [5],
       [8],
       [7],
       [1],
       [6],
       [8],
       [8],
       [5],
       [3],
       [0],
       [4],
       [0],
       [1],
       [3],
       [8],
       [8],
       [0],
       [6],
       [9],
       [9],
       [9],
       [5],
       [5],
       [8],
       [6],
       [0],
       [0],
       [4],
       [2],
       [3],
       [2],
       [7],
       [2],
       [2],
       [5],
       [9],
       [8],
       [9],
       [1],
       [7],
       [4],
       [0],
       [3],
       [0],
       [1],
       [3],
       [8],
       [3],
       [9],
       [6],
       [1],
       [4],
       [7],
       [0],
       [3],
       [7],
       [8],
       [9],
       [1],
       [1],
       [6],
       [6],
       [6],
       [6],
       [9],
       [1],
       [9],
       [9],
       [4],
       [2],
       [1],
       [7],
       [0],
       [6],
       [8],
       [1],
       [9],
       [2],
       [9],
       [0],
       [4],
       [7],
       [8],
       [3],
       [1],
       [2],
       [0],
       [1],
       [5],
       [8],
       [4],
       [6],
       [3],
       [8],
       [1],
       [3],
       [8]], dtype=uint8)}
2020-10-28 11:59:54,908 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 11:59:54,962 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [28, 28, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 12:00:46,658 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 12:00:46,658 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 12:00:46,658 - engine_logger:INFO - logger info level msg 
2020-10-28 12:00:46,658 - engine_logger:WARNING - logger warn level msg 
2020-10-28 12:00:46,658 - engine_logger:ERROR - logger error level msg 
2020-10-28 12:00:46,658 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 12:00:46,658 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 12:00:46,658 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 12:00:46,659 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-28 12:00:46,678 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': ['None', 'None', 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 12:00:46,679 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 12:00:46,679 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 12:00:46,679 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, TunerEngine
2020-10-28 12:00:46,679 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 12:00:46,679 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 12:00:46,698 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': ['None', 'None', 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 12:00:46,716 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': ['None', 'None', 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 12:00:46,717 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 12:00:46,717 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 12:00:46,717 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 12:00:46,717 - engine_logger:INFO - Engine instantiated in MP: TunerEngine
2020-10-28 12:00:46,828 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': ['None', 'None', 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 12:00:46,831 - engine_logger:ERROR - Failed to build model. type: Input, input_desc:{'layer_type': 'Input', 'shape': ['None', 'None', 3]} outputdesc: {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}
2020-10-28 12:00:46,831 - engine_logger:ERROR - Layerds: [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]
2020-10-28 12:00:46,897 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': ['None', 'None', 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 12:00:46,898 - engine_logger:ERROR - Failed to build model. type: Input, input_desc:{'layer_type': 'Input', 'shape': ['None', 'None', 3]} outputdesc: {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}
2020-10-28 12:00:46,898 - engine_logger:ERROR - Layerds: [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]
2020-10-28 12:00:46,961 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': ['None', 'None', 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 12:00:46,962 - engine_logger:ERROR - Failed to build model. type: Input, input_desc:{'layer_type': 'Input', 'shape': ['None', 'None', 3]} outputdesc: {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}
2020-10-28 12:00:46,963 - engine_logger:ERROR - Layerds: [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]
2020-10-28 12:00:47,025 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': ['None', 'None', 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 12:00:47,026 - engine_logger:ERROR - Failed to build model. type: Input, input_desc:{'layer_type': 'Input', 'shape': ['None', 'None', 3]} outputdesc: {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}
2020-10-28 12:00:47,026 - engine_logger:ERROR - Layerds: [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]
2020-10-28 12:00:47,087 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': ['None', 'None', 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 12:00:47,088 - engine_logger:ERROR - Failed to build model. type: Input, input_desc:{'layer_type': 'Input', 'shape': ['None', 'None', 3]} outputdesc: {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}
2020-10-28 12:00:47,088 - engine_logger:ERROR - Layerds: [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]
2020-10-28 12:00:47,150 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': ['None', 'None', 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 12:00:47,151 - engine_logger:ERROR - Failed to build model. type: Input, input_desc:{'layer_type': 'Input', 'shape': ['None', 'None', 3]} outputdesc: {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}
2020-10-28 12:00:47,151 - engine_logger:ERROR - Layerds: [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]
2020-10-28 12:01:20,585 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 12:01:20,585 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 12:01:20,586 - engine_logger:INFO - logger info level msg 
2020-10-28 12:01:20,586 - engine_logger:WARNING - logger warn level msg 
2020-10-28 12:01:20,586 - engine_logger:ERROR - logger error level msg 
2020-10-28 12:01:20,586 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 12:01:20,586 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 12:01:20,586 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 12:01:20,590 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-28 12:01:20,677 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': ['None', 'None', 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 12:01:20,677 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 12:01:20,677 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 12:01:20,678 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, TunerEngine
2020-10-28 12:01:20,678 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 12:01:20,678 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 12:01:20,764 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': ['None', 'None', 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 12:01:20,853 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': ['None', 'None', 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 12:01:20,854 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 12:01:20,854 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 12:01:42,889 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 12:01:43,414 - engine_logger:INFO - Engine instantiated in MP: TunerEngine
2020-10-28 12:01:44,149 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': ['None', 'None', 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 12:01:44,160 - engine_logger:ERROR - Failed to build model. type: Input, input_desc:{'layer_type': 'Input', 'shape': ['None', 'None', 3]} outputdesc: {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}
2020-10-28 12:01:44,160 - engine_logger:ERROR - Layerds: [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]
2020-10-28 12:02:55,541 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': ['None', 'None', 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 12:02:55,542 - engine_logger:ERROR - Failed to build model. type: Input, input_desc:{'layer_type': 'Input', 'shape': ['None', 'None', 3]} outputdesc: {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}
2020-10-28 12:02:55,542 - engine_logger:ERROR - Layerds: [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]
2020-10-28 12:02:55,613 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': ['None', 'None', 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 12:02:55,614 - engine_logger:ERROR - Failed to build model. type: Input, input_desc:{'layer_type': 'Input', 'shape': ['None', 'None', 3]} outputdesc: {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}
2020-10-28 12:02:55,614 - engine_logger:ERROR - Layerds: [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]
2020-10-28 12:02:55,680 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': ['None', 'None', 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 12:02:55,681 - engine_logger:ERROR - Failed to build model. type: Input, input_desc:{'layer_type': 'Input', 'shape': ['None', 'None', 3]} outputdesc: {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}
2020-10-28 12:02:55,681 - engine_logger:ERROR - Layerds: [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]
2020-10-28 12:02:55,746 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': ['None', 'None', 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 12:02:55,747 - engine_logger:ERROR - Failed to build model. type: Input, input_desc:{'layer_type': 'Input', 'shape': ['None', 'None', 3]} outputdesc: {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}
2020-10-28 12:02:55,747 - engine_logger:ERROR - Layerds: [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]
2020-10-28 12:02:55,812 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': ['None', 'None', 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 12:02:55,813 - engine_logger:ERROR - Failed to build model. type: Input, input_desc:{'layer_type': 'Input', 'shape': ['None', 'None', 3]} outputdesc: {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}
2020-10-28 12:02:55,813 - engine_logger:ERROR - Layerds: [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]
2020-10-28 12:03:00,964 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 12:03:00,964 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 12:03:00,964 - engine_logger:INFO - logger info level msg 
2020-10-28 12:03:00,964 - engine_logger:WARNING - logger warn level msg 
2020-10-28 12:03:00,965 - engine_logger:ERROR - logger error level msg 
2020-10-28 12:03:00,965 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 12:03:00,965 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 12:03:00,965 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 12:03:00,966 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-28 12:03:00,984 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': ['None', 'None', 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 12:03:00,984 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 12:03:00,984 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 12:03:00,984 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, TunerEngine
2020-10-28 12:03:00,984 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 12:03:00,984 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 12:03:01,002 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': ['None', 'None', 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 12:03:01,020 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': ['None', 'None', 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 12:03:01,020 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 12:03:01,020 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 12:03:01,020 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 12:03:01,020 - engine_logger:INFO - Engine instantiated in MP: TunerEngine
2020-10-28 12:03:01,126 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': ['None', 'None', 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 12:03:01,129 - engine_logger:ERROR - Failed to build model. type: Input, input_desc:{'layer_type': 'Input', 'shape': ['None', 'None', 3]} outputdesc: {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}
2020-10-28 12:03:01,129 - engine_logger:ERROR - Layerds: [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]
2020-10-28 12:03:01,129 - engine_logger:ERROR - exception: Error converting shape to a TensorShape: Dimension value must be integer or None or have an __index__ method, got value ''None'' with type '<class 'str'>'.
2020-10-28 12:03:01,192 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': ['None', 'None', 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 12:03:01,193 - engine_logger:ERROR - Failed to build model. type: Input, input_desc:{'layer_type': 'Input', 'shape': ['None', 'None', 3]} outputdesc: {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}
2020-10-28 12:03:01,193 - engine_logger:ERROR - Layerds: [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]
2020-10-28 12:03:01,193 - engine_logger:ERROR - exception: Error converting shape to a TensorShape: Dimension value must be integer or None or have an __index__ method, got value ''None'' with type '<class 'str'>'.
2020-10-28 12:03:01,254 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': ['None', 'None', 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 12:03:01,255 - engine_logger:ERROR - Failed to build model. type: Input, input_desc:{'layer_type': 'Input', 'shape': ['None', 'None', 3]} outputdesc: {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}
2020-10-28 12:03:01,255 - engine_logger:ERROR - Layerds: [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]
2020-10-28 12:03:01,255 - engine_logger:ERROR - exception: Error converting shape to a TensorShape: Dimension value must be integer or None or have an __index__ method, got value ''None'' with type '<class 'str'>'.
2020-10-28 12:03:01,316 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': ['None', 'None', 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 12:03:01,317 - engine_logger:ERROR - Failed to build model. type: Input, input_desc:{'layer_type': 'Input', 'shape': ['None', 'None', 3]} outputdesc: {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}
2020-10-28 12:03:01,317 - engine_logger:ERROR - Layerds: [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]
2020-10-28 12:03:01,317 - engine_logger:ERROR - exception: Error converting shape to a TensorShape: Dimension value must be integer or None or have an __index__ method, got value ''None'' with type '<class 'str'>'.
2020-10-28 12:03:01,378 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': ['None', 'None', 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 12:03:01,379 - engine_logger:ERROR - Failed to build model. type: Input, input_desc:{'layer_type': 'Input', 'shape': ['None', 'None', 3]} outputdesc: {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}
2020-10-28 12:03:01,379 - engine_logger:ERROR - Layerds: [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]
2020-10-28 12:03:01,379 - engine_logger:ERROR - exception: Error converting shape to a TensorShape: Dimension value must be integer or None or have an __index__ method, got value ''None'' with type '<class 'str'>'.
2020-10-28 12:03:01,441 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': ['None', 'None', 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 12:03:01,442 - engine_logger:ERROR - Failed to build model. type: Input, input_desc:{'layer_type': 'Input', 'shape': ['None', 'None', 3]} outputdesc: {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}
2020-10-28 12:03:01,442 - engine_logger:ERROR - Layerds: [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]
2020-10-28 12:03:01,442 - engine_logger:ERROR - exception: Error converting shape to a TensorShape: Dimension value must be integer or None or have an __index__ method, got value ''None'' with type '<class 'str'>'.
2020-10-28 12:03:28,659 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 12:03:28,660 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 12:03:28,660 - engine_logger:INFO - logger info level msg 
2020-10-28 12:03:28,660 - engine_logger:WARNING - logger warn level msg 
2020-10-28 12:03:28,660 - engine_logger:ERROR - logger error level msg 
2020-10-28 12:03:28,660 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 12:03:28,661 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 12:03:28,661 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 12:03:28,664 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-28 12:03:28,750 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': ['None', 'None', 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 12:03:28,750 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 12:03:28,750 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 12:03:28,750 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, TunerEngine
2020-10-28 12:03:28,751 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 12:03:28,751 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 12:03:28,835 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': ['None', 'None', 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 12:03:28,921 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': ['None', 'None', 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 12:03:28,921 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 12:03:28,921 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 12:03:28,921 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 12:03:28,922 - engine_logger:INFO - Engine instantiated in MP: TunerEngine
2020-10-28 12:03:29,054 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': ['None', 'None', 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 12:05:58,112 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': ['None', 'None', 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 12:05:58,113 - engine_logger:ERROR - Failed to build model. type: Input, input_desc:{'layer_type': 'Input', 'shape': ['None', 'None', 3]} outputdesc: {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}
2020-10-28 12:05:58,113 - engine_logger:ERROR - Layerds: [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]
2020-10-28 12:05:58,113 - engine_logger:ERROR - exception: Error converting shape to a TensorShape: Dimension value must be integer or None or have an __index__ method, got value ''None'' with type '<class 'str'>'.
2020-10-28 12:05:58,180 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': ['None', 'None', 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 12:05:58,181 - engine_logger:ERROR - Failed to build model. type: Input, input_desc:{'layer_type': 'Input', 'shape': ['None', 'None', 3]} outputdesc: {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}
2020-10-28 12:05:58,181 - engine_logger:ERROR - Layerds: [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]
2020-10-28 12:05:58,181 - engine_logger:ERROR - exception: Error converting shape to a TensorShape: Dimension value must be integer or None or have an __index__ method, got value ''None'' with type '<class 'str'>'.
2020-10-28 12:05:58,247 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': ['None', 'None', 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 12:05:58,248 - engine_logger:ERROR - Failed to build model. type: Input, input_desc:{'layer_type': 'Input', 'shape': ['None', 'None', 3]} outputdesc: {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}
2020-10-28 12:05:58,248 - engine_logger:ERROR - Layerds: [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]
2020-10-28 12:05:58,248 - engine_logger:ERROR - exception: Error converting shape to a TensorShape: Dimension value must be integer or None or have an __index__ method, got value ''None'' with type '<class 'str'>'.
2020-10-28 12:05:58,314 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': ['None', 'None', 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 12:05:58,315 - engine_logger:ERROR - Failed to build model. type: Input, input_desc:{'layer_type': 'Input', 'shape': ['None', 'None', 3]} outputdesc: {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}
2020-10-28 12:05:58,315 - engine_logger:ERROR - Layerds: [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]
2020-10-28 12:05:58,315 - engine_logger:ERROR - exception: Error converting shape to a TensorShape: Dimension value must be integer or None or have an __index__ method, got value ''None'' with type '<class 'str'>'.
2020-10-28 12:05:58,381 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': ['None', 'None', 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 12:05:58,382 - engine_logger:ERROR - Failed to build model. type: Input, input_desc:{'layer_type': 'Input', 'shape': ['None', 'None', 3]} outputdesc: {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}
2020-10-28 12:05:58,382 - engine_logger:ERROR - Layerds: [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}]
2020-10-28 12:05:58,382 - engine_logger:ERROR - exception: Error converting shape to a TensorShape: Dimension value must be integer or None or have an __index__ method, got value ''None'' with type '<class 'str'>'.
2020-10-28 12:06:01,774 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 12:06:01,774 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 12:06:01,774 - engine_logger:INFO - logger info level msg 
2020-10-28 12:06:01,774 - engine_logger:WARNING - logger warn level msg 
2020-10-28 12:06:01,774 - engine_logger:ERROR - logger error level msg 
2020-10-28 12:06:01,774 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 12:06:01,774 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 12:06:01,774 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 12:06:01,776 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-28 12:06:01,794 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 12:06:01,794 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 12:06:01,794 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 12:06:01,794 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, TunerEngine
2020-10-28 12:06:01,794 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 12:06:01,794 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 12:06:01,812 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 12:06:01,830 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 12:06:01,830 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 12:06:01,830 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 12:06:01,830 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 12:06:01,830 - engine_logger:INFO - Engine instantiated in MP: TunerEngine
2020-10-28 12:06:01,937 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 12:06:02,107 - engine_logger:INFO - Getting MNIST data.... 
2020-10-28 12:06:03,052 - engine_logger:INFO - Got MNIST data(reduced sample): {'x_train': array([[[[ 59,  62,  63],
         [ 43,  46,  45],
         [ 50,  48,  43],
         ...,
         [158, 132, 108],
         [152, 125, 102],
         [148, 124, 103]],

        [[ 16,  20,  20],
         [  0,   0,   0],
         [ 18,   8,   0],
         ...,
         [123,  88,  55],
         [119,  83,  50],
         [122,  87,  57]],

        [[ 25,  24,  21],
         [ 16,   7,   0],
         [ 49,  27,   8],
         ...,
         [118,  84,  50],
         [120,  84,  50],
         [109,  73,  42]],

        ...,

        [[208, 170,  96],
         [201, 153,  34],
         [198, 161,  26],
         ...,
         [160, 133,  70],
         [ 56,  31,   7],
         [ 53,  34,  20]],

        [[180, 139,  96],
         [173, 123,  42],
         [186, 144,  30],
         ...,
         [184, 148,  94],
         [ 97,  62,  34],
         [ 83,  53,  34]],

        [[177, 144, 116],
         [168, 129,  94],
         [179, 142,  87],
         ...,
         [216, 184, 140],
         [151, 118,  84],
         [123,  92,  72]]],


       [[[154, 177, 187],
         [126, 137, 136],
         [105, 104,  95],
         ...,
         [ 91,  95,  71],
         [ 87,  90,  71],
         [ 79,  81,  70]],

        [[140, 160, 169],
         [145, 153, 154],
         [125, 125, 118],
         ...,
         [ 96,  99,  78],
         [ 77,  80,  62],
         [ 71,  73,  61]],

        [[140, 155, 164],
         [139, 146, 149],
         [115, 115, 112],
         ...,
         [ 79,  82,  64],
         [ 68,  70,  55],
         [ 67,  69,  55]],

        ...,

        [[175, 167, 166],
         [156, 154, 160],
         [154, 160, 170],
         ...,
         [ 42,  34,  36],
         [ 61,  53,  57],
         [ 93,  83,  91]],

        [[165, 154, 128],
         [156, 152, 130],
         [159, 161, 142],
         ...,
         [103,  93,  96],
         [123, 114, 120],
         [131, 121, 131]],

        [[163, 148, 120],
         [158, 148, 122],
         [163, 156, 133],
         ...,
         [143, 133, 139],
         [143, 134, 142],
         [143, 133, 144]]],


       [[[255, 255, 255],
         [253, 253, 253],
         [253, 253, 253],
         ...,
         [253, 253, 253],
         [253, 253, 253],
         [253, 253, 253]],

        [[255, 255, 255],
         [255, 255, 255],
         [255, 255, 255],
         ...,
         [255, 255, 255],
         [255, 255, 255],
         [255, 255, 255]],

        [[255, 255, 255],
         [254, 254, 254],
         [254, 254, 254],
         ...,
         [254, 254, 254],
         [254, 254, 254],
         [254, 254, 254]],

        ...,

        [[113, 120, 112],
         [111, 118, 111],
         [105, 112, 106],
         ...,
         [ 72,  81,  80],
         [ 72,  80,  79],
         [ 72,  80,  79]],

        [[111, 118, 110],
         [104, 111, 104],
         [ 99, 106,  98],
         ...,
         [ 68,  75,  73],
         [ 70,  76,  75],
         [ 78,  84,  82]],

        [[106, 113, 105],
         [ 99, 106,  98],
         [ 95, 102,  94],
         ...,
         [ 78,  85,  83],
         [ 79,  85,  83],
         [ 80,  86,  84]]],


       ...,


       [[[167, 163, 145],
         [206, 201, 181],
         [202, 196, 177],
         ...,
         [ 91,  85,  89],
         [ 50,  64,  68],
         [ 46,  86,  90]],

        [[156, 153, 136],
         [206, 201, 181],
         [206, 199, 180],
         ...,
         [171, 166, 174],
         [ 99, 115, 123],
         [ 48,  88,  94]],

        [[147, 143, 128],
         [192, 186, 167],
         [206, 198, 177],
         ...,
         [173, 176, 186],
         [106, 130, 140],
         [ 48,  90,  96]],

        ...,

        [[144, 156, 151],
         [145, 153, 148],
         [152, 160, 156],
         ...,
         [ 45,  85,  91],
         [ 41,  78,  85],
         [ 47,  88,  94]],

        [[143, 155, 150],
         [148, 157, 154],
         [156, 167, 167],
         ...,
         [ 32,  56,  65],
         [ 31,  58,  66],
         [ 34,  66,  73]],

        [[139, 154, 149],
         [144, 157, 155],
         [140, 157, 159],
         ...,
         [ 39,  75,  81],
         [ 42,  82,  87],
         [ 42,  78,  84]]],


       [[[154, 152, 125],
         [156, 154, 130],
         [149, 146, 125],
         ...,
         [156, 154, 110],
         [131, 130,  97],
         [154, 149, 111]],

        [[163, 150, 111],
         [178, 167, 125],
         [179, 168, 126],
         ...,
         [185, 175, 127],
         [166, 165, 118],
         [168, 164, 117]],

        [[198, 184, 126],
         [188, 173, 117],
         [193, 179, 121],
         ...,
         [188, 166, 118],
         [184, 172, 126],
         [183, 179, 128]],

        ...,

        [[187, 185, 132],
         [175, 175, 129],
         [162, 162, 109],
         ...,
         [201, 217, 129],
         [200, 220, 129],
         [190, 205, 118]],

        [[157, 160, 109],
         [147, 153, 104],
         [144, 157,  98],
         ...,
         [213, 232, 134],
         [191, 227, 117],
         [173, 216, 105]],

        [[153, 150, 102],
         [150, 159,  99],
         [173, 195, 124],
         ...,
         [195, 234, 113],
         [187, 237, 108],
         [194, 247, 114]]],


       [[[ 45,  32,  21],
         [ 48,  34,  21],
         [ 66,  54,  41],
         ...,
         [ 19,   9,   7],
         [ 23,  14,  10],
         [ 20,  10,   8]],

        [[ 47,  33,  21],
         [ 50,  35,  22],
         [ 71,  58,  44],
         ...,
         [ 22,  10,   8],
         [ 22,  11,  10],
         [ 19,   8,   7]],

        [[ 47,  35,  22],
         [ 54,  40,  24],
         [ 63,  50,  35],
         ...,
         [ 24,  10,   7],
         [ 18,   6,   6],
         [ 18,   7,   6]],

        ...,

        [[109, 105,  66],
         [113, 108,  68],
         [115, 106,  67],
         ...,
         [103,  87,  55],
         [ 85,  75,  43],
         [ 97,  85,  52]],

        [[ 96,  90,  53],
         [114, 106,  69],
         [111, 102,  64],
         ...,
         [164, 146, 104],
         [154, 135,  89],
         [152, 139,  97]],

        [[ 97,  91,  52],
         [ 85,  79,  40],
         [105,  99,  57],
         ...,
         [161, 148, 108],
         [156, 137,  93],
         [156, 142, 100]]]], dtype=uint8), 'y_train': array([[6],
       [9],
       [9],
       ...,
       [5],
       [4],
       [6]], dtype=uint8), 'x_test': array([[[[158, 112,  49],
         [159, 111,  47],
         [165, 116,  51],
         ...,
         [137,  95,  36],
         [126,  91,  36],
         [116,  85,  33]],

        [[152, 112,  51],
         [151, 110,  40],
         [159, 114,  45],
         ...,
         [136,  95,  31],
         [125,  91,  32],
         [119,  88,  34]],

        [[151, 110,  47],
         [151, 109,  33],
         [158, 111,  36],
         ...,
         [139,  98,  34],
         [130,  95,  34],
         [120,  89,  33]],

        ...,

        [[ 68, 124, 177],
         [ 42, 100, 148],
         [ 31,  88, 137],
         ...,
         [ 38,  97, 146],
         [ 13,  64, 108],
         [ 40,  85, 127]],

        [[ 61, 116, 168],
         [ 49, 102, 148],
         [ 35,  85, 132],
         ...,
         [ 26,  82, 130],
         [ 29,  82, 126],
         [ 20,  64, 107]],

        [[ 54, 107, 160],
         [ 56, 105, 149],
         [ 45,  89, 132],
         ...,
         [ 24,  77, 124],
         [ 34,  84, 129],
         [ 21,  67, 110]]],


       [[[235, 235, 235],
         [231, 231, 231],
         [232, 232, 232],
         ...,
         [233, 233, 233],
         [233, 233, 233],
         [232, 232, 232]],

        [[238, 238, 238],
         [235, 235, 235],
         [235, 235, 235],
         ...,
         [236, 236, 236],
         [236, 236, 236],
         [235, 235, 235]],

        [[237, 237, 237],
         [234, 234, 234],
         [234, 234, 234],
         ...,
         [235, 235, 235],
         [235, 235, 235],
         [234, 234, 234]],

        ...,

        [[ 87,  99,  89],
         [ 43,  51,  37],
         [ 19,  23,  11],
         ...,
         [169, 184, 179],
         [182, 197, 193],
         [188, 202, 201]],

        [[ 82,  96,  82],
         [ 46,  57,  36],
         [ 36,  44,  22],
         ...,
         [174, 189, 183],
         [185, 200, 196],
         [187, 202, 200]],

        [[ 85, 101,  83],
         [ 62,  75,  48],
         [ 58,  67,  38],
         ...,
         [168, 183, 178],
         [180, 195, 191],
         [186, 200, 199]]],


       [[[158, 190, 222],
         [158, 187, 218],
         [139, 166, 194],
         ...,
         [228, 231, 234],
         [237, 239, 243],
         [238, 241, 246]],

        [[170, 200, 229],
         [172, 199, 226],
         [151, 176, 201],
         ...,
         [232, 232, 236],
         [246, 246, 250],
         [246, 247, 251]],

        [[174, 201, 225],
         [176, 200, 222],
         [157, 179, 199],
         ...,
         [230, 229, 232],
         [250, 249, 251],
         [245, 244, 247]],

        ...,

        [[ 31,  40,  45],
         [ 30,  39,  44],
         [ 26,  35,  40],
         ...,
         [ 37,  40,  46],
         [  9,  13,  14],
         [  4,   7,   5]],

        [[ 23,  34,  39],
         [ 27,  38,  43],
         [ 25,  36,  41],
         ...,
         [ 19,  20,  24],
         [  4,   6,   3],
         [  5,   7,   3]],

        [[ 28,  41,  47],
         [ 30,  43,  50],
         [ 32,  45,  52],
         ...,
         [  5,   6,   8],
         [  4,   5,   3],
         [  7,   8,   7]]],


       ...,


       [[[103, 124, 101],
         [124, 149, 120],
         [ 73,  98,  73],
         ...,
         [ 17,  25,  16],
         [ 10,  15,   9],
         [ 15,  19,  13]],

        [[162, 175, 148],
         [122, 137, 107],
         [111, 126, 103],
         ...,
         [ 28,  38,  25],
         [ 18,  22,  16],
         [ 11,  12,   8]],

        [[226, 236, 200],
         [209, 217, 183],
         [204, 216, 161],
         ...,
         [ 21,  29,  18],
         [ 19,  24,  17],
         [ 14,  17,  11]],

        ...,

        [[132, 134, 145],
         [126, 128, 138],
         [127, 127, 139],
         ...,
         [ 43,  36,  33],
         [ 64,  46,  31],
         [ 88,  53,  32]],

        [[125, 123, 134],
         [123, 122, 132],
         [121, 120, 132],
         ...,
         [ 41,  42,  43],
         [ 52,  39,  35],
         [ 87,  56,  43]],

        [[121, 119, 131],
         [119, 117, 129],
         [118, 118, 130],
         ...,
         [ 48,  49,  53],
         [ 53,  48,  50],
         [ 67,  42,  37]]],


       [[[ 77, 114,  33],
         [ 72, 111,  25],
         [ 76, 110,  34],
         ...,
         [ 59,  64,  46],
         [ 56,  58,  42],
         [ 56,  58,  40]],

        [[ 74, 107,  34],
         [ 71,  93,  31],
         [ 80, 102,  39],
         ...,
         [ 52,  55,  44],
         [ 57,  60,  45],
         [ 54,  58,  39]],

        [[ 80, 101,  38],
         [ 84,  98,  43],
         [ 74,  95,  32],
         ...,
         [ 50,  55,  51],
         [ 50,  55,  50],
         [ 61,  67,  59]],

        ...,

        [[ 65,  92,  26],
         [ 63,  84,  24],
         [ 52,  77,  20],
         ...,
         [ 84,  82,  68],
         [ 56,  57,  48],
         [ 28,  33,  24]],

        [[ 70,  89,  26],
         [ 77,  89,  32],
         [ 60,  92,  30],
         ...,
         [ 77,  77,  66],
         [ 39,  39,  35],
         [ 32,  39,  28]],

        [[ 48,  73,  12],
         [ 57,  71,  21],
         [ 56,  85,  30],
         ...,
         [ 51,  53,  47],
         [ 24,  27,  22],
         [ 35,  44,  30]]],


       [[[175, 180, 174],
         [176, 181, 175],
         [181, 186, 180],
         ...,
         [193, 207, 210],
         [190, 204, 207],
         [188, 202, 205]],

        [[177, 182, 176],
         [179, 184, 178],
         [183, 188, 182],
         ...,
         [196, 210, 213],
         [192, 206, 209],
         [191, 205, 208]],

        [[176, 181, 175],
         [177, 182, 176],
         [182, 187, 181],
         ...,
         [194, 208, 211],
         [191, 205, 208],
         [189, 203, 206]],

        ...,

        [[122, 121, 129],
         [117, 118, 129],
         [114, 118, 130],
         ...,
         [ 58,  73,  91],
         [ 81,  97, 118],
         [ 99, 118, 141]],

        [[116, 115, 123],
         [110, 111, 121],
         [107, 111, 123],
         ...,
         [ 57,  70,  88],
         [ 78,  93, 113],
         [100, 117, 140]],

        [[113, 112, 119],
         [106, 107, 117],
         [105, 109, 121],
         ...,
         [ 57,  68,  85],
         [ 71,  85, 103],
         [ 93, 110, 131]]]], dtype=uint8), 'y_test': array([[3],
       [8],
       [8],
       [0],
       [6],
       [6],
       [1],
       [6],
       [3],
       [1],
       [0],
       [9],
       [5],
       [7],
       [9],
       [8],
       [5],
       [7],
       [8],
       [6],
       [7],
       [0],
       [4],
       [9],
       [5],
       [2],
       [4],
       [0],
       [9],
       [6],
       [6],
       [5],
       [4],
       [5],
       [9],
       [2],
       [4],
       [1],
       [9],
       [5],
       [4],
       [6],
       [5],
       [6],
       [0],
       [9],
       [3],
       [9],
       [7],
       [6],
       [9],
       [8],
       [0],
       [3],
       [8],
       [8],
       [7],
       [7],
       [4],
       [6],
       [7],
       [3],
       [6],
       [3],
       [6],
       [2],
       [1],
       [2],
       [3],
       [7],
       [2],
       [6],
       [8],
       [8],
       [0],
       [2],
       [9],
       [3],
       [3],
       [8],
       [8],
       [1],
       [1],
       [7],
       [2],
       [5],
       [2],
       [7],
       [8],
       [9],
       [0],
       [3],
       [8],
       [6],
       [4],
       [6],
       [6],
       [0],
       [0],
       [7],
       [4],
       [5],
       [6],
       [3],
       [1],
       [1],
       [3],
       [6],
       [8],
       [7],
       [4],
       [0],
       [6],
       [2],
       [1],
       [3],
       [0],
       [4],
       [2],
       [7],
       [8],
       [3],
       [1],
       [2],
       [8],
       [0],
       [8],
       [3],
       [5],
       [2],
       [4],
       [1],
       [8],
       [9],
       [1],
       [2],
       [9],
       [7],
       [2],
       [9],
       [6],
       [5],
       [6],
       [3],
       [8],
       [7],
       [6],
       [2],
       [5],
       [2],
       [8],
       [9],
       [6],
       [0],
       [0],
       [5],
       [2],
       [9],
       [5],
       [4],
       [2],
       [1],
       [6],
       [6],
       [8],
       [4],
       [8],
       [4],
       [5],
       [0],
       [9],
       [9],
       [9],
       [8],
       [9],
       [9],
       [3],
       [7],
       [5],
       [0],
       [0],
       [5],
       [2],
       [2],
       [3],
       [8],
       [6],
       [3],
       [4],
       [0],
       [5],
       [8],
       [0],
       [1],
       [7],
       [2],
       [8],
       [8],
       [7],
       [8],
       [5],
       [1],
       [8],
       [7],
       [1],
       [3],
       [0],
       [5],
       [7],
       [9],
       [7],
       [4],
       [5],
       [9],
       [8],
       [0],
       [7],
       [9],
       [8],
       [2],
       [7],
       [6],
       [9],
       [4],
       [3],
       [9],
       [6],
       [4],
       [7],
       [6],
       [5],
       [1],
       [5],
       [8],
       [8],
       [0],
       [4],
       [0],
       [5],
       [5],
       [1],
       [1],
       [8],
       [9],
       [0],
       [3],
       [1],
       [9],
       [2],
       [2],
       [5],
       [3],
       [9],
       [9],
       [4],
       [0],
       [3],
       [0],
       [0],
       [9],
       [8],
       [1],
       [5],
       [7],
       [0],
       [8],
       [2],
       [4],
       [7],
       [0],
       [2],
       [3],
       [6],
       [3],
       [8],
       [5],
       [0],
       [3],
       [4],
       [3],
       [9],
       [0],
       [6],
       [1],
       [0],
       [9],
       [1],
       [0],
       [7],
       [9],
       [1],
       [2],
       [6],
       [9],
       [3],
       [4],
       [6],
       [0],
       [0],
       [6],
       [6],
       [6],
       [3],
       [2],
       [6],
       [1],
       [8],
       [2],
       [1],
       [6],
       [8],
       [6],
       [8],
       [0],
       [4],
       [0],
       [7],
       [7],
       [5],
       [5],
       [3],
       [5],
       [2],
       [3],
       [4],
       [1],
       [7],
       [5],
       [4],
       [6],
       [1],
       [9],
       [3],
       [6],
       [6],
       [9],
       [3],
       [8],
       [0],
       [7],
       [2],
       [6],
       [2],
       [5],
       [8],
       [5],
       [4],
       [6],
       [8],
       [9],
       [9],
       [1],
       [0],
       [2],
       [2],
       [7],
       [3],
       [2],
       [8],
       [0],
       [9],
       [5],
       [8],
       [1],
       [9],
       [4],
       [1],
       [3],
       [8],
       [1],
       [4],
       [7],
       [9],
       [4],
       [2],
       [7],
       [0],
       [7],
       [0],
       [6],
       [6],
       [9],
       [0],
       [9],
       [2],
       [8],
       [7],
       [2],
       [2],
       [5],
       [1],
       [2],
       [6],
       [2],
       [9],
       [6],
       [2],
       [3],
       [0],
       [3],
       [9],
       [8],
       [7],
       [8],
       [8],
       [4],
       [0],
       [1],
       [8],
       [2],
       [7],
       [9],
       [3],
       [6],
       [1],
       [9],
       [0],
       [7],
       [3],
       [7],
       [4],
       [5],
       [0],
       [0],
       [2],
       [9],
       [3],
       [4],
       [0],
       [6],
       [2],
       [5],
       [3],
       [7],
       [3],
       [7],
       [2],
       [5],
       [3],
       [1],
       [1],
       [4],
       [9],
       [9],
       [5],
       [7],
       [5],
       [0],
       [2],
       [2],
       [2],
       [9],
       [7],
       [3],
       [9],
       [4],
       [3],
       [5],
       [4],
       [6],
       [5],
       [6],
       [1],
       [4],
       [3],
       [4],
       [4],
       [3],
       [7],
       [8],
       [3],
       [7],
       [8],
       [0],
       [5],
       [7],
       [6],
       [0],
       [5],
       [4],
       [8],
       [6],
       [8],
       [5],
       [5],
       [9],
       [9],
       [9],
       [5],
       [0],
       [1],
       [0],
       [8],
       [1],
       [1],
       [8],
       [0],
       [2],
       [2],
       [0],
       [4],
       [6],
       [5],
       [4],
       [9],
       [4],
       [7],
       [9],
       [9],
       [4],
       [5],
       [6],
       [6],
       [1],
       [5],
       [3],
       [8],
       [9],
       [5],
       [8],
       [5],
       [7],
       [0],
       [7],
       [0],
       [5],
       [0],
       [0],
       [4],
       [6],
       [9],
       [0],
       [9],
       [5],
       [6],
       [6],
       [6],
       [2],
       [9],
       [0],
       [1],
       [7],
       [6],
       [7],
       [5],
       [9],
       [1],
       [6],
       [2],
       [5],
       [5],
       [5],
       [8],
       [5],
       [9],
       [4],
       [6],
       [4],
       [3],
       [2],
       [0],
       [7],
       [6],
       [2],
       [2],
       [3],
       [9],
       [7],
       [9],
       [2],
       [6],
       [7],
       [1],
       [3],
       [6],
       [6],
       [8],
       [9],
       [7],
       [5],
       [4],
       [0],
       [8],
       [4],
       [0],
       [9],
       [3],
       [4],
       [8],
       [9],
       [6],
       [9],
       [2],
       [6],
       [1],
       [4],
       [7],
       [3],
       [5],
       [3],
       [8],
       [5],
       [0],
       [2],
       [1],
       [6],
       [4],
       [3],
       [3],
       [9],
       [6],
       [9],
       [8],
       [8],
       [5],
       [8],
       [6],
       [6],
       [2],
       [1],
       [7],
       [7],
       [1],
       [2],
       [7],
       [9],
       [9],
       [4],
       [4],
       [1],
       [2],
       [5],
       [6],
       [8],
       [7],
       [6],
       [8],
       [3],
       [0],
       [5],
       [5],
       [3],
       [0],
       [7],
       [9],
       [1],
       [3],
       [4],
       [4],
       [5],
       [3],
       [9],
       [5],
       [6],
       [9],
       [2],
       [1],
       [1],
       [4],
       [1],
       [9],
       [4],
       [7],
       [6],
       [3],
       [8],
       [9],
       [0],
       [1],
       [3],
       [6],
       [3],
       [6],
       [3],
       [2],
       [0],
       [3],
       [1],
       [0],
       [5],
       [9],
       [6],
       [4],
       [8],
       [9],
       [6],
       [9],
       [6],
       [3],
       [0],
       [3],
       [2],
       [2],
       [7],
       [8],
       [3],
       [8],
       [2],
       [7],
       [5],
       [7],
       [2],
       [4],
       [8],
       [7],
       [4],
       [2],
       [9],
       [8],
       [8],
       [6],
       [8],
       [8],
       [7],
       [4],
       [3],
       [3],
       [8],
       [4],
       [9],
       [4],
       [8],
       [8],
       [1],
       [8],
       [2],
       [1],
       [3],
       [6],
       [5],
       [4],
       [2],
       [7],
       [9],
       [9],
       [4],
       [1],
       [4],
       [1],
       [3],
       [2],
       [7],
       [0],
       [7],
       [9],
       [7],
       [6],
       [6],
       [2],
       [5],
       [9],
       [2],
       [9],
       [1],
       [2],
       [2],
       [6],
       [8],
       [2],
       [1],
       [3],
       [6],
       [6],
       [0],
       [1],
       [2],
       [7],
       [0],
       [5],
       [4],
       [6],
       [1],
       [6],
       [4],
       [0],
       [2],
       [2],
       [6],
       [0],
       [5],
       [9],
       [1],
       [7],
       [6],
       [7],
       [0],
       [3],
       [9],
       [6],
       [8],
       [3],
       [0],
       [3],
       [4],
       [7],
       [7],
       [1],
       [4],
       [7],
       [2],
       [7],
       [1],
       [4],
       [7],
       [4],
       [4],
       [8],
       [4],
       [7],
       [7],
       [5],
       [3],
       [7],
       [2],
       [0],
       [8],
       [9],
       [5],
       [8],
       [3],
       [6],
       [2],
       [0],
       [8],
       [7],
       [3],
       [7],
       [6],
       [5],
       [3],
       [1],
       [3],
       [2],
       [2],
       [5],
       [4],
       [1],
       [2],
       [9],
       [2],
       [7],
       [0],
       [7],
       [2],
       [1],
       [3],
       [2],
       [0],
       [2],
       [4],
       [7],
       [9],
       [8],
       [9],
       [0],
       [7],
       [7],
       [0],
       [7],
       [8],
       [4],
       [6],
       [3],
       [3],
       [0],
       [1],
       [3],
       [7],
       [0],
       [1],
       [3],
       [1],
       [4],
       [2],
       [3],
       [8],
       [4],
       [2],
       [3],
       [7],
       [8],
       [4],
       [3],
       [0],
       [9],
       [0],
       [0],
       [1],
       [0],
       [4],
       [4],
       [6],
       [7],
       [6],
       [1],
       [1],
       [3],
       [7],
       [3],
       [5],
       [2],
       [6],
       [6],
       [5],
       [8],
       [7],
       [1],
       [6],
       [8],
       [8],
       [5],
       [3],
       [0],
       [4],
       [0],
       [1],
       [3],
       [8],
       [8],
       [0],
       [6],
       [9],
       [9],
       [9],
       [5],
       [5],
       [8],
       [6],
       [0],
       [0],
       [4],
       [2],
       [3],
       [2],
       [7],
       [2],
       [2],
       [5],
       [9],
       [8],
       [9],
       [1],
       [7],
       [4],
       [0],
       [3],
       [0],
       [1],
       [3],
       [8],
       [3],
       [9],
       [6],
       [1],
       [4],
       [7],
       [0],
       [3],
       [7],
       [8],
       [9],
       [1],
       [1],
       [6],
       [6],
       [6],
       [6],
       [9],
       [1],
       [9],
       [9],
       [4],
       [2],
       [1],
       [7],
       [0],
       [6],
       [8],
       [1],
       [9],
       [2],
       [9],
       [0],
       [4],
       [7],
       [8],
       [3],
       [1],
       [2],
       [0],
       [1],
       [5],
       [8],
       [4],
       [6],
       [3],
       [8],
       [1],
       [3],
       [8]], dtype=uint8)}
2020-10-28 12:06:03,052 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 12:06:03,106 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 12:06:41,551 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 12:06:41,551 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 12:06:41,551 - engine_logger:INFO - logger info level msg 
2020-10-28 12:06:41,552 - engine_logger:WARNING - logger warn level msg 
2020-10-28 12:06:41,552 - engine_logger:ERROR - logger error level msg 
2020-10-28 12:06:41,552 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 12:06:41,552 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 12:06:41,552 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 12:06:41,553 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='tuner')
2020-10-28 12:06:41,571 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 12:06:41,571 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 12:06:41,571 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 12:06:41,571 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, TunerEngine
2020-10-28 12:06:41,571 - engine_logger:INFO - Attribute tuner has been set to True, overriding default values if any.
2020-10-28 12:06:41,571 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 12:06:41,589 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 12:06:41,607 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 12:06:41,607 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 12:06:41,607 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 12:06:41,607 - engine_logger:INFO - Instantiating TunerEngine
2020-10-28 12:06:41,607 - engine_logger:INFO - Engine instantiated in MP: TunerEngine
2020-10-28 12:06:41,713 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 12:06:41,885 - engine_logger:INFO - Getting MNIST data.... 
2020-10-28 12:06:42,815 - engine_logger:INFO - Got MNIST data(reduced sample): {'x_train': array([[[[ 59,  62,  63],
         [ 43,  46,  45],
         [ 50,  48,  43],
         ...,
         [158, 132, 108],
         [152, 125, 102],
         [148, 124, 103]],

        [[ 16,  20,  20],
         [  0,   0,   0],
         [ 18,   8,   0],
         ...,
         [123,  88,  55],
         [119,  83,  50],
         [122,  87,  57]],

        [[ 25,  24,  21],
         [ 16,   7,   0],
         [ 49,  27,   8],
         ...,
         [118,  84,  50],
         [120,  84,  50],
         [109,  73,  42]],

        ...,

        [[208, 170,  96],
         [201, 153,  34],
         [198, 161,  26],
         ...,
         [160, 133,  70],
         [ 56,  31,   7],
         [ 53,  34,  20]],

        [[180, 139,  96],
         [173, 123,  42],
         [186, 144,  30],
         ...,
         [184, 148,  94],
         [ 97,  62,  34],
         [ 83,  53,  34]],

        [[177, 144, 116],
         [168, 129,  94],
         [179, 142,  87],
         ...,
         [216, 184, 140],
         [151, 118,  84],
         [123,  92,  72]]],


       [[[154, 177, 187],
         [126, 137, 136],
         [105, 104,  95],
         ...,
         [ 91,  95,  71],
         [ 87,  90,  71],
         [ 79,  81,  70]],

        [[140, 160, 169],
         [145, 153, 154],
         [125, 125, 118],
         ...,
         [ 96,  99,  78],
         [ 77,  80,  62],
         [ 71,  73,  61]],

        [[140, 155, 164],
         [139, 146, 149],
         [115, 115, 112],
         ...,
         [ 79,  82,  64],
         [ 68,  70,  55],
         [ 67,  69,  55]],

        ...,

        [[175, 167, 166],
         [156, 154, 160],
         [154, 160, 170],
         ...,
         [ 42,  34,  36],
         [ 61,  53,  57],
         [ 93,  83,  91]],

        [[165, 154, 128],
         [156, 152, 130],
         [159, 161, 142],
         ...,
         [103,  93,  96],
         [123, 114, 120],
         [131, 121, 131]],

        [[163, 148, 120],
         [158, 148, 122],
         [163, 156, 133],
         ...,
         [143, 133, 139],
         [143, 134, 142],
         [143, 133, 144]]],


       [[[255, 255, 255],
         [253, 253, 253],
         [253, 253, 253],
         ...,
         [253, 253, 253],
         [253, 253, 253],
         [253, 253, 253]],

        [[255, 255, 255],
         [255, 255, 255],
         [255, 255, 255],
         ...,
         [255, 255, 255],
         [255, 255, 255],
         [255, 255, 255]],

        [[255, 255, 255],
         [254, 254, 254],
         [254, 254, 254],
         ...,
         [254, 254, 254],
         [254, 254, 254],
         [254, 254, 254]],

        ...,

        [[113, 120, 112],
         [111, 118, 111],
         [105, 112, 106],
         ...,
         [ 72,  81,  80],
         [ 72,  80,  79],
         [ 72,  80,  79]],

        [[111, 118, 110],
         [104, 111, 104],
         [ 99, 106,  98],
         ...,
         [ 68,  75,  73],
         [ 70,  76,  75],
         [ 78,  84,  82]],

        [[106, 113, 105],
         [ 99, 106,  98],
         [ 95, 102,  94],
         ...,
         [ 78,  85,  83],
         [ 79,  85,  83],
         [ 80,  86,  84]]],


       ...,


       [[[167, 163, 145],
         [206, 201, 181],
         [202, 196, 177],
         ...,
         [ 91,  85,  89],
         [ 50,  64,  68],
         [ 46,  86,  90]],

        [[156, 153, 136],
         [206, 201, 181],
         [206, 199, 180],
         ...,
         [171, 166, 174],
         [ 99, 115, 123],
         [ 48,  88,  94]],

        [[147, 143, 128],
         [192, 186, 167],
         [206, 198, 177],
         ...,
         [173, 176, 186],
         [106, 130, 140],
         [ 48,  90,  96]],

        ...,

        [[144, 156, 151],
         [145, 153, 148],
         [152, 160, 156],
         ...,
         [ 45,  85,  91],
         [ 41,  78,  85],
         [ 47,  88,  94]],

        [[143, 155, 150],
         [148, 157, 154],
         [156, 167, 167],
         ...,
         [ 32,  56,  65],
         [ 31,  58,  66],
         [ 34,  66,  73]],

        [[139, 154, 149],
         [144, 157, 155],
         [140, 157, 159],
         ...,
         [ 39,  75,  81],
         [ 42,  82,  87],
         [ 42,  78,  84]]],


       [[[154, 152, 125],
         [156, 154, 130],
         [149, 146, 125],
         ...,
         [156, 154, 110],
         [131, 130,  97],
         [154, 149, 111]],

        [[163, 150, 111],
         [178, 167, 125],
         [179, 168, 126],
         ...,
         [185, 175, 127],
         [166, 165, 118],
         [168, 164, 117]],

        [[198, 184, 126],
         [188, 173, 117],
         [193, 179, 121],
         ...,
         [188, 166, 118],
         [184, 172, 126],
         [183, 179, 128]],

        ...,

        [[187, 185, 132],
         [175, 175, 129],
         [162, 162, 109],
         ...,
         [201, 217, 129],
         [200, 220, 129],
         [190, 205, 118]],

        [[157, 160, 109],
         [147, 153, 104],
         [144, 157,  98],
         ...,
         [213, 232, 134],
         [191, 227, 117],
         [173, 216, 105]],

        [[153, 150, 102],
         [150, 159,  99],
         [173, 195, 124],
         ...,
         [195, 234, 113],
         [187, 237, 108],
         [194, 247, 114]]],


       [[[ 45,  32,  21],
         [ 48,  34,  21],
         [ 66,  54,  41],
         ...,
         [ 19,   9,   7],
         [ 23,  14,  10],
         [ 20,  10,   8]],

        [[ 47,  33,  21],
         [ 50,  35,  22],
         [ 71,  58,  44],
         ...,
         [ 22,  10,   8],
         [ 22,  11,  10],
         [ 19,   8,   7]],

        [[ 47,  35,  22],
         [ 54,  40,  24],
         [ 63,  50,  35],
         ...,
         [ 24,  10,   7],
         [ 18,   6,   6],
         [ 18,   7,   6]],

        ...,

        [[109, 105,  66],
         [113, 108,  68],
         [115, 106,  67],
         ...,
         [103,  87,  55],
         [ 85,  75,  43],
         [ 97,  85,  52]],

        [[ 96,  90,  53],
         [114, 106,  69],
         [111, 102,  64],
         ...,
         [164, 146, 104],
         [154, 135,  89],
         [152, 139,  97]],

        [[ 97,  91,  52],
         [ 85,  79,  40],
         [105,  99,  57],
         ...,
         [161, 148, 108],
         [156, 137,  93],
         [156, 142, 100]]]], dtype=uint8), 'y_train': array([[6],
       [9],
       [9],
       ...,
       [5],
       [4],
       [6]], dtype=uint8), 'x_test': array([[[[158, 112,  49],
         [159, 111,  47],
         [165, 116,  51],
         ...,
         [137,  95,  36],
         [126,  91,  36],
         [116,  85,  33]],

        [[152, 112,  51],
         [151, 110,  40],
         [159, 114,  45],
         ...,
         [136,  95,  31],
         [125,  91,  32],
         [119,  88,  34]],

        [[151, 110,  47],
         [151, 109,  33],
         [158, 111,  36],
         ...,
         [139,  98,  34],
         [130,  95,  34],
         [120,  89,  33]],

        ...,

        [[ 68, 124, 177],
         [ 42, 100, 148],
         [ 31,  88, 137],
         ...,
         [ 38,  97, 146],
         [ 13,  64, 108],
         [ 40,  85, 127]],

        [[ 61, 116, 168],
         [ 49, 102, 148],
         [ 35,  85, 132],
         ...,
         [ 26,  82, 130],
         [ 29,  82, 126],
         [ 20,  64, 107]],

        [[ 54, 107, 160],
         [ 56, 105, 149],
         [ 45,  89, 132],
         ...,
         [ 24,  77, 124],
         [ 34,  84, 129],
         [ 21,  67, 110]]],


       [[[235, 235, 235],
         [231, 231, 231],
         [232, 232, 232],
         ...,
         [233, 233, 233],
         [233, 233, 233],
         [232, 232, 232]],

        [[238, 238, 238],
         [235, 235, 235],
         [235, 235, 235],
         ...,
         [236, 236, 236],
         [236, 236, 236],
         [235, 235, 235]],

        [[237, 237, 237],
         [234, 234, 234],
         [234, 234, 234],
         ...,
         [235, 235, 235],
         [235, 235, 235],
         [234, 234, 234]],

        ...,

        [[ 87,  99,  89],
         [ 43,  51,  37],
         [ 19,  23,  11],
         ...,
         [169, 184, 179],
         [182, 197, 193],
         [188, 202, 201]],

        [[ 82,  96,  82],
         [ 46,  57,  36],
         [ 36,  44,  22],
         ...,
         [174, 189, 183],
         [185, 200, 196],
         [187, 202, 200]],

        [[ 85, 101,  83],
         [ 62,  75,  48],
         [ 58,  67,  38],
         ...,
         [168, 183, 178],
         [180, 195, 191],
         [186, 200, 199]]],


       [[[158, 190, 222],
         [158, 187, 218],
         [139, 166, 194],
         ...,
         [228, 231, 234],
         [237, 239, 243],
         [238, 241, 246]],

        [[170, 200, 229],
         [172, 199, 226],
         [151, 176, 201],
         ...,
         [232, 232, 236],
         [246, 246, 250],
         [246, 247, 251]],

        [[174, 201, 225],
         [176, 200, 222],
         [157, 179, 199],
         ...,
         [230, 229, 232],
         [250, 249, 251],
         [245, 244, 247]],

        ...,

        [[ 31,  40,  45],
         [ 30,  39,  44],
         [ 26,  35,  40],
         ...,
         [ 37,  40,  46],
         [  9,  13,  14],
         [  4,   7,   5]],

        [[ 23,  34,  39],
         [ 27,  38,  43],
         [ 25,  36,  41],
         ...,
         [ 19,  20,  24],
         [  4,   6,   3],
         [  5,   7,   3]],

        [[ 28,  41,  47],
         [ 30,  43,  50],
         [ 32,  45,  52],
         ...,
         [  5,   6,   8],
         [  4,   5,   3],
         [  7,   8,   7]]],


       ...,


       [[[103, 124, 101],
         [124, 149, 120],
         [ 73,  98,  73],
         ...,
         [ 17,  25,  16],
         [ 10,  15,   9],
         [ 15,  19,  13]],

        [[162, 175, 148],
         [122, 137, 107],
         [111, 126, 103],
         ...,
         [ 28,  38,  25],
         [ 18,  22,  16],
         [ 11,  12,   8]],

        [[226, 236, 200],
         [209, 217, 183],
         [204, 216, 161],
         ...,
         [ 21,  29,  18],
         [ 19,  24,  17],
         [ 14,  17,  11]],

        ...,

        [[132, 134, 145],
         [126, 128, 138],
         [127, 127, 139],
         ...,
         [ 43,  36,  33],
         [ 64,  46,  31],
         [ 88,  53,  32]],

        [[125, 123, 134],
         [123, 122, 132],
         [121, 120, 132],
         ...,
         [ 41,  42,  43],
         [ 52,  39,  35],
         [ 87,  56,  43]],

        [[121, 119, 131],
         [119, 117, 129],
         [118, 118, 130],
         ...,
         [ 48,  49,  53],
         [ 53,  48,  50],
         [ 67,  42,  37]]],


       [[[ 77, 114,  33],
         [ 72, 111,  25],
         [ 76, 110,  34],
         ...,
         [ 59,  64,  46],
         [ 56,  58,  42],
         [ 56,  58,  40]],

        [[ 74, 107,  34],
         [ 71,  93,  31],
         [ 80, 102,  39],
         ...,
         [ 52,  55,  44],
         [ 57,  60,  45],
         [ 54,  58,  39]],

        [[ 80, 101,  38],
         [ 84,  98,  43],
         [ 74,  95,  32],
         ...,
         [ 50,  55,  51],
         [ 50,  55,  50],
         [ 61,  67,  59]],

        ...,

        [[ 65,  92,  26],
         [ 63,  84,  24],
         [ 52,  77,  20],
         ...,
         [ 84,  82,  68],
         [ 56,  57,  48],
         [ 28,  33,  24]],

        [[ 70,  89,  26],
         [ 77,  89,  32],
         [ 60,  92,  30],
         ...,
         [ 77,  77,  66],
         [ 39,  39,  35],
         [ 32,  39,  28]],

        [[ 48,  73,  12],
         [ 57,  71,  21],
         [ 56,  85,  30],
         ...,
         [ 51,  53,  47],
         [ 24,  27,  22],
         [ 35,  44,  30]]],


       [[[175, 180, 174],
         [176, 181, 175],
         [181, 186, 180],
         ...,
         [193, 207, 210],
         [190, 204, 207],
         [188, 202, 205]],

        [[177, 182, 176],
         [179, 184, 178],
         [183, 188, 182],
         ...,
         [196, 210, 213],
         [192, 206, 209],
         [191, 205, 208]],

        [[176, 181, 175],
         [177, 182, 176],
         [182, 187, 181],
         ...,
         [194, 208, 211],
         [191, 205, 208],
         [189, 203, 206]],

        ...,

        [[122, 121, 129],
         [117, 118, 129],
         [114, 118, 130],
         ...,
         [ 58,  73,  91],
         [ 81,  97, 118],
         [ 99, 118, 141]],

        [[116, 115, 123],
         [110, 111, 121],
         [107, 111, 123],
         ...,
         [ 57,  70,  88],
         [ 78,  93, 113],
         [100, 117, 140]],

        [[113, 112, 119],
         [106, 107, 117],
         [105, 109, 121],
         ...,
         [ 57,  68,  85],
         [ 71,  85, 103],
         [ 93, 110, 131]]]], dtype=uint8), 'y_test': array([[3],
       [8],
       [8],
       [0],
       [6],
       [6],
       [1],
       [6],
       [3],
       [1],
       [0],
       [9],
       [5],
       [7],
       [9],
       [8],
       [5],
       [7],
       [8],
       [6],
       [7],
       [0],
       [4],
       [9],
       [5],
       [2],
       [4],
       [0],
       [9],
       [6],
       [6],
       [5],
       [4],
       [5],
       [9],
       [2],
       [4],
       [1],
       [9],
       [5],
       [4],
       [6],
       [5],
       [6],
       [0],
       [9],
       [3],
       [9],
       [7],
       [6],
       [9],
       [8],
       [0],
       [3],
       [8],
       [8],
       [7],
       [7],
       [4],
       [6],
       [7],
       [3],
       [6],
       [3],
       [6],
       [2],
       [1],
       [2],
       [3],
       [7],
       [2],
       [6],
       [8],
       [8],
       [0],
       [2],
       [9],
       [3],
       [3],
       [8],
       [8],
       [1],
       [1],
       [7],
       [2],
       [5],
       [2],
       [7],
       [8],
       [9],
       [0],
       [3],
       [8],
       [6],
       [4],
       [6],
       [6],
       [0],
       [0],
       [7],
       [4],
       [5],
       [6],
       [3],
       [1],
       [1],
       [3],
       [6],
       [8],
       [7],
       [4],
       [0],
       [6],
       [2],
       [1],
       [3],
       [0],
       [4],
       [2],
       [7],
       [8],
       [3],
       [1],
       [2],
       [8],
       [0],
       [8],
       [3],
       [5],
       [2],
       [4],
       [1],
       [8],
       [9],
       [1],
       [2],
       [9],
       [7],
       [2],
       [9],
       [6],
       [5],
       [6],
       [3],
       [8],
       [7],
       [6],
       [2],
       [5],
       [2],
       [8],
       [9],
       [6],
       [0],
       [0],
       [5],
       [2],
       [9],
       [5],
       [4],
       [2],
       [1],
       [6],
       [6],
       [8],
       [4],
       [8],
       [4],
       [5],
       [0],
       [9],
       [9],
       [9],
       [8],
       [9],
       [9],
       [3],
       [7],
       [5],
       [0],
       [0],
       [5],
       [2],
       [2],
       [3],
       [8],
       [6],
       [3],
       [4],
       [0],
       [5],
       [8],
       [0],
       [1],
       [7],
       [2],
       [8],
       [8],
       [7],
       [8],
       [5],
       [1],
       [8],
       [7],
       [1],
       [3],
       [0],
       [5],
       [7],
       [9],
       [7],
       [4],
       [5],
       [9],
       [8],
       [0],
       [7],
       [9],
       [8],
       [2],
       [7],
       [6],
       [9],
       [4],
       [3],
       [9],
       [6],
       [4],
       [7],
       [6],
       [5],
       [1],
       [5],
       [8],
       [8],
       [0],
       [4],
       [0],
       [5],
       [5],
       [1],
       [1],
       [8],
       [9],
       [0],
       [3],
       [1],
       [9],
       [2],
       [2],
       [5],
       [3],
       [9],
       [9],
       [4],
       [0],
       [3],
       [0],
       [0],
       [9],
       [8],
       [1],
       [5],
       [7],
       [0],
       [8],
       [2],
       [4],
       [7],
       [0],
       [2],
       [3],
       [6],
       [3],
       [8],
       [5],
       [0],
       [3],
       [4],
       [3],
       [9],
       [0],
       [6],
       [1],
       [0],
       [9],
       [1],
       [0],
       [7],
       [9],
       [1],
       [2],
       [6],
       [9],
       [3],
       [4],
       [6],
       [0],
       [0],
       [6],
       [6],
       [6],
       [3],
       [2],
       [6],
       [1],
       [8],
       [2],
       [1],
       [6],
       [8],
       [6],
       [8],
       [0],
       [4],
       [0],
       [7],
       [7],
       [5],
       [5],
       [3],
       [5],
       [2],
       [3],
       [4],
       [1],
       [7],
       [5],
       [4],
       [6],
       [1],
       [9],
       [3],
       [6],
       [6],
       [9],
       [3],
       [8],
       [0],
       [7],
       [2],
       [6],
       [2],
       [5],
       [8],
       [5],
       [4],
       [6],
       [8],
       [9],
       [9],
       [1],
       [0],
       [2],
       [2],
       [7],
       [3],
       [2],
       [8],
       [0],
       [9],
       [5],
       [8],
       [1],
       [9],
       [4],
       [1],
       [3],
       [8],
       [1],
       [4],
       [7],
       [9],
       [4],
       [2],
       [7],
       [0],
       [7],
       [0],
       [6],
       [6],
       [9],
       [0],
       [9],
       [2],
       [8],
       [7],
       [2],
       [2],
       [5],
       [1],
       [2],
       [6],
       [2],
       [9],
       [6],
       [2],
       [3],
       [0],
       [3],
       [9],
       [8],
       [7],
       [8],
       [8],
       [4],
       [0],
       [1],
       [8],
       [2],
       [7],
       [9],
       [3],
       [6],
       [1],
       [9],
       [0],
       [7],
       [3],
       [7],
       [4],
       [5],
       [0],
       [0],
       [2],
       [9],
       [3],
       [4],
       [0],
       [6],
       [2],
       [5],
       [3],
       [7],
       [3],
       [7],
       [2],
       [5],
       [3],
       [1],
       [1],
       [4],
       [9],
       [9],
       [5],
       [7],
       [5],
       [0],
       [2],
       [2],
       [2],
       [9],
       [7],
       [3],
       [9],
       [4],
       [3],
       [5],
       [4],
       [6],
       [5],
       [6],
       [1],
       [4],
       [3],
       [4],
       [4],
       [3],
       [7],
       [8],
       [3],
       [7],
       [8],
       [0],
       [5],
       [7],
       [6],
       [0],
       [5],
       [4],
       [8],
       [6],
       [8],
       [5],
       [5],
       [9],
       [9],
       [9],
       [5],
       [0],
       [1],
       [0],
       [8],
       [1],
       [1],
       [8],
       [0],
       [2],
       [2],
       [0],
       [4],
       [6],
       [5],
       [4],
       [9],
       [4],
       [7],
       [9],
       [9],
       [4],
       [5],
       [6],
       [6],
       [1],
       [5],
       [3],
       [8],
       [9],
       [5],
       [8],
       [5],
       [7],
       [0],
       [7],
       [0],
       [5],
       [0],
       [0],
       [4],
       [6],
       [9],
       [0],
       [9],
       [5],
       [6],
       [6],
       [6],
       [2],
       [9],
       [0],
       [1],
       [7],
       [6],
       [7],
       [5],
       [9],
       [1],
       [6],
       [2],
       [5],
       [5],
       [5],
       [8],
       [5],
       [9],
       [4],
       [6],
       [4],
       [3],
       [2],
       [0],
       [7],
       [6],
       [2],
       [2],
       [3],
       [9],
       [7],
       [9],
       [2],
       [6],
       [7],
       [1],
       [3],
       [6],
       [6],
       [8],
       [9],
       [7],
       [5],
       [4],
       [0],
       [8],
       [4],
       [0],
       [9],
       [3],
       [4],
       [8],
       [9],
       [6],
       [9],
       [2],
       [6],
       [1],
       [4],
       [7],
       [3],
       [5],
       [3],
       [8],
       [5],
       [0],
       [2],
       [1],
       [6],
       [4],
       [3],
       [3],
       [9],
       [6],
       [9],
       [8],
       [8],
       [5],
       [8],
       [6],
       [6],
       [2],
       [1],
       [7],
       [7],
       [1],
       [2],
       [7],
       [9],
       [9],
       [4],
       [4],
       [1],
       [2],
       [5],
       [6],
       [8],
       [7],
       [6],
       [8],
       [3],
       [0],
       [5],
       [5],
       [3],
       [0],
       [7],
       [9],
       [1],
       [3],
       [4],
       [4],
       [5],
       [3],
       [9],
       [5],
       [6],
       [9],
       [2],
       [1],
       [1],
       [4],
       [1],
       [9],
       [4],
       [7],
       [6],
       [3],
       [8],
       [9],
       [0],
       [1],
       [3],
       [6],
       [3],
       [6],
       [3],
       [2],
       [0],
       [3],
       [1],
       [0],
       [5],
       [9],
       [6],
       [4],
       [8],
       [9],
       [6],
       [9],
       [6],
       [3],
       [0],
       [3],
       [2],
       [2],
       [7],
       [8],
       [3],
       [8],
       [2],
       [7],
       [5],
       [7],
       [2],
       [4],
       [8],
       [7],
       [4],
       [2],
       [9],
       [8],
       [8],
       [6],
       [8],
       [8],
       [7],
       [4],
       [3],
       [3],
       [8],
       [4],
       [9],
       [4],
       [8],
       [8],
       [1],
       [8],
       [2],
       [1],
       [3],
       [6],
       [5],
       [4],
       [2],
       [7],
       [9],
       [9],
       [4],
       [1],
       [4],
       [1],
       [3],
       [2],
       [7],
       [0],
       [7],
       [9],
       [7],
       [6],
       [6],
       [2],
       [5],
       [9],
       [2],
       [9],
       [1],
       [2],
       [2],
       [6],
       [8],
       [2],
       [1],
       [3],
       [6],
       [6],
       [0],
       [1],
       [2],
       [7],
       [0],
       [5],
       [4],
       [6],
       [1],
       [6],
       [4],
       [0],
       [2],
       [2],
       [6],
       [0],
       [5],
       [9],
       [1],
       [7],
       [6],
       [7],
       [0],
       [3],
       [9],
       [6],
       [8],
       [3],
       [0],
       [3],
       [4],
       [7],
       [7],
       [1],
       [4],
       [7],
       [2],
       [7],
       [1],
       [4],
       [7],
       [4],
       [4],
       [8],
       [4],
       [7],
       [7],
       [5],
       [3],
       [7],
       [2],
       [0],
       [8],
       [9],
       [5],
       [8],
       [3],
       [6],
       [2],
       [0],
       [8],
       [7],
       [3],
       [7],
       [6],
       [5],
       [3],
       [1],
       [3],
       [2],
       [2],
       [5],
       [4],
       [1],
       [2],
       [9],
       [2],
       [7],
       [0],
       [7],
       [2],
       [1],
       [3],
       [2],
       [0],
       [2],
       [4],
       [7],
       [9],
       [8],
       [9],
       [0],
       [7],
       [7],
       [0],
       [7],
       [8],
       [4],
       [6],
       [3],
       [3],
       [0],
       [1],
       [3],
       [7],
       [0],
       [1],
       [3],
       [1],
       [4],
       [2],
       [3],
       [8],
       [4],
       [2],
       [3],
       [7],
       [8],
       [4],
       [3],
       [0],
       [9],
       [0],
       [0],
       [1],
       [0],
       [4],
       [4],
       [6],
       [7],
       [6],
       [1],
       [1],
       [3],
       [7],
       [3],
       [5],
       [2],
       [6],
       [6],
       [5],
       [8],
       [7],
       [1],
       [6],
       [8],
       [8],
       [5],
       [3],
       [0],
       [4],
       [0],
       [1],
       [3],
       [8],
       [8],
       [0],
       [6],
       [9],
       [9],
       [9],
       [5],
       [5],
       [8],
       [6],
       [0],
       [0],
       [4],
       [2],
       [3],
       [2],
       [7],
       [2],
       [2],
       [5],
       [9],
       [8],
       [9],
       [1],
       [7],
       [4],
       [0],
       [3],
       [0],
       [1],
       [3],
       [8],
       [3],
       [9],
       [6],
       [1],
       [4],
       [7],
       [0],
       [3],
       [7],
       [8],
       [9],
       [1],
       [1],
       [6],
       [6],
       [6],
       [6],
       [9],
       [1],
       [9],
       [9],
       [4],
       [2],
       [1],
       [7],
       [0],
       [6],
       [8],
       [1],
       [9],
       [2],
       [9],
       [0],
       [4],
       [7],
       [8],
       [3],
       [1],
       [2],
       [0],
       [1],
       [5],
       [8],
       [4],
       [6],
       [3],
       [8],
       [1],
       [3],
       [8]], dtype=uint8)}
2020-10-28 12:06:42,815 - engine_logger:INFO - BUILD: data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 12:06:42,869 - engine_logger:INFO - Architecture.build().... configs: {'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 254, 'max_value': 512, 'step': 50}}, 'activation': {'values': ['relu']}}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 64, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 13:33:04,431 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 13:33:04,431 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 13:33:04,432 - engine_logger:INFO - logger info level msg 
2020-10-28 13:33:04,432 - engine_logger:WARNING - logger warn level msg 
2020-10-28 13:33:04,432 - engine_logger:ERROR - logger error level msg 
2020-10-28 13:33:04,432 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 13:33:04,433 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 13:33:04,433 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 13:33:04,437 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 13:33:22,253 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 13:33:22,253 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 13:33:22,253 - engine_logger:INFO - logger info level msg 
2020-10-28 13:33:22,253 - engine_logger:WARNING - logger warn level msg 
2020-10-28 13:33:22,253 - engine_logger:ERROR - logger error level msg 
2020-10-28 13:33:22,253 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 13:33:22,253 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 13:33:22,253 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 13:33:22,254 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 13:35:19,699 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 13:35:19,699 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 13:35:19,699 - engine_logger:INFO - logger info level msg 
2020-10-28 13:35:19,699 - engine_logger:WARNING - logger warn level msg 
2020-10-28 13:35:19,700 - engine_logger:ERROR - logger error level msg 
2020-10-28 13:35:19,700 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 13:35:19,700 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 13:35:19,700 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 13:35:19,701 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 13:35:38,598 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 13:35:38,599 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 13:35:38,599 - engine_logger:INFO - logger info level msg 
2020-10-28 13:35:38,599 - engine_logger:WARNING - logger warn level msg 
2020-10-28 13:35:38,600 - engine_logger:ERROR - logger error level msg 
2020-10-28 13:35:38,600 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 13:35:38,600 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 13:35:38,601 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 13:35:38,604 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 13:35:38,740 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:35:38,741 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 13:35:38,741 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 13:35:38,741 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 13:35:38,742 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 13:35:38,742 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 13:35:44,863 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:35:47,658 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:35:52,986 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 13:36:24,131 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 13:37:15,237 - engine_logger:INFO - Getting MNIST data.... 
2020-10-28 13:37:16,060 - engine_logger:INFO - Got MNIST data(reduced sample): {'x_train': array([[[[ 59,  62,  63],
         [ 43,  46,  45],
         [ 50,  48,  43],
         ...,
         [158, 132, 108],
         [152, 125, 102],
         [148, 124, 103]],

        [[ 16,  20,  20],
         [  0,   0,   0],
         [ 18,   8,   0],
         ...,
         [123,  88,  55],
         [119,  83,  50],
         [122,  87,  57]],

        [[ 25,  24,  21],
         [ 16,   7,   0],
         [ 49,  27,   8],
         ...,
         [118,  84,  50],
         [120,  84,  50],
         [109,  73,  42]],

        ...,

        [[208, 170,  96],
         [201, 153,  34],
         [198, 161,  26],
         ...,
         [160, 133,  70],
         [ 56,  31,   7],
         [ 53,  34,  20]],

        [[180, 139,  96],
         [173, 123,  42],
         [186, 144,  30],
         ...,
         [184, 148,  94],
         [ 97,  62,  34],
         [ 83,  53,  34]],

        [[177, 144, 116],
         [168, 129,  94],
         [179, 142,  87],
         ...,
         [216, 184, 140],
         [151, 118,  84],
         [123,  92,  72]]],


       [[[154, 177, 187],
         [126, 137, 136],
         [105, 104,  95],
         ...,
         [ 91,  95,  71],
         [ 87,  90,  71],
         [ 79,  81,  70]],

        [[140, 160, 169],
         [145, 153, 154],
         [125, 125, 118],
         ...,
         [ 96,  99,  78],
         [ 77,  80,  62],
         [ 71,  73,  61]],

        [[140, 155, 164],
         [139, 146, 149],
         [115, 115, 112],
         ...,
         [ 79,  82,  64],
         [ 68,  70,  55],
         [ 67,  69,  55]],

        ...,

        [[175, 167, 166],
         [156, 154, 160],
         [154, 160, 170],
         ...,
         [ 42,  34,  36],
         [ 61,  53,  57],
         [ 93,  83,  91]],

        [[165, 154, 128],
         [156, 152, 130],
         [159, 161, 142],
         ...,
         [103,  93,  96],
         [123, 114, 120],
         [131, 121, 131]],

        [[163, 148, 120],
         [158, 148, 122],
         [163, 156, 133],
         ...,
         [143, 133, 139],
         [143, 134, 142],
         [143, 133, 144]]],


       [[[255, 255, 255],
         [253, 253, 253],
         [253, 253, 253],
         ...,
         [253, 253, 253],
         [253, 253, 253],
         [253, 253, 253]],

        [[255, 255, 255],
         [255, 255, 255],
         [255, 255, 255],
         ...,
         [255, 255, 255],
         [255, 255, 255],
         [255, 255, 255]],

        [[255, 255, 255],
         [254, 254, 254],
         [254, 254, 254],
         ...,
         [254, 254, 254],
         [254, 254, 254],
         [254, 254, 254]],

        ...,

        [[113, 120, 112],
         [111, 118, 111],
         [105, 112, 106],
         ...,
         [ 72,  81,  80],
         [ 72,  80,  79],
         [ 72,  80,  79]],

        [[111, 118, 110],
         [104, 111, 104],
         [ 99, 106,  98],
         ...,
         [ 68,  75,  73],
         [ 70,  76,  75],
         [ 78,  84,  82]],

        [[106, 113, 105],
         [ 99, 106,  98],
         [ 95, 102,  94],
         ...,
         [ 78,  85,  83],
         [ 79,  85,  83],
         [ 80,  86,  84]]],


       ...,


       [[[167, 163, 145],
         [206, 201, 181],
         [202, 196, 177],
         ...,
         [ 91,  85,  89],
         [ 50,  64,  68],
         [ 46,  86,  90]],

        [[156, 153, 136],
         [206, 201, 181],
         [206, 199, 180],
         ...,
         [171, 166, 174],
         [ 99, 115, 123],
         [ 48,  88,  94]],

        [[147, 143, 128],
         [192, 186, 167],
         [206, 198, 177],
         ...,
         [173, 176, 186],
         [106, 130, 140],
         [ 48,  90,  96]],

        ...,

        [[144, 156, 151],
         [145, 153, 148],
         [152, 160, 156],
         ...,
         [ 45,  85,  91],
         [ 41,  78,  85],
         [ 47,  88,  94]],

        [[143, 155, 150],
         [148, 157, 154],
         [156, 167, 167],
         ...,
         [ 32,  56,  65],
         [ 31,  58,  66],
         [ 34,  66,  73]],

        [[139, 154, 149],
         [144, 157, 155],
         [140, 157, 159],
         ...,
         [ 39,  75,  81],
         [ 42,  82,  87],
         [ 42,  78,  84]]],


       [[[154, 152, 125],
         [156, 154, 130],
         [149, 146, 125],
         ...,
         [156, 154, 110],
         [131, 130,  97],
         [154, 149, 111]],

        [[163, 150, 111],
         [178, 167, 125],
         [179, 168, 126],
         ...,
         [185, 175, 127],
         [166, 165, 118],
         [168, 164, 117]],

        [[198, 184, 126],
         [188, 173, 117],
         [193, 179, 121],
         ...,
         [188, 166, 118],
         [184, 172, 126],
         [183, 179, 128]],

        ...,

        [[187, 185, 132],
         [175, 175, 129],
         [162, 162, 109],
         ...,
         [201, 217, 129],
         [200, 220, 129],
         [190, 205, 118]],

        [[157, 160, 109],
         [147, 153, 104],
         [144, 157,  98],
         ...,
         [213, 232, 134],
         [191, 227, 117],
         [173, 216, 105]],

        [[153, 150, 102],
         [150, 159,  99],
         [173, 195, 124],
         ...,
         [195, 234, 113],
         [187, 237, 108],
         [194, 247, 114]]],


       [[[ 45,  32,  21],
         [ 48,  34,  21],
         [ 66,  54,  41],
         ...,
         [ 19,   9,   7],
         [ 23,  14,  10],
         [ 20,  10,   8]],

        [[ 47,  33,  21],
         [ 50,  35,  22],
         [ 71,  58,  44],
         ...,
         [ 22,  10,   8],
         [ 22,  11,  10],
         [ 19,   8,   7]],

        [[ 47,  35,  22],
         [ 54,  40,  24],
         [ 63,  50,  35],
         ...,
         [ 24,  10,   7],
         [ 18,   6,   6],
         [ 18,   7,   6]],

        ...,

        [[109, 105,  66],
         [113, 108,  68],
         [115, 106,  67],
         ...,
         [103,  87,  55],
         [ 85,  75,  43],
         [ 97,  85,  52]],

        [[ 96,  90,  53],
         [114, 106,  69],
         [111, 102,  64],
         ...,
         [164, 146, 104],
         [154, 135,  89],
         [152, 139,  97]],

        [[ 97,  91,  52],
         [ 85,  79,  40],
         [105,  99,  57],
         ...,
         [161, 148, 108],
         [156, 137,  93],
         [156, 142, 100]]]], dtype=uint8), 'y_train': array([[6],
       [9],
       [9],
       ...,
       [5],
       [4],
       [6]], dtype=uint8), 'x_test': array([[[[158, 112,  49],
         [159, 111,  47],
         [165, 116,  51],
         ...,
         [137,  95,  36],
         [126,  91,  36],
         [116,  85,  33]],

        [[152, 112,  51],
         [151, 110,  40],
         [159, 114,  45],
         ...,
         [136,  95,  31],
         [125,  91,  32],
         [119,  88,  34]],

        [[151, 110,  47],
         [151, 109,  33],
         [158, 111,  36],
         ...,
         [139,  98,  34],
         [130,  95,  34],
         [120,  89,  33]],

        ...,

        [[ 68, 124, 177],
         [ 42, 100, 148],
         [ 31,  88, 137],
         ...,
         [ 38,  97, 146],
         [ 13,  64, 108],
         [ 40,  85, 127]],

        [[ 61, 116, 168],
         [ 49, 102, 148],
         [ 35,  85, 132],
         ...,
         [ 26,  82, 130],
         [ 29,  82, 126],
         [ 20,  64, 107]],

        [[ 54, 107, 160],
         [ 56, 105, 149],
         [ 45,  89, 132],
         ...,
         [ 24,  77, 124],
         [ 34,  84, 129],
         [ 21,  67, 110]]],


       [[[235, 235, 235],
         [231, 231, 231],
         [232, 232, 232],
         ...,
         [233, 233, 233],
         [233, 233, 233],
         [232, 232, 232]],

        [[238, 238, 238],
         [235, 235, 235],
         [235, 235, 235],
         ...,
         [236, 236, 236],
         [236, 236, 236],
         [235, 235, 235]],

        [[237, 237, 237],
         [234, 234, 234],
         [234, 234, 234],
         ...,
         [235, 235, 235],
         [235, 235, 235],
         [234, 234, 234]],

        ...,

        [[ 87,  99,  89],
         [ 43,  51,  37],
         [ 19,  23,  11],
         ...,
         [169, 184, 179],
         [182, 197, 193],
         [188, 202, 201]],

        [[ 82,  96,  82],
         [ 46,  57,  36],
         [ 36,  44,  22],
         ...,
         [174, 189, 183],
         [185, 200, 196],
         [187, 202, 200]],

        [[ 85, 101,  83],
         [ 62,  75,  48],
         [ 58,  67,  38],
         ...,
         [168, 183, 178],
         [180, 195, 191],
         [186, 200, 199]]],


       [[[158, 190, 222],
         [158, 187, 218],
         [139, 166, 194],
         ...,
         [228, 231, 234],
         [237, 239, 243],
         [238, 241, 246]],

        [[170, 200, 229],
         [172, 199, 226],
         [151, 176, 201],
         ...,
         [232, 232, 236],
         [246, 246, 250],
         [246, 247, 251]],

        [[174, 201, 225],
         [176, 200, 222],
         [157, 179, 199],
         ...,
         [230, 229, 232],
         [250, 249, 251],
         [245, 244, 247]],

        ...,

        [[ 31,  40,  45],
         [ 30,  39,  44],
         [ 26,  35,  40],
         ...,
         [ 37,  40,  46],
         [  9,  13,  14],
         [  4,   7,   5]],

        [[ 23,  34,  39],
         [ 27,  38,  43],
         [ 25,  36,  41],
         ...,
         [ 19,  20,  24],
         [  4,   6,   3],
         [  5,   7,   3]],

        [[ 28,  41,  47],
         [ 30,  43,  50],
         [ 32,  45,  52],
         ...,
         [  5,   6,   8],
         [  4,   5,   3],
         [  7,   8,   7]]],


       ...,


       [[[103, 124, 101],
         [124, 149, 120],
         [ 73,  98,  73],
         ...,
         [ 17,  25,  16],
         [ 10,  15,   9],
         [ 15,  19,  13]],

        [[162, 175, 148],
         [122, 137, 107],
         [111, 126, 103],
         ...,
         [ 28,  38,  25],
         [ 18,  22,  16],
         [ 11,  12,   8]],

        [[226, 236, 200],
         [209, 217, 183],
         [204, 216, 161],
         ...,
         [ 21,  29,  18],
         [ 19,  24,  17],
         [ 14,  17,  11]],

        ...,

        [[132, 134, 145],
         [126, 128, 138],
         [127, 127, 139],
         ...,
         [ 43,  36,  33],
         [ 64,  46,  31],
         [ 88,  53,  32]],

        [[125, 123, 134],
         [123, 122, 132],
         [121, 120, 132],
         ...,
         [ 41,  42,  43],
         [ 52,  39,  35],
         [ 87,  56,  43]],

        [[121, 119, 131],
         [119, 117, 129],
         [118, 118, 130],
         ...,
         [ 48,  49,  53],
         [ 53,  48,  50],
         [ 67,  42,  37]]],


       [[[ 77, 114,  33],
         [ 72, 111,  25],
         [ 76, 110,  34],
         ...,
         [ 59,  64,  46],
         [ 56,  58,  42],
         [ 56,  58,  40]],

        [[ 74, 107,  34],
         [ 71,  93,  31],
         [ 80, 102,  39],
         ...,
         [ 52,  55,  44],
         [ 57,  60,  45],
         [ 54,  58,  39]],

        [[ 80, 101,  38],
         [ 84,  98,  43],
         [ 74,  95,  32],
         ...,
         [ 50,  55,  51],
         [ 50,  55,  50],
         [ 61,  67,  59]],

        ...,

        [[ 65,  92,  26],
         [ 63,  84,  24],
         [ 52,  77,  20],
         ...,
         [ 84,  82,  68],
         [ 56,  57,  48],
         [ 28,  33,  24]],

        [[ 70,  89,  26],
         [ 77,  89,  32],
         [ 60,  92,  30],
         ...,
         [ 77,  77,  66],
         [ 39,  39,  35],
         [ 32,  39,  28]],

        [[ 48,  73,  12],
         [ 57,  71,  21],
         [ 56,  85,  30],
         ...,
         [ 51,  53,  47],
         [ 24,  27,  22],
         [ 35,  44,  30]]],


       [[[175, 180, 174],
         [176, 181, 175],
         [181, 186, 180],
         ...,
         [193, 207, 210],
         [190, 204, 207],
         [188, 202, 205]],

        [[177, 182, 176],
         [179, 184, 178],
         [183, 188, 182],
         ...,
         [196, 210, 213],
         [192, 206, 209],
         [191, 205, 208]],

        [[176, 181, 175],
         [177, 182, 176],
         [182, 187, 181],
         ...,
         [194, 208, 211],
         [191, 205, 208],
         [189, 203, 206]],

        ...,

        [[122, 121, 129],
         [117, 118, 129],
         [114, 118, 130],
         ...,
         [ 58,  73,  91],
         [ 81,  97, 118],
         [ 99, 118, 141]],

        [[116, 115, 123],
         [110, 111, 121],
         [107, 111, 123],
         ...,
         [ 57,  70,  88],
         [ 78,  93, 113],
         [100, 117, 140]],

        [[113, 112, 119],
         [106, 107, 117],
         [105, 109, 121],
         ...,
         [ 57,  68,  85],
         [ 71,  85, 103],
         [ 93, 110, 131]]]], dtype=uint8), 'y_test': array([[3],
       [8],
       [8],
       [0],
       [6],
       [6],
       [1],
       [6],
       [3],
       [1],
       [0],
       [9],
       [5],
       [7],
       [9],
       [8],
       [5],
       [7],
       [8],
       [6],
       [7],
       [0],
       [4],
       [9],
       [5],
       [2],
       [4],
       [0],
       [9],
       [6],
       [6],
       [5],
       [4],
       [5],
       [9],
       [2],
       [4],
       [1],
       [9],
       [5],
       [4],
       [6],
       [5],
       [6],
       [0],
       [9],
       [3],
       [9],
       [7],
       [6],
       [9],
       [8],
       [0],
       [3],
       [8],
       [8],
       [7],
       [7],
       [4],
       [6],
       [7],
       [3],
       [6],
       [3],
       [6],
       [2],
       [1],
       [2],
       [3],
       [7],
       [2],
       [6],
       [8],
       [8],
       [0],
       [2],
       [9],
       [3],
       [3],
       [8],
       [8],
       [1],
       [1],
       [7],
       [2],
       [5],
       [2],
       [7],
       [8],
       [9],
       [0],
       [3],
       [8],
       [6],
       [4],
       [6],
       [6],
       [0],
       [0],
       [7],
       [4],
       [5],
       [6],
       [3],
       [1],
       [1],
       [3],
       [6],
       [8],
       [7],
       [4],
       [0],
       [6],
       [2],
       [1],
       [3],
       [0],
       [4],
       [2],
       [7],
       [8],
       [3],
       [1],
       [2],
       [8],
       [0],
       [8],
       [3],
       [5],
       [2],
       [4],
       [1],
       [8],
       [9],
       [1],
       [2],
       [9],
       [7],
       [2],
       [9],
       [6],
       [5],
       [6],
       [3],
       [8],
       [7],
       [6],
       [2],
       [5],
       [2],
       [8],
       [9],
       [6],
       [0],
       [0],
       [5],
       [2],
       [9],
       [5],
       [4],
       [2],
       [1],
       [6],
       [6],
       [8],
       [4],
       [8],
       [4],
       [5],
       [0],
       [9],
       [9],
       [9],
       [8],
       [9],
       [9],
       [3],
       [7],
       [5],
       [0],
       [0],
       [5],
       [2],
       [2],
       [3],
       [8],
       [6],
       [3],
       [4],
       [0],
       [5],
       [8],
       [0],
       [1],
       [7],
       [2],
       [8],
       [8],
       [7],
       [8],
       [5],
       [1],
       [8],
       [7],
       [1],
       [3],
       [0],
       [5],
       [7],
       [9],
       [7],
       [4],
       [5],
       [9],
       [8],
       [0],
       [7],
       [9],
       [8],
       [2],
       [7],
       [6],
       [9],
       [4],
       [3],
       [9],
       [6],
       [4],
       [7],
       [6],
       [5],
       [1],
       [5],
       [8],
       [8],
       [0],
       [4],
       [0],
       [5],
       [5],
       [1],
       [1],
       [8],
       [9],
       [0],
       [3],
       [1],
       [9],
       [2],
       [2],
       [5],
       [3],
       [9],
       [9],
       [4],
       [0],
       [3],
       [0],
       [0],
       [9],
       [8],
       [1],
       [5],
       [7],
       [0],
       [8],
       [2],
       [4],
       [7],
       [0],
       [2],
       [3],
       [6],
       [3],
       [8],
       [5],
       [0],
       [3],
       [4],
       [3],
       [9],
       [0],
       [6],
       [1],
       [0],
       [9],
       [1],
       [0],
       [7],
       [9],
       [1],
       [2],
       [6],
       [9],
       [3],
       [4],
       [6],
       [0],
       [0],
       [6],
       [6],
       [6],
       [3],
       [2],
       [6],
       [1],
       [8],
       [2],
       [1],
       [6],
       [8],
       [6],
       [8],
       [0],
       [4],
       [0],
       [7],
       [7],
       [5],
       [5],
       [3],
       [5],
       [2],
       [3],
       [4],
       [1],
       [7],
       [5],
       [4],
       [6],
       [1],
       [9],
       [3],
       [6],
       [6],
       [9],
       [3],
       [8],
       [0],
       [7],
       [2],
       [6],
       [2],
       [5],
       [8],
       [5],
       [4],
       [6],
       [8],
       [9],
       [9],
       [1],
       [0],
       [2],
       [2],
       [7],
       [3],
       [2],
       [8],
       [0],
       [9],
       [5],
       [8],
       [1],
       [9],
       [4],
       [1],
       [3],
       [8],
       [1],
       [4],
       [7],
       [9],
       [4],
       [2],
       [7],
       [0],
       [7],
       [0],
       [6],
       [6],
       [9],
       [0],
       [9],
       [2],
       [8],
       [7],
       [2],
       [2],
       [5],
       [1],
       [2],
       [6],
       [2],
       [9],
       [6],
       [2],
       [3],
       [0],
       [3],
       [9],
       [8],
       [7],
       [8],
       [8],
       [4],
       [0],
       [1],
       [8],
       [2],
       [7],
       [9],
       [3],
       [6],
       [1],
       [9],
       [0],
       [7],
       [3],
       [7],
       [4],
       [5],
       [0],
       [0],
       [2],
       [9],
       [3],
       [4],
       [0],
       [6],
       [2],
       [5],
       [3],
       [7],
       [3],
       [7],
       [2],
       [5],
       [3],
       [1],
       [1],
       [4],
       [9],
       [9],
       [5],
       [7],
       [5],
       [0],
       [2],
       [2],
       [2],
       [9],
       [7],
       [3],
       [9],
       [4],
       [3],
       [5],
       [4],
       [6],
       [5],
       [6],
       [1],
       [4],
       [3],
       [4],
       [4],
       [3],
       [7],
       [8],
       [3],
       [7],
       [8],
       [0],
       [5],
       [7],
       [6],
       [0],
       [5],
       [4],
       [8],
       [6],
       [8],
       [5],
       [5],
       [9],
       [9],
       [9],
       [5],
       [0],
       [1],
       [0],
       [8],
       [1],
       [1],
       [8],
       [0],
       [2],
       [2],
       [0],
       [4],
       [6],
       [5],
       [4],
       [9],
       [4],
       [7],
       [9],
       [9],
       [4],
       [5],
       [6],
       [6],
       [1],
       [5],
       [3],
       [8],
       [9],
       [5],
       [8],
       [5],
       [7],
       [0],
       [7],
       [0],
       [5],
       [0],
       [0],
       [4],
       [6],
       [9],
       [0],
       [9],
       [5],
       [6],
       [6],
       [6],
       [2],
       [9],
       [0],
       [1],
       [7],
       [6],
       [7],
       [5],
       [9],
       [1],
       [6],
       [2],
       [5],
       [5],
       [5],
       [8],
       [5],
       [9],
       [4],
       [6],
       [4],
       [3],
       [2],
       [0],
       [7],
       [6],
       [2],
       [2],
       [3],
       [9],
       [7],
       [9],
       [2],
       [6],
       [7],
       [1],
       [3],
       [6],
       [6],
       [8],
       [9],
       [7],
       [5],
       [4],
       [0],
       [8],
       [4],
       [0],
       [9],
       [3],
       [4],
       [8],
       [9],
       [6],
       [9],
       [2],
       [6],
       [1],
       [4],
       [7],
       [3],
       [5],
       [3],
       [8],
       [5],
       [0],
       [2],
       [1],
       [6],
       [4],
       [3],
       [3],
       [9],
       [6],
       [9],
       [8],
       [8],
       [5],
       [8],
       [6],
       [6],
       [2],
       [1],
       [7],
       [7],
       [1],
       [2],
       [7],
       [9],
       [9],
       [4],
       [4],
       [1],
       [2],
       [5],
       [6],
       [8],
       [7],
       [6],
       [8],
       [3],
       [0],
       [5],
       [5],
       [3],
       [0],
       [7],
       [9],
       [1],
       [3],
       [4],
       [4],
       [5],
       [3],
       [9],
       [5],
       [6],
       [9],
       [2],
       [1],
       [1],
       [4],
       [1],
       [9],
       [4],
       [7],
       [6],
       [3],
       [8],
       [9],
       [0],
       [1],
       [3],
       [6],
       [3],
       [6],
       [3],
       [2],
       [0],
       [3],
       [1],
       [0],
       [5],
       [9],
       [6],
       [4],
       [8],
       [9],
       [6],
       [9],
       [6],
       [3],
       [0],
       [3],
       [2],
       [2],
       [7],
       [8],
       [3],
       [8],
       [2],
       [7],
       [5],
       [7],
       [2],
       [4],
       [8],
       [7],
       [4],
       [2],
       [9],
       [8],
       [8],
       [6],
       [8],
       [8],
       [7],
       [4],
       [3],
       [3],
       [8],
       [4],
       [9],
       [4],
       [8],
       [8],
       [1],
       [8],
       [2],
       [1],
       [3],
       [6],
       [5],
       [4],
       [2],
       [7],
       [9],
       [9],
       [4],
       [1],
       [4],
       [1],
       [3],
       [2],
       [7],
       [0],
       [7],
       [9],
       [7],
       [6],
       [6],
       [2],
       [5],
       [9],
       [2],
       [9],
       [1],
       [2],
       [2],
       [6],
       [8],
       [2],
       [1],
       [3],
       [6],
       [6],
       [0],
       [1],
       [2],
       [7],
       [0],
       [5],
       [4],
       [6],
       [1],
       [6],
       [4],
       [0],
       [2],
       [2],
       [6],
       [0],
       [5],
       [9],
       [1],
       [7],
       [6],
       [7],
       [0],
       [3],
       [9],
       [6],
       [8],
       [3],
       [0],
       [3],
       [4],
       [7],
       [7],
       [1],
       [4],
       [7],
       [2],
       [7],
       [1],
       [4],
       [7],
       [4],
       [4],
       [8],
       [4],
       [7],
       [7],
       [5],
       [3],
       [7],
       [2],
       [0],
       [8],
       [9],
       [5],
       [8],
       [3],
       [6],
       [2],
       [0],
       [8],
       [7],
       [3],
       [7],
       [6],
       [5],
       [3],
       [1],
       [3],
       [2],
       [2],
       [5],
       [4],
       [1],
       [2],
       [9],
       [2],
       [7],
       [0],
       [7],
       [2],
       [1],
       [3],
       [2],
       [0],
       [2],
       [4],
       [7],
       [9],
       [8],
       [9],
       [0],
       [7],
       [7],
       [0],
       [7],
       [8],
       [4],
       [6],
       [3],
       [3],
       [0],
       [1],
       [3],
       [7],
       [0],
       [1],
       [3],
       [1],
       [4],
       [2],
       [3],
       [8],
       [4],
       [2],
       [3],
       [7],
       [8],
       [4],
       [3],
       [0],
       [9],
       [0],
       [0],
       [1],
       [0],
       [4],
       [4],
       [6],
       [7],
       [6],
       [1],
       [1],
       [3],
       [7],
       [3],
       [5],
       [2],
       [6],
       [6],
       [5],
       [8],
       [7],
       [1],
       [6],
       [8],
       [8],
       [5],
       [3],
       [0],
       [4],
       [0],
       [1],
       [3],
       [8],
       [8],
       [0],
       [6],
       [9],
       [9],
       [9],
       [5],
       [5],
       [8],
       [6],
       [0],
       [0],
       [4],
       [2],
       [3],
       [2],
       [7],
       [2],
       [2],
       [5],
       [9],
       [8],
       [9],
       [1],
       [7],
       [4],
       [0],
       [3],
       [0],
       [1],
       [3],
       [8],
       [3],
       [9],
       [6],
       [1],
       [4],
       [7],
       [0],
       [3],
       [7],
       [8],
       [9],
       [1],
       [1],
       [6],
       [6],
       [6],
       [6],
       [9],
       [1],
       [9],
       [9],
       [4],
       [2],
       [1],
       [7],
       [0],
       [6],
       [8],
       [1],
       [9],
       [2],
       [9],
       [0],
       [4],
       [7],
       [8],
       [3],
       [1],
       [2],
       [0],
       [1],
       [5],
       [8],
       [4],
       [6],
       [3],
       [8],
       [1],
       [3],
       [8]], dtype=uint8)}
2020-10-28 13:37:17,146 - engine_logger:INFO - Getting MNIST data.... 
2020-10-28 13:37:17,974 - engine_logger:INFO - Got MNIST data(reduced sample): {'x_train': array([[[[ 59,  62,  63],
         [ 43,  46,  45],
         [ 50,  48,  43],
         ...,
         [158, 132, 108],
         [152, 125, 102],
         [148, 124, 103]],

        [[ 16,  20,  20],
         [  0,   0,   0],
         [ 18,   8,   0],
         ...,
         [123,  88,  55],
         [119,  83,  50],
         [122,  87,  57]],

        [[ 25,  24,  21],
         [ 16,   7,   0],
         [ 49,  27,   8],
         ...,
         [118,  84,  50],
         [120,  84,  50],
         [109,  73,  42]],

        ...,

        [[208, 170,  96],
         [201, 153,  34],
         [198, 161,  26],
         ...,
         [160, 133,  70],
         [ 56,  31,   7],
         [ 53,  34,  20]],

        [[180, 139,  96],
         [173, 123,  42],
         [186, 144,  30],
         ...,
         [184, 148,  94],
         [ 97,  62,  34],
         [ 83,  53,  34]],

        [[177, 144, 116],
         [168, 129,  94],
         [179, 142,  87],
         ...,
         [216, 184, 140],
         [151, 118,  84],
         [123,  92,  72]]],


       [[[154, 177, 187],
         [126, 137, 136],
         [105, 104,  95],
         ...,
         [ 91,  95,  71],
         [ 87,  90,  71],
         [ 79,  81,  70]],

        [[140, 160, 169],
         [145, 153, 154],
         [125, 125, 118],
         ...,
         [ 96,  99,  78],
         [ 77,  80,  62],
         [ 71,  73,  61]],

        [[140, 155, 164],
         [139, 146, 149],
         [115, 115, 112],
         ...,
         [ 79,  82,  64],
         [ 68,  70,  55],
         [ 67,  69,  55]],

        ...,

        [[175, 167, 166],
         [156, 154, 160],
         [154, 160, 170],
         ...,
         [ 42,  34,  36],
         [ 61,  53,  57],
         [ 93,  83,  91]],

        [[165, 154, 128],
         [156, 152, 130],
         [159, 161, 142],
         ...,
         [103,  93,  96],
         [123, 114, 120],
         [131, 121, 131]],

        [[163, 148, 120],
         [158, 148, 122],
         [163, 156, 133],
         ...,
         [143, 133, 139],
         [143, 134, 142],
         [143, 133, 144]]],


       [[[255, 255, 255],
         [253, 253, 253],
         [253, 253, 253],
         ...,
         [253, 253, 253],
         [253, 253, 253],
         [253, 253, 253]],

        [[255, 255, 255],
         [255, 255, 255],
         [255, 255, 255],
         ...,
         [255, 255, 255],
         [255, 255, 255],
         [255, 255, 255]],

        [[255, 255, 255],
         [254, 254, 254],
         [254, 254, 254],
         ...,
         [254, 254, 254],
         [254, 254, 254],
         [254, 254, 254]],

        ...,

        [[113, 120, 112],
         [111, 118, 111],
         [105, 112, 106],
         ...,
         [ 72,  81,  80],
         [ 72,  80,  79],
         [ 72,  80,  79]],

        [[111, 118, 110],
         [104, 111, 104],
         [ 99, 106,  98],
         ...,
         [ 68,  75,  73],
         [ 70,  76,  75],
         [ 78,  84,  82]],

        [[106, 113, 105],
         [ 99, 106,  98],
         [ 95, 102,  94],
         ...,
         [ 78,  85,  83],
         [ 79,  85,  83],
         [ 80,  86,  84]]],


       ...,


       [[[167, 163, 145],
         [206, 201, 181],
         [202, 196, 177],
         ...,
         [ 91,  85,  89],
         [ 50,  64,  68],
         [ 46,  86,  90]],

        [[156, 153, 136],
         [206, 201, 181],
         [206, 199, 180],
         ...,
         [171, 166, 174],
         [ 99, 115, 123],
         [ 48,  88,  94]],

        [[147, 143, 128],
         [192, 186, 167],
         [206, 198, 177],
         ...,
         [173, 176, 186],
         [106, 130, 140],
         [ 48,  90,  96]],

        ...,

        [[144, 156, 151],
         [145, 153, 148],
         [152, 160, 156],
         ...,
         [ 45,  85,  91],
         [ 41,  78,  85],
         [ 47,  88,  94]],

        [[143, 155, 150],
         [148, 157, 154],
         [156, 167, 167],
         ...,
         [ 32,  56,  65],
         [ 31,  58,  66],
         [ 34,  66,  73]],

        [[139, 154, 149],
         [144, 157, 155],
         [140, 157, 159],
         ...,
         [ 39,  75,  81],
         [ 42,  82,  87],
         [ 42,  78,  84]]],


       [[[154, 152, 125],
         [156, 154, 130],
         [149, 146, 125],
         ...,
         [156, 154, 110],
         [131, 130,  97],
         [154, 149, 111]],

        [[163, 150, 111],
         [178, 167, 125],
         [179, 168, 126],
         ...,
         [185, 175, 127],
         [166, 165, 118],
         [168, 164, 117]],

        [[198, 184, 126],
         [188, 173, 117],
         [193, 179, 121],
         ...,
         [188, 166, 118],
         [184, 172, 126],
         [183, 179, 128]],

        ...,

        [[187, 185, 132],
         [175, 175, 129],
         [162, 162, 109],
         ...,
         [201, 217, 129],
         [200, 220, 129],
         [190, 205, 118]],

        [[157, 160, 109],
         [147, 153, 104],
         [144, 157,  98],
         ...,
         [213, 232, 134],
         [191, 227, 117],
         [173, 216, 105]],

        [[153, 150, 102],
         [150, 159,  99],
         [173, 195, 124],
         ...,
         [195, 234, 113],
         [187, 237, 108],
         [194, 247, 114]]],


       [[[ 45,  32,  21],
         [ 48,  34,  21],
         [ 66,  54,  41],
         ...,
         [ 19,   9,   7],
         [ 23,  14,  10],
         [ 20,  10,   8]],

        [[ 47,  33,  21],
         [ 50,  35,  22],
         [ 71,  58,  44],
         ...,
         [ 22,  10,   8],
         [ 22,  11,  10],
         [ 19,   8,   7]],

        [[ 47,  35,  22],
         [ 54,  40,  24],
         [ 63,  50,  35],
         ...,
         [ 24,  10,   7],
         [ 18,   6,   6],
         [ 18,   7,   6]],

        ...,

        [[109, 105,  66],
         [113, 108,  68],
         [115, 106,  67],
         ...,
         [103,  87,  55],
         [ 85,  75,  43],
         [ 97,  85,  52]],

        [[ 96,  90,  53],
         [114, 106,  69],
         [111, 102,  64],
         ...,
         [164, 146, 104],
         [154, 135,  89],
         [152, 139,  97]],

        [[ 97,  91,  52],
         [ 85,  79,  40],
         [105,  99,  57],
         ...,
         [161, 148, 108],
         [156, 137,  93],
         [156, 142, 100]]]], dtype=uint8), 'y_train': array([[6],
       [9],
       [9],
       ...,
       [5],
       [4],
       [6]], dtype=uint8), 'x_test': array([[[[158, 112,  49],
         [159, 111,  47],
         [165, 116,  51],
         ...,
         [137,  95,  36],
         [126,  91,  36],
         [116,  85,  33]],

        [[152, 112,  51],
         [151, 110,  40],
         [159, 114,  45],
         ...,
         [136,  95,  31],
         [125,  91,  32],
         [119,  88,  34]],

        [[151, 110,  47],
         [151, 109,  33],
         [158, 111,  36],
         ...,
         [139,  98,  34],
         [130,  95,  34],
         [120,  89,  33]],

        ...,

        [[ 68, 124, 177],
         [ 42, 100, 148],
         [ 31,  88, 137],
         ...,
         [ 38,  97, 146],
         [ 13,  64, 108],
         [ 40,  85, 127]],

        [[ 61, 116, 168],
         [ 49, 102, 148],
         [ 35,  85, 132],
         ...,
         [ 26,  82, 130],
         [ 29,  82, 126],
         [ 20,  64, 107]],

        [[ 54, 107, 160],
         [ 56, 105, 149],
         [ 45,  89, 132],
         ...,
         [ 24,  77, 124],
         [ 34,  84, 129],
         [ 21,  67, 110]]],


       [[[235, 235, 235],
         [231, 231, 231],
         [232, 232, 232],
         ...,
         [233, 233, 233],
         [233, 233, 233],
         [232, 232, 232]],

        [[238, 238, 238],
         [235, 235, 235],
         [235, 235, 235],
         ...,
         [236, 236, 236],
         [236, 236, 236],
         [235, 235, 235]],

        [[237, 237, 237],
         [234, 234, 234],
         [234, 234, 234],
         ...,
         [235, 235, 235],
         [235, 235, 235],
         [234, 234, 234]],

        ...,

        [[ 87,  99,  89],
         [ 43,  51,  37],
         [ 19,  23,  11],
         ...,
         [169, 184, 179],
         [182, 197, 193],
         [188, 202, 201]],

        [[ 82,  96,  82],
         [ 46,  57,  36],
         [ 36,  44,  22],
         ...,
         [174, 189, 183],
         [185, 200, 196],
         [187, 202, 200]],

        [[ 85, 101,  83],
         [ 62,  75,  48],
         [ 58,  67,  38],
         ...,
         [168, 183, 178],
         [180, 195, 191],
         [186, 200, 199]]],


       [[[158, 190, 222],
         [158, 187, 218],
         [139, 166, 194],
         ...,
         [228, 231, 234],
         [237, 239, 243],
         [238, 241, 246]],

        [[170, 200, 229],
         [172, 199, 226],
         [151, 176, 201],
         ...,
         [232, 232, 236],
         [246, 246, 250],
         [246, 247, 251]],

        [[174, 201, 225],
         [176, 200, 222],
         [157, 179, 199],
         ...,
         [230, 229, 232],
         [250, 249, 251],
         [245, 244, 247]],

        ...,

        [[ 31,  40,  45],
         [ 30,  39,  44],
         [ 26,  35,  40],
         ...,
         [ 37,  40,  46],
         [  9,  13,  14],
         [  4,   7,   5]],

        [[ 23,  34,  39],
         [ 27,  38,  43],
         [ 25,  36,  41],
         ...,
         [ 19,  20,  24],
         [  4,   6,   3],
         [  5,   7,   3]],

        [[ 28,  41,  47],
         [ 30,  43,  50],
         [ 32,  45,  52],
         ...,
         [  5,   6,   8],
         [  4,   5,   3],
         [  7,   8,   7]]],


       ...,


       [[[103, 124, 101],
         [124, 149, 120],
         [ 73,  98,  73],
         ...,
         [ 17,  25,  16],
         [ 10,  15,   9],
         [ 15,  19,  13]],

        [[162, 175, 148],
         [122, 137, 107],
         [111, 126, 103],
         ...,
         [ 28,  38,  25],
         [ 18,  22,  16],
         [ 11,  12,   8]],

        [[226, 236, 200],
         [209, 217, 183],
         [204, 216, 161],
         ...,
         [ 21,  29,  18],
         [ 19,  24,  17],
         [ 14,  17,  11]],

        ...,

        [[132, 134, 145],
         [126, 128, 138],
         [127, 127, 139],
         ...,
         [ 43,  36,  33],
         [ 64,  46,  31],
         [ 88,  53,  32]],

        [[125, 123, 134],
         [123, 122, 132],
         [121, 120, 132],
         ...,
         [ 41,  42,  43],
         [ 52,  39,  35],
         [ 87,  56,  43]],

        [[121, 119, 131],
         [119, 117, 129],
         [118, 118, 130],
         ...,
         [ 48,  49,  53],
         [ 53,  48,  50],
         [ 67,  42,  37]]],


       [[[ 77, 114,  33],
         [ 72, 111,  25],
         [ 76, 110,  34],
         ...,
         [ 59,  64,  46],
         [ 56,  58,  42],
         [ 56,  58,  40]],

        [[ 74, 107,  34],
         [ 71,  93,  31],
         [ 80, 102,  39],
         ...,
         [ 52,  55,  44],
         [ 57,  60,  45],
         [ 54,  58,  39]],

        [[ 80, 101,  38],
         [ 84,  98,  43],
         [ 74,  95,  32],
         ...,
         [ 50,  55,  51],
         [ 50,  55,  50],
         [ 61,  67,  59]],

        ...,

        [[ 65,  92,  26],
         [ 63,  84,  24],
         [ 52,  77,  20],
         ...,
         [ 84,  82,  68],
         [ 56,  57,  48],
         [ 28,  33,  24]],

        [[ 70,  89,  26],
         [ 77,  89,  32],
         [ 60,  92,  30],
         ...,
         [ 77,  77,  66],
         [ 39,  39,  35],
         [ 32,  39,  28]],

        [[ 48,  73,  12],
         [ 57,  71,  21],
         [ 56,  85,  30],
         ...,
         [ 51,  53,  47],
         [ 24,  27,  22],
         [ 35,  44,  30]]],


       [[[175, 180, 174],
         [176, 181, 175],
         [181, 186, 180],
         ...,
         [193, 207, 210],
         [190, 204, 207],
         [188, 202, 205]],

        [[177, 182, 176],
         [179, 184, 178],
         [183, 188, 182],
         ...,
         [196, 210, 213],
         [192, 206, 209],
         [191, 205, 208]],

        [[176, 181, 175],
         [177, 182, 176],
         [182, 187, 181],
         ...,
         [194, 208, 211],
         [191, 205, 208],
         [189, 203, 206]],

        ...,

        [[122, 121, 129],
         [117, 118, 129],
         [114, 118, 130],
         ...,
         [ 58,  73,  91],
         [ 81,  97, 118],
         [ 99, 118, 141]],

        [[116, 115, 123],
         [110, 111, 121],
         [107, 111, 123],
         ...,
         [ 57,  70,  88],
         [ 78,  93, 113],
         [100, 117, 140]],

        [[113, 112, 119],
         [106, 107, 117],
         [105, 109, 121],
         ...,
         [ 57,  68,  85],
         [ 71,  85, 103],
         [ 93, 110, 131]]]], dtype=uint8), 'y_test': array([[3],
       [8],
       [8],
       [0],
       [6],
       [6],
       [1],
       [6],
       [3],
       [1],
       [0],
       [9],
       [5],
       [7],
       [9],
       [8],
       [5],
       [7],
       [8],
       [6],
       [7],
       [0],
       [4],
       [9],
       [5],
       [2],
       [4],
       [0],
       [9],
       [6],
       [6],
       [5],
       [4],
       [5],
       [9],
       [2],
       [4],
       [1],
       [9],
       [5],
       [4],
       [6],
       [5],
       [6],
       [0],
       [9],
       [3],
       [9],
       [7],
       [6],
       [9],
       [8],
       [0],
       [3],
       [8],
       [8],
       [7],
       [7],
       [4],
       [6],
       [7],
       [3],
       [6],
       [3],
       [6],
       [2],
       [1],
       [2],
       [3],
       [7],
       [2],
       [6],
       [8],
       [8],
       [0],
       [2],
       [9],
       [3],
       [3],
       [8],
       [8],
       [1],
       [1],
       [7],
       [2],
       [5],
       [2],
       [7],
       [8],
       [9],
       [0],
       [3],
       [8],
       [6],
       [4],
       [6],
       [6],
       [0],
       [0],
       [7],
       [4],
       [5],
       [6],
       [3],
       [1],
       [1],
       [3],
       [6],
       [8],
       [7],
       [4],
       [0],
       [6],
       [2],
       [1],
       [3],
       [0],
       [4],
       [2],
       [7],
       [8],
       [3],
       [1],
       [2],
       [8],
       [0],
       [8],
       [3],
       [5],
       [2],
       [4],
       [1],
       [8],
       [9],
       [1],
       [2],
       [9],
       [7],
       [2],
       [9],
       [6],
       [5],
       [6],
       [3],
       [8],
       [7],
       [6],
       [2],
       [5],
       [2],
       [8],
       [9],
       [6],
       [0],
       [0],
       [5],
       [2],
       [9],
       [5],
       [4],
       [2],
       [1],
       [6],
       [6],
       [8],
       [4],
       [8],
       [4],
       [5],
       [0],
       [9],
       [9],
       [9],
       [8],
       [9],
       [9],
       [3],
       [7],
       [5],
       [0],
       [0],
       [5],
       [2],
       [2],
       [3],
       [8],
       [6],
       [3],
       [4],
       [0],
       [5],
       [8],
       [0],
       [1],
       [7],
       [2],
       [8],
       [8],
       [7],
       [8],
       [5],
       [1],
       [8],
       [7],
       [1],
       [3],
       [0],
       [5],
       [7],
       [9],
       [7],
       [4],
       [5],
       [9],
       [8],
       [0],
       [7],
       [9],
       [8],
       [2],
       [7],
       [6],
       [9],
       [4],
       [3],
       [9],
       [6],
       [4],
       [7],
       [6],
       [5],
       [1],
       [5],
       [8],
       [8],
       [0],
       [4],
       [0],
       [5],
       [5],
       [1],
       [1],
       [8],
       [9],
       [0],
       [3],
       [1],
       [9],
       [2],
       [2],
       [5],
       [3],
       [9],
       [9],
       [4],
       [0],
       [3],
       [0],
       [0],
       [9],
       [8],
       [1],
       [5],
       [7],
       [0],
       [8],
       [2],
       [4],
       [7],
       [0],
       [2],
       [3],
       [6],
       [3],
       [8],
       [5],
       [0],
       [3],
       [4],
       [3],
       [9],
       [0],
       [6],
       [1],
       [0],
       [9],
       [1],
       [0],
       [7],
       [9],
       [1],
       [2],
       [6],
       [9],
       [3],
       [4],
       [6],
       [0],
       [0],
       [6],
       [6],
       [6],
       [3],
       [2],
       [6],
       [1],
       [8],
       [2],
       [1],
       [6],
       [8],
       [6],
       [8],
       [0],
       [4],
       [0],
       [7],
       [7],
       [5],
       [5],
       [3],
       [5],
       [2],
       [3],
       [4],
       [1],
       [7],
       [5],
       [4],
       [6],
       [1],
       [9],
       [3],
       [6],
       [6],
       [9],
       [3],
       [8],
       [0],
       [7],
       [2],
       [6],
       [2],
       [5],
       [8],
       [5],
       [4],
       [6],
       [8],
       [9],
       [9],
       [1],
       [0],
       [2],
       [2],
       [7],
       [3],
       [2],
       [8],
       [0],
       [9],
       [5],
       [8],
       [1],
       [9],
       [4],
       [1],
       [3],
       [8],
       [1],
       [4],
       [7],
       [9],
       [4],
       [2],
       [7],
       [0],
       [7],
       [0],
       [6],
       [6],
       [9],
       [0],
       [9],
       [2],
       [8],
       [7],
       [2],
       [2],
       [5],
       [1],
       [2],
       [6],
       [2],
       [9],
       [6],
       [2],
       [3],
       [0],
       [3],
       [9],
       [8],
       [7],
       [8],
       [8],
       [4],
       [0],
       [1],
       [8],
       [2],
       [7],
       [9],
       [3],
       [6],
       [1],
       [9],
       [0],
       [7],
       [3],
       [7],
       [4],
       [5],
       [0],
       [0],
       [2],
       [9],
       [3],
       [4],
       [0],
       [6],
       [2],
       [5],
       [3],
       [7],
       [3],
       [7],
       [2],
       [5],
       [3],
       [1],
       [1],
       [4],
       [9],
       [9],
       [5],
       [7],
       [5],
       [0],
       [2],
       [2],
       [2],
       [9],
       [7],
       [3],
       [9],
       [4],
       [3],
       [5],
       [4],
       [6],
       [5],
       [6],
       [1],
       [4],
       [3],
       [4],
       [4],
       [3],
       [7],
       [8],
       [3],
       [7],
       [8],
       [0],
       [5],
       [7],
       [6],
       [0],
       [5],
       [4],
       [8],
       [6],
       [8],
       [5],
       [5],
       [9],
       [9],
       [9],
       [5],
       [0],
       [1],
       [0],
       [8],
       [1],
       [1],
       [8],
       [0],
       [2],
       [2],
       [0],
       [4],
       [6],
       [5],
       [4],
       [9],
       [4],
       [7],
       [9],
       [9],
       [4],
       [5],
       [6],
       [6],
       [1],
       [5],
       [3],
       [8],
       [9],
       [5],
       [8],
       [5],
       [7],
       [0],
       [7],
       [0],
       [5],
       [0],
       [0],
       [4],
       [6],
       [9],
       [0],
       [9],
       [5],
       [6],
       [6],
       [6],
       [2],
       [9],
       [0],
       [1],
       [7],
       [6],
       [7],
       [5],
       [9],
       [1],
       [6],
       [2],
       [5],
       [5],
       [5],
       [8],
       [5],
       [9],
       [4],
       [6],
       [4],
       [3],
       [2],
       [0],
       [7],
       [6],
       [2],
       [2],
       [3],
       [9],
       [7],
       [9],
       [2],
       [6],
       [7],
       [1],
       [3],
       [6],
       [6],
       [8],
       [9],
       [7],
       [5],
       [4],
       [0],
       [8],
       [4],
       [0],
       [9],
       [3],
       [4],
       [8],
       [9],
       [6],
       [9],
       [2],
       [6],
       [1],
       [4],
       [7],
       [3],
       [5],
       [3],
       [8],
       [5],
       [0],
       [2],
       [1],
       [6],
       [4],
       [3],
       [3],
       [9],
       [6],
       [9],
       [8],
       [8],
       [5],
       [8],
       [6],
       [6],
       [2],
       [1],
       [7],
       [7],
       [1],
       [2],
       [7],
       [9],
       [9],
       [4],
       [4],
       [1],
       [2],
       [5],
       [6],
       [8],
       [7],
       [6],
       [8],
       [3],
       [0],
       [5],
       [5],
       [3],
       [0],
       [7],
       [9],
       [1],
       [3],
       [4],
       [4],
       [5],
       [3],
       [9],
       [5],
       [6],
       [9],
       [2],
       [1],
       [1],
       [4],
       [1],
       [9],
       [4],
       [7],
       [6],
       [3],
       [8],
       [9],
       [0],
       [1],
       [3],
       [6],
       [3],
       [6],
       [3],
       [2],
       [0],
       [3],
       [1],
       [0],
       [5],
       [9],
       [6],
       [4],
       [8],
       [9],
       [6],
       [9],
       [6],
       [3],
       [0],
       [3],
       [2],
       [2],
       [7],
       [8],
       [3],
       [8],
       [2],
       [7],
       [5],
       [7],
       [2],
       [4],
       [8],
       [7],
       [4],
       [2],
       [9],
       [8],
       [8],
       [6],
       [8],
       [8],
       [7],
       [4],
       [3],
       [3],
       [8],
       [4],
       [9],
       [4],
       [8],
       [8],
       [1],
       [8],
       [2],
       [1],
       [3],
       [6],
       [5],
       [4],
       [2],
       [7],
       [9],
       [9],
       [4],
       [1],
       [4],
       [1],
       [3],
       [2],
       [7],
       [0],
       [7],
       [9],
       [7],
       [6],
       [6],
       [2],
       [5],
       [9],
       [2],
       [9],
       [1],
       [2],
       [2],
       [6],
       [8],
       [2],
       [1],
       [3],
       [6],
       [6],
       [0],
       [1],
       [2],
       [7],
       [0],
       [5],
       [4],
       [6],
       [1],
       [6],
       [4],
       [0],
       [2],
       [2],
       [6],
       [0],
       [5],
       [9],
       [1],
       [7],
       [6],
       [7],
       [0],
       [3],
       [9],
       [6],
       [8],
       [3],
       [0],
       [3],
       [4],
       [7],
       [7],
       [1],
       [4],
       [7],
       [2],
       [7],
       [1],
       [4],
       [7],
       [4],
       [4],
       [8],
       [4],
       [7],
       [7],
       [5],
       [3],
       [7],
       [2],
       [0],
       [8],
       [9],
       [5],
       [8],
       [3],
       [6],
       [2],
       [0],
       [8],
       [7],
       [3],
       [7],
       [6],
       [5],
       [3],
       [1],
       [3],
       [2],
       [2],
       [5],
       [4],
       [1],
       [2],
       [9],
       [2],
       [7],
       [0],
       [7],
       [2],
       [1],
       [3],
       [2],
       [0],
       [2],
       [4],
       [7],
       [9],
       [8],
       [9],
       [0],
       [7],
       [7],
       [0],
       [7],
       [8],
       [4],
       [6],
       [3],
       [3],
       [0],
       [1],
       [3],
       [7],
       [0],
       [1],
       [3],
       [1],
       [4],
       [2],
       [3],
       [8],
       [4],
       [2],
       [3],
       [7],
       [8],
       [4],
       [3],
       [0],
       [9],
       [0],
       [0],
       [1],
       [0],
       [4],
       [4],
       [6],
       [7],
       [6],
       [1],
       [1],
       [3],
       [7],
       [3],
       [5],
       [2],
       [6],
       [6],
       [5],
       [8],
       [7],
       [1],
       [6],
       [8],
       [8],
       [5],
       [3],
       [0],
       [4],
       [0],
       [1],
       [3],
       [8],
       [8],
       [0],
       [6],
       [9],
       [9],
       [9],
       [5],
       [5],
       [8],
       [6],
       [0],
       [0],
       [4],
       [2],
       [3],
       [2],
       [7],
       [2],
       [2],
       [5],
       [9],
       [8],
       [9],
       [1],
       [7],
       [4],
       [0],
       [3],
       [0],
       [1],
       [3],
       [8],
       [3],
       [9],
       [6],
       [1],
       [4],
       [7],
       [0],
       [3],
       [7],
       [8],
       [9],
       [1],
       [1],
       [6],
       [6],
       [6],
       [6],
       [9],
       [1],
       [9],
       [9],
       [4],
       [2],
       [1],
       [7],
       [0],
       [6],
       [8],
       [1],
       [9],
       [2],
       [9],
       [0],
       [4],
       [7],
       [8],
       [3],
       [1],
       [2],
       [0],
       [1],
       [5],
       [8],
       [4],
       [6],
       [3],
       [8],
       [1],
       [3],
       [8]], dtype=uint8)}
2020-10-28 13:37:19,047 - engine_logger:INFO - Getting MNIST data.... 
2020-10-28 13:37:19,877 - engine_logger:INFO - Got MNIST data(reduced sample): {'x_train': array([[[[ 59,  62,  63],
         [ 43,  46,  45],
         [ 50,  48,  43],
         ...,
         [158, 132, 108],
         [152, 125, 102],
         [148, 124, 103]],

        [[ 16,  20,  20],
         [  0,   0,   0],
         [ 18,   8,   0],
         ...,
         [123,  88,  55],
         [119,  83,  50],
         [122,  87,  57]],

        [[ 25,  24,  21],
         [ 16,   7,   0],
         [ 49,  27,   8],
         ...,
         [118,  84,  50],
         [120,  84,  50],
         [109,  73,  42]],

        ...,

        [[208, 170,  96],
         [201, 153,  34],
         [198, 161,  26],
         ...,
         [160, 133,  70],
         [ 56,  31,   7],
         [ 53,  34,  20]],

        [[180, 139,  96],
         [173, 123,  42],
         [186, 144,  30],
         ...,
         [184, 148,  94],
         [ 97,  62,  34],
         [ 83,  53,  34]],

        [[177, 144, 116],
         [168, 129,  94],
         [179, 142,  87],
         ...,
         [216, 184, 140],
         [151, 118,  84],
         [123,  92,  72]]],


       [[[154, 177, 187],
         [126, 137, 136],
         [105, 104,  95],
         ...,
         [ 91,  95,  71],
         [ 87,  90,  71],
         [ 79,  81,  70]],

        [[140, 160, 169],
         [145, 153, 154],
         [125, 125, 118],
         ...,
         [ 96,  99,  78],
         [ 77,  80,  62],
         [ 71,  73,  61]],

        [[140, 155, 164],
         [139, 146, 149],
         [115, 115, 112],
         ...,
         [ 79,  82,  64],
         [ 68,  70,  55],
         [ 67,  69,  55]],

        ...,

        [[175, 167, 166],
         [156, 154, 160],
         [154, 160, 170],
         ...,
         [ 42,  34,  36],
         [ 61,  53,  57],
         [ 93,  83,  91]],

        [[165, 154, 128],
         [156, 152, 130],
         [159, 161, 142],
         ...,
         [103,  93,  96],
         [123, 114, 120],
         [131, 121, 131]],

        [[163, 148, 120],
         [158, 148, 122],
         [163, 156, 133],
         ...,
         [143, 133, 139],
         [143, 134, 142],
         [143, 133, 144]]],


       [[[255, 255, 255],
         [253, 253, 253],
         [253, 253, 253],
         ...,
         [253, 253, 253],
         [253, 253, 253],
         [253, 253, 253]],

        [[255, 255, 255],
         [255, 255, 255],
         [255, 255, 255],
         ...,
         [255, 255, 255],
         [255, 255, 255],
         [255, 255, 255]],

        [[255, 255, 255],
         [254, 254, 254],
         [254, 254, 254],
         ...,
         [254, 254, 254],
         [254, 254, 254],
         [254, 254, 254]],

        ...,

        [[113, 120, 112],
         [111, 118, 111],
         [105, 112, 106],
         ...,
         [ 72,  81,  80],
         [ 72,  80,  79],
         [ 72,  80,  79]],

        [[111, 118, 110],
         [104, 111, 104],
         [ 99, 106,  98],
         ...,
         [ 68,  75,  73],
         [ 70,  76,  75],
         [ 78,  84,  82]],

        [[106, 113, 105],
         [ 99, 106,  98],
         [ 95, 102,  94],
         ...,
         [ 78,  85,  83],
         [ 79,  85,  83],
         [ 80,  86,  84]]],


       ...,


       [[[167, 163, 145],
         [206, 201, 181],
         [202, 196, 177],
         ...,
         [ 91,  85,  89],
         [ 50,  64,  68],
         [ 46,  86,  90]],

        [[156, 153, 136],
         [206, 201, 181],
         [206, 199, 180],
         ...,
         [171, 166, 174],
         [ 99, 115, 123],
         [ 48,  88,  94]],

        [[147, 143, 128],
         [192, 186, 167],
         [206, 198, 177],
         ...,
         [173, 176, 186],
         [106, 130, 140],
         [ 48,  90,  96]],

        ...,

        [[144, 156, 151],
         [145, 153, 148],
         [152, 160, 156],
         ...,
         [ 45,  85,  91],
         [ 41,  78,  85],
         [ 47,  88,  94]],

        [[143, 155, 150],
         [148, 157, 154],
         [156, 167, 167],
         ...,
         [ 32,  56,  65],
         [ 31,  58,  66],
         [ 34,  66,  73]],

        [[139, 154, 149],
         [144, 157, 155],
         [140, 157, 159],
         ...,
         [ 39,  75,  81],
         [ 42,  82,  87],
         [ 42,  78,  84]]],


       [[[154, 152, 125],
         [156, 154, 130],
         [149, 146, 125],
         ...,
         [156, 154, 110],
         [131, 130,  97],
         [154, 149, 111]],

        [[163, 150, 111],
         [178, 167, 125],
         [179, 168, 126],
         ...,
         [185, 175, 127],
         [166, 165, 118],
         [168, 164, 117]],

        [[198, 184, 126],
         [188, 173, 117],
         [193, 179, 121],
         ...,
         [188, 166, 118],
         [184, 172, 126],
         [183, 179, 128]],

        ...,

        [[187, 185, 132],
         [175, 175, 129],
         [162, 162, 109],
         ...,
         [201, 217, 129],
         [200, 220, 129],
         [190, 205, 118]],

        [[157, 160, 109],
         [147, 153, 104],
         [144, 157,  98],
         ...,
         [213, 232, 134],
         [191, 227, 117],
         [173, 216, 105]],

        [[153, 150, 102],
         [150, 159,  99],
         [173, 195, 124],
         ...,
         [195, 234, 113],
         [187, 237, 108],
         [194, 247, 114]]],


       [[[ 45,  32,  21],
         [ 48,  34,  21],
         [ 66,  54,  41],
         ...,
         [ 19,   9,   7],
         [ 23,  14,  10],
         [ 20,  10,   8]],

        [[ 47,  33,  21],
         [ 50,  35,  22],
         [ 71,  58,  44],
         ...,
         [ 22,  10,   8],
         [ 22,  11,  10],
         [ 19,   8,   7]],

        [[ 47,  35,  22],
         [ 54,  40,  24],
         [ 63,  50,  35],
         ...,
         [ 24,  10,   7],
         [ 18,   6,   6],
         [ 18,   7,   6]],

        ...,

        [[109, 105,  66],
         [113, 108,  68],
         [115, 106,  67],
         ...,
         [103,  87,  55],
         [ 85,  75,  43],
         [ 97,  85,  52]],

        [[ 96,  90,  53],
         [114, 106,  69],
         [111, 102,  64],
         ...,
         [164, 146, 104],
         [154, 135,  89],
         [152, 139,  97]],

        [[ 97,  91,  52],
         [ 85,  79,  40],
         [105,  99,  57],
         ...,
         [161, 148, 108],
         [156, 137,  93],
         [156, 142, 100]]]], dtype=uint8), 'y_train': array([[6],
       [9],
       [9],
       ...,
       [5],
       [4],
       [6]], dtype=uint8), 'x_test': array([[[[158, 112,  49],
         [159, 111,  47],
         [165, 116,  51],
         ...,
         [137,  95,  36],
         [126,  91,  36],
         [116,  85,  33]],

        [[152, 112,  51],
         [151, 110,  40],
         [159, 114,  45],
         ...,
         [136,  95,  31],
         [125,  91,  32],
         [119,  88,  34]],

        [[151, 110,  47],
         [151, 109,  33],
         [158, 111,  36],
         ...,
         [139,  98,  34],
         [130,  95,  34],
         [120,  89,  33]],

        ...,

        [[ 68, 124, 177],
         [ 42, 100, 148],
         [ 31,  88, 137],
         ...,
         [ 38,  97, 146],
         [ 13,  64, 108],
         [ 40,  85, 127]],

        [[ 61, 116, 168],
         [ 49, 102, 148],
         [ 35,  85, 132],
         ...,
         [ 26,  82, 130],
         [ 29,  82, 126],
         [ 20,  64, 107]],

        [[ 54, 107, 160],
         [ 56, 105, 149],
         [ 45,  89, 132],
         ...,
         [ 24,  77, 124],
         [ 34,  84, 129],
         [ 21,  67, 110]]],


       [[[235, 235, 235],
         [231, 231, 231],
         [232, 232, 232],
         ...,
         [233, 233, 233],
         [233, 233, 233],
         [232, 232, 232]],

        [[238, 238, 238],
         [235, 235, 235],
         [235, 235, 235],
         ...,
         [236, 236, 236],
         [236, 236, 236],
         [235, 235, 235]],

        [[237, 237, 237],
         [234, 234, 234],
         [234, 234, 234],
         ...,
         [235, 235, 235],
         [235, 235, 235],
         [234, 234, 234]],

        ...,

        [[ 87,  99,  89],
         [ 43,  51,  37],
         [ 19,  23,  11],
         ...,
         [169, 184, 179],
         [182, 197, 193],
         [188, 202, 201]],

        [[ 82,  96,  82],
         [ 46,  57,  36],
         [ 36,  44,  22],
         ...,
         [174, 189, 183],
         [185, 200, 196],
         [187, 202, 200]],

        [[ 85, 101,  83],
         [ 62,  75,  48],
         [ 58,  67,  38],
         ...,
         [168, 183, 178],
         [180, 195, 191],
         [186, 200, 199]]],


       [[[158, 190, 222],
         [158, 187, 218],
         [139, 166, 194],
         ...,
         [228, 231, 234],
         [237, 239, 243],
         [238, 241, 246]],

        [[170, 200, 229],
         [172, 199, 226],
         [151, 176, 201],
         ...,
         [232, 232, 236],
         [246, 246, 250],
         [246, 247, 251]],

        [[174, 201, 225],
         [176, 200, 222],
         [157, 179, 199],
         ...,
         [230, 229, 232],
         [250, 249, 251],
         [245, 244, 247]],

        ...,

        [[ 31,  40,  45],
         [ 30,  39,  44],
         [ 26,  35,  40],
         ...,
         [ 37,  40,  46],
         [  9,  13,  14],
         [  4,   7,   5]],

        [[ 23,  34,  39],
         [ 27,  38,  43],
         [ 25,  36,  41],
         ...,
         [ 19,  20,  24],
         [  4,   6,   3],
         [  5,   7,   3]],

        [[ 28,  41,  47],
         [ 30,  43,  50],
         [ 32,  45,  52],
         ...,
         [  5,   6,   8],
         [  4,   5,   3],
         [  7,   8,   7]]],


       ...,


       [[[103, 124, 101],
         [124, 149, 120],
         [ 73,  98,  73],
         ...,
         [ 17,  25,  16],
         [ 10,  15,   9],
         [ 15,  19,  13]],

        [[162, 175, 148],
         [122, 137, 107],
         [111, 126, 103],
         ...,
         [ 28,  38,  25],
         [ 18,  22,  16],
         [ 11,  12,   8]],

        [[226, 236, 200],
         [209, 217, 183],
         [204, 216, 161],
         ...,
         [ 21,  29,  18],
         [ 19,  24,  17],
         [ 14,  17,  11]],

        ...,

        [[132, 134, 145],
         [126, 128, 138],
         [127, 127, 139],
         ...,
         [ 43,  36,  33],
         [ 64,  46,  31],
         [ 88,  53,  32]],

        [[125, 123, 134],
         [123, 122, 132],
         [121, 120, 132],
         ...,
         [ 41,  42,  43],
         [ 52,  39,  35],
         [ 87,  56,  43]],

        [[121, 119, 131],
         [119, 117, 129],
         [118, 118, 130],
         ...,
         [ 48,  49,  53],
         [ 53,  48,  50],
         [ 67,  42,  37]]],


       [[[ 77, 114,  33],
         [ 72, 111,  25],
         [ 76, 110,  34],
         ...,
         [ 59,  64,  46],
         [ 56,  58,  42],
         [ 56,  58,  40]],

        [[ 74, 107,  34],
         [ 71,  93,  31],
         [ 80, 102,  39],
         ...,
         [ 52,  55,  44],
         [ 57,  60,  45],
         [ 54,  58,  39]],

        [[ 80, 101,  38],
         [ 84,  98,  43],
         [ 74,  95,  32],
         ...,
         [ 50,  55,  51],
         [ 50,  55,  50],
         [ 61,  67,  59]],

        ...,

        [[ 65,  92,  26],
         [ 63,  84,  24],
         [ 52,  77,  20],
         ...,
         [ 84,  82,  68],
         [ 56,  57,  48],
         [ 28,  33,  24]],

        [[ 70,  89,  26],
         [ 77,  89,  32],
         [ 60,  92,  30],
         ...,
         [ 77,  77,  66],
         [ 39,  39,  35],
         [ 32,  39,  28]],

        [[ 48,  73,  12],
         [ 57,  71,  21],
         [ 56,  85,  30],
         ...,
         [ 51,  53,  47],
         [ 24,  27,  22],
         [ 35,  44,  30]]],


       [[[175, 180, 174],
         [176, 181, 175],
         [181, 186, 180],
         ...,
         [193, 207, 210],
         [190, 204, 207],
         [188, 202, 205]],

        [[177, 182, 176],
         [179, 184, 178],
         [183, 188, 182],
         ...,
         [196, 210, 213],
         [192, 206, 209],
         [191, 205, 208]],

        [[176, 181, 175],
         [177, 182, 176],
         [182, 187, 181],
         ...,
         [194, 208, 211],
         [191, 205, 208],
         [189, 203, 206]],

        ...,

        [[122, 121, 129],
         [117, 118, 129],
         [114, 118, 130],
         ...,
         [ 58,  73,  91],
         [ 81,  97, 118],
         [ 99, 118, 141]],

        [[116, 115, 123],
         [110, 111, 121],
         [107, 111, 123],
         ...,
         [ 57,  70,  88],
         [ 78,  93, 113],
         [100, 117, 140]],

        [[113, 112, 119],
         [106, 107, 117],
         [105, 109, 121],
         ...,
         [ 57,  68,  85],
         [ 71,  85, 103],
         [ 93, 110, 131]]]], dtype=uint8), 'y_test': array([[3],
       [8],
       [8],
       [0],
       [6],
       [6],
       [1],
       [6],
       [3],
       [1],
       [0],
       [9],
       [5],
       [7],
       [9],
       [8],
       [5],
       [7],
       [8],
       [6],
       [7],
       [0],
       [4],
       [9],
       [5],
       [2],
       [4],
       [0],
       [9],
       [6],
       [6],
       [5],
       [4],
       [5],
       [9],
       [2],
       [4],
       [1],
       [9],
       [5],
       [4],
       [6],
       [5],
       [6],
       [0],
       [9],
       [3],
       [9],
       [7],
       [6],
       [9],
       [8],
       [0],
       [3],
       [8],
       [8],
       [7],
       [7],
       [4],
       [6],
       [7],
       [3],
       [6],
       [3],
       [6],
       [2],
       [1],
       [2],
       [3],
       [7],
       [2],
       [6],
       [8],
       [8],
       [0],
       [2],
       [9],
       [3],
       [3],
       [8],
       [8],
       [1],
       [1],
       [7],
       [2],
       [5],
       [2],
       [7],
       [8],
       [9],
       [0],
       [3],
       [8],
       [6],
       [4],
       [6],
       [6],
       [0],
       [0],
       [7],
       [4],
       [5],
       [6],
       [3],
       [1],
       [1],
       [3],
       [6],
       [8],
       [7],
       [4],
       [0],
       [6],
       [2],
       [1],
       [3],
       [0],
       [4],
       [2],
       [7],
       [8],
       [3],
       [1],
       [2],
       [8],
       [0],
       [8],
       [3],
       [5],
       [2],
       [4],
       [1],
       [8],
       [9],
       [1],
       [2],
       [9],
       [7],
       [2],
       [9],
       [6],
       [5],
       [6],
       [3],
       [8],
       [7],
       [6],
       [2],
       [5],
       [2],
       [8],
       [9],
       [6],
       [0],
       [0],
       [5],
       [2],
       [9],
       [5],
       [4],
       [2],
       [1],
       [6],
       [6],
       [8],
       [4],
       [8],
       [4],
       [5],
       [0],
       [9],
       [9],
       [9],
       [8],
       [9],
       [9],
       [3],
       [7],
       [5],
       [0],
       [0],
       [5],
       [2],
       [2],
       [3],
       [8],
       [6],
       [3],
       [4],
       [0],
       [5],
       [8],
       [0],
       [1],
       [7],
       [2],
       [8],
       [8],
       [7],
       [8],
       [5],
       [1],
       [8],
       [7],
       [1],
       [3],
       [0],
       [5],
       [7],
       [9],
       [7],
       [4],
       [5],
       [9],
       [8],
       [0],
       [7],
       [9],
       [8],
       [2],
       [7],
       [6],
       [9],
       [4],
       [3],
       [9],
       [6],
       [4],
       [7],
       [6],
       [5],
       [1],
       [5],
       [8],
       [8],
       [0],
       [4],
       [0],
       [5],
       [5],
       [1],
       [1],
       [8],
       [9],
       [0],
       [3],
       [1],
       [9],
       [2],
       [2],
       [5],
       [3],
       [9],
       [9],
       [4],
       [0],
       [3],
       [0],
       [0],
       [9],
       [8],
       [1],
       [5],
       [7],
       [0],
       [8],
       [2],
       [4],
       [7],
       [0],
       [2],
       [3],
       [6],
       [3],
       [8],
       [5],
       [0],
       [3],
       [4],
       [3],
       [9],
       [0],
       [6],
       [1],
       [0],
       [9],
       [1],
       [0],
       [7],
       [9],
       [1],
       [2],
       [6],
       [9],
       [3],
       [4],
       [6],
       [0],
       [0],
       [6],
       [6],
       [6],
       [3],
       [2],
       [6],
       [1],
       [8],
       [2],
       [1],
       [6],
       [8],
       [6],
       [8],
       [0],
       [4],
       [0],
       [7],
       [7],
       [5],
       [5],
       [3],
       [5],
       [2],
       [3],
       [4],
       [1],
       [7],
       [5],
       [4],
       [6],
       [1],
       [9],
       [3],
       [6],
       [6],
       [9],
       [3],
       [8],
       [0],
       [7],
       [2],
       [6],
       [2],
       [5],
       [8],
       [5],
       [4],
       [6],
       [8],
       [9],
       [9],
       [1],
       [0],
       [2],
       [2],
       [7],
       [3],
       [2],
       [8],
       [0],
       [9],
       [5],
       [8],
       [1],
       [9],
       [4],
       [1],
       [3],
       [8],
       [1],
       [4],
       [7],
       [9],
       [4],
       [2],
       [7],
       [0],
       [7],
       [0],
       [6],
       [6],
       [9],
       [0],
       [9],
       [2],
       [8],
       [7],
       [2],
       [2],
       [5],
       [1],
       [2],
       [6],
       [2],
       [9],
       [6],
       [2],
       [3],
       [0],
       [3],
       [9],
       [8],
       [7],
       [8],
       [8],
       [4],
       [0],
       [1],
       [8],
       [2],
       [7],
       [9],
       [3],
       [6],
       [1],
       [9],
       [0],
       [7],
       [3],
       [7],
       [4],
       [5],
       [0],
       [0],
       [2],
       [9],
       [3],
       [4],
       [0],
       [6],
       [2],
       [5],
       [3],
       [7],
       [3],
       [7],
       [2],
       [5],
       [3],
       [1],
       [1],
       [4],
       [9],
       [9],
       [5],
       [7],
       [5],
       [0],
       [2],
       [2],
       [2],
       [9],
       [7],
       [3],
       [9],
       [4],
       [3],
       [5],
       [4],
       [6],
       [5],
       [6],
       [1],
       [4],
       [3],
       [4],
       [4],
       [3],
       [7],
       [8],
       [3],
       [7],
       [8],
       [0],
       [5],
       [7],
       [6],
       [0],
       [5],
       [4],
       [8],
       [6],
       [8],
       [5],
       [5],
       [9],
       [9],
       [9],
       [5],
       [0],
       [1],
       [0],
       [8],
       [1],
       [1],
       [8],
       [0],
       [2],
       [2],
       [0],
       [4],
       [6],
       [5],
       [4],
       [9],
       [4],
       [7],
       [9],
       [9],
       [4],
       [5],
       [6],
       [6],
       [1],
       [5],
       [3],
       [8],
       [9],
       [5],
       [8],
       [5],
       [7],
       [0],
       [7],
       [0],
       [5],
       [0],
       [0],
       [4],
       [6],
       [9],
       [0],
       [9],
       [5],
       [6],
       [6],
       [6],
       [2],
       [9],
       [0],
       [1],
       [7],
       [6],
       [7],
       [5],
       [9],
       [1],
       [6],
       [2],
       [5],
       [5],
       [5],
       [8],
       [5],
       [9],
       [4],
       [6],
       [4],
       [3],
       [2],
       [0],
       [7],
       [6],
       [2],
       [2],
       [3],
       [9],
       [7],
       [9],
       [2],
       [6],
       [7],
       [1],
       [3],
       [6],
       [6],
       [8],
       [9],
       [7],
       [5],
       [4],
       [0],
       [8],
       [4],
       [0],
       [9],
       [3],
       [4],
       [8],
       [9],
       [6],
       [9],
       [2],
       [6],
       [1],
       [4],
       [7],
       [3],
       [5],
       [3],
       [8],
       [5],
       [0],
       [2],
       [1],
       [6],
       [4],
       [3],
       [3],
       [9],
       [6],
       [9],
       [8],
       [8],
       [5],
       [8],
       [6],
       [6],
       [2],
       [1],
       [7],
       [7],
       [1],
       [2],
       [7],
       [9],
       [9],
       [4],
       [4],
       [1],
       [2],
       [5],
       [6],
       [8],
       [7],
       [6],
       [8],
       [3],
       [0],
       [5],
       [5],
       [3],
       [0],
       [7],
       [9],
       [1],
       [3],
       [4],
       [4],
       [5],
       [3],
       [9],
       [5],
       [6],
       [9],
       [2],
       [1],
       [1],
       [4],
       [1],
       [9],
       [4],
       [7],
       [6],
       [3],
       [8],
       [9],
       [0],
       [1],
       [3],
       [6],
       [3],
       [6],
       [3],
       [2],
       [0],
       [3],
       [1],
       [0],
       [5],
       [9],
       [6],
       [4],
       [8],
       [9],
       [6],
       [9],
       [6],
       [3],
       [0],
       [3],
       [2],
       [2],
       [7],
       [8],
       [3],
       [8],
       [2],
       [7],
       [5],
       [7],
       [2],
       [4],
       [8],
       [7],
       [4],
       [2],
       [9],
       [8],
       [8],
       [6],
       [8],
       [8],
       [7],
       [4],
       [3],
       [3],
       [8],
       [4],
       [9],
       [4],
       [8],
       [8],
       [1],
       [8],
       [2],
       [1],
       [3],
       [6],
       [5],
       [4],
       [2],
       [7],
       [9],
       [9],
       [4],
       [1],
       [4],
       [1],
       [3],
       [2],
       [7],
       [0],
       [7],
       [9],
       [7],
       [6],
       [6],
       [2],
       [5],
       [9],
       [2],
       [9],
       [1],
       [2],
       [2],
       [6],
       [8],
       [2],
       [1],
       [3],
       [6],
       [6],
       [0],
       [1],
       [2],
       [7],
       [0],
       [5],
       [4],
       [6],
       [1],
       [6],
       [4],
       [0],
       [2],
       [2],
       [6],
       [0],
       [5],
       [9],
       [1],
       [7],
       [6],
       [7],
       [0],
       [3],
       [9],
       [6],
       [8],
       [3],
       [0],
       [3],
       [4],
       [7],
       [7],
       [1],
       [4],
       [7],
       [2],
       [7],
       [1],
       [4],
       [7],
       [4],
       [4],
       [8],
       [4],
       [7],
       [7],
       [5],
       [3],
       [7],
       [2],
       [0],
       [8],
       [9],
       [5],
       [8],
       [3],
       [6],
       [2],
       [0],
       [8],
       [7],
       [3],
       [7],
       [6],
       [5],
       [3],
       [1],
       [3],
       [2],
       [2],
       [5],
       [4],
       [1],
       [2],
       [9],
       [2],
       [7],
       [0],
       [7],
       [2],
       [1],
       [3],
       [2],
       [0],
       [2],
       [4],
       [7],
       [9],
       [8],
       [9],
       [0],
       [7],
       [7],
       [0],
       [7],
       [8],
       [4],
       [6],
       [3],
       [3],
       [0],
       [1],
       [3],
       [7],
       [0],
       [1],
       [3],
       [1],
       [4],
       [2],
       [3],
       [8],
       [4],
       [2],
       [3],
       [7],
       [8],
       [4],
       [3],
       [0],
       [9],
       [0],
       [0],
       [1],
       [0],
       [4],
       [4],
       [6],
       [7],
       [6],
       [1],
       [1],
       [3],
       [7],
       [3],
       [5],
       [2],
       [6],
       [6],
       [5],
       [8],
       [7],
       [1],
       [6],
       [8],
       [8],
       [5],
       [3],
       [0],
       [4],
       [0],
       [1],
       [3],
       [8],
       [8],
       [0],
       [6],
       [9],
       [9],
       [9],
       [5],
       [5],
       [8],
       [6],
       [0],
       [0],
       [4],
       [2],
       [3],
       [2],
       [7],
       [2],
       [2],
       [5],
       [9],
       [8],
       [9],
       [1],
       [7],
       [4],
       [0],
       [3],
       [0],
       [1],
       [3],
       [8],
       [3],
       [9],
       [6],
       [1],
       [4],
       [7],
       [0],
       [3],
       [7],
       [8],
       [9],
       [1],
       [1],
       [6],
       [6],
       [6],
       [6],
       [9],
       [1],
       [9],
       [9],
       [4],
       [2],
       [1],
       [7],
       [0],
       [6],
       [8],
       [1],
       [9],
       [2],
       [9],
       [0],
       [4],
       [7],
       [8],
       [3],
       [1],
       [2],
       [0],
       [1],
       [5],
       [8],
       [4],
       [6],
       [3],
       [8],
       [1],
       [3],
       [8]], dtype=uint8)}
2020-10-28 13:37:19,904 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 13:37:20,954 - engine_logger:INFO - Getting MNIST data.... 
2020-10-28 13:37:21,782 - engine_logger:INFO - Got MNIST data(reduced sample): {'x_train': array([[[[ 59,  62,  63],
         [ 43,  46,  45],
         [ 50,  48,  43],
         ...,
         [158, 132, 108],
         [152, 125, 102],
         [148, 124, 103]],

        [[ 16,  20,  20],
         [  0,   0,   0],
         [ 18,   8,   0],
         ...,
         [123,  88,  55],
         [119,  83,  50],
         [122,  87,  57]],

        [[ 25,  24,  21],
         [ 16,   7,   0],
         [ 49,  27,   8],
         ...,
         [118,  84,  50],
         [120,  84,  50],
         [109,  73,  42]],

        ...,

        [[208, 170,  96],
         [201, 153,  34],
         [198, 161,  26],
         ...,
         [160, 133,  70],
         [ 56,  31,   7],
         [ 53,  34,  20]],

        [[180, 139,  96],
         [173, 123,  42],
         [186, 144,  30],
         ...,
         [184, 148,  94],
         [ 97,  62,  34],
         [ 83,  53,  34]],

        [[177, 144, 116],
         [168, 129,  94],
         [179, 142,  87],
         ...,
         [216, 184, 140],
         [151, 118,  84],
         [123,  92,  72]]],


       [[[154, 177, 187],
         [126, 137, 136],
         [105, 104,  95],
         ...,
         [ 91,  95,  71],
         [ 87,  90,  71],
         [ 79,  81,  70]],

        [[140, 160, 169],
         [145, 153, 154],
         [125, 125, 118],
         ...,
         [ 96,  99,  78],
         [ 77,  80,  62],
         [ 71,  73,  61]],

        [[140, 155, 164],
         [139, 146, 149],
         [115, 115, 112],
         ...,
         [ 79,  82,  64],
         [ 68,  70,  55],
         [ 67,  69,  55]],

        ...,

        [[175, 167, 166],
         [156, 154, 160],
         [154, 160, 170],
         ...,
         [ 42,  34,  36],
         [ 61,  53,  57],
         [ 93,  83,  91]],

        [[165, 154, 128],
         [156, 152, 130],
         [159, 161, 142],
         ...,
         [103,  93,  96],
         [123, 114, 120],
         [131, 121, 131]],

        [[163, 148, 120],
         [158, 148, 122],
         [163, 156, 133],
         ...,
         [143, 133, 139],
         [143, 134, 142],
         [143, 133, 144]]],


       [[[255, 255, 255],
         [253, 253, 253],
         [253, 253, 253],
         ...,
         [253, 253, 253],
         [253, 253, 253],
         [253, 253, 253]],

        [[255, 255, 255],
         [255, 255, 255],
         [255, 255, 255],
         ...,
         [255, 255, 255],
         [255, 255, 255],
         [255, 255, 255]],

        [[255, 255, 255],
         [254, 254, 254],
         [254, 254, 254],
         ...,
         [254, 254, 254],
         [254, 254, 254],
         [254, 254, 254]],

        ...,

        [[113, 120, 112],
         [111, 118, 111],
         [105, 112, 106],
         ...,
         [ 72,  81,  80],
         [ 72,  80,  79],
         [ 72,  80,  79]],

        [[111, 118, 110],
         [104, 111, 104],
         [ 99, 106,  98],
         ...,
         [ 68,  75,  73],
         [ 70,  76,  75],
         [ 78,  84,  82]],

        [[106, 113, 105],
         [ 99, 106,  98],
         [ 95, 102,  94],
         ...,
         [ 78,  85,  83],
         [ 79,  85,  83],
         [ 80,  86,  84]]],


       ...,


       [[[167, 163, 145],
         [206, 201, 181],
         [202, 196, 177],
         ...,
         [ 91,  85,  89],
         [ 50,  64,  68],
         [ 46,  86,  90]],

        [[156, 153, 136],
         [206, 201, 181],
         [206, 199, 180],
         ...,
         [171, 166, 174],
         [ 99, 115, 123],
         [ 48,  88,  94]],

        [[147, 143, 128],
         [192, 186, 167],
         [206, 198, 177],
         ...,
         [173, 176, 186],
         [106, 130, 140],
         [ 48,  90,  96]],

        ...,

        [[144, 156, 151],
         [145, 153, 148],
         [152, 160, 156],
         ...,
         [ 45,  85,  91],
         [ 41,  78,  85],
         [ 47,  88,  94]],

        [[143, 155, 150],
         [148, 157, 154],
         [156, 167, 167],
         ...,
         [ 32,  56,  65],
         [ 31,  58,  66],
         [ 34,  66,  73]],

        [[139, 154, 149],
         [144, 157, 155],
         [140, 157, 159],
         ...,
         [ 39,  75,  81],
         [ 42,  82,  87],
         [ 42,  78,  84]]],


       [[[154, 152, 125],
         [156, 154, 130],
         [149, 146, 125],
         ...,
         [156, 154, 110],
         [131, 130,  97],
         [154, 149, 111]],

        [[163, 150, 111],
         [178, 167, 125],
         [179, 168, 126],
         ...,
         [185, 175, 127],
         [166, 165, 118],
         [168, 164, 117]],

        [[198, 184, 126],
         [188, 173, 117],
         [193, 179, 121],
         ...,
         [188, 166, 118],
         [184, 172, 126],
         [183, 179, 128]],

        ...,

        [[187, 185, 132],
         [175, 175, 129],
         [162, 162, 109],
         ...,
         [201, 217, 129],
         [200, 220, 129],
         [190, 205, 118]],

        [[157, 160, 109],
         [147, 153, 104],
         [144, 157,  98],
         ...,
         [213, 232, 134],
         [191, 227, 117],
         [173, 216, 105]],

        [[153, 150, 102],
         [150, 159,  99],
         [173, 195, 124],
         ...,
         [195, 234, 113],
         [187, 237, 108],
         [194, 247, 114]]],


       [[[ 45,  32,  21],
         [ 48,  34,  21],
         [ 66,  54,  41],
         ...,
         [ 19,   9,   7],
         [ 23,  14,  10],
         [ 20,  10,   8]],

        [[ 47,  33,  21],
         [ 50,  35,  22],
         [ 71,  58,  44],
         ...,
         [ 22,  10,   8],
         [ 22,  11,  10],
         [ 19,   8,   7]],

        [[ 47,  35,  22],
         [ 54,  40,  24],
         [ 63,  50,  35],
         ...,
         [ 24,  10,   7],
         [ 18,   6,   6],
         [ 18,   7,   6]],

        ...,

        [[109, 105,  66],
         [113, 108,  68],
         [115, 106,  67],
         ...,
         [103,  87,  55],
         [ 85,  75,  43],
         [ 97,  85,  52]],

        [[ 96,  90,  53],
         [114, 106,  69],
         [111, 102,  64],
         ...,
         [164, 146, 104],
         [154, 135,  89],
         [152, 139,  97]],

        [[ 97,  91,  52],
         [ 85,  79,  40],
         [105,  99,  57],
         ...,
         [161, 148, 108],
         [156, 137,  93],
         [156, 142, 100]]]], dtype=uint8), 'y_train': array([[6],
       [9],
       [9],
       ...,
       [5],
       [4],
       [6]], dtype=uint8), 'x_test': array([[[[158, 112,  49],
         [159, 111,  47],
         [165, 116,  51],
         ...,
         [137,  95,  36],
         [126,  91,  36],
         [116,  85,  33]],

        [[152, 112,  51],
         [151, 110,  40],
         [159, 114,  45],
         ...,
         [136,  95,  31],
         [125,  91,  32],
         [119,  88,  34]],

        [[151, 110,  47],
         [151, 109,  33],
         [158, 111,  36],
         ...,
         [139,  98,  34],
         [130,  95,  34],
         [120,  89,  33]],

        ...,

        [[ 68, 124, 177],
         [ 42, 100, 148],
         [ 31,  88, 137],
         ...,
         [ 38,  97, 146],
         [ 13,  64, 108],
         [ 40,  85, 127]],

        [[ 61, 116, 168],
         [ 49, 102, 148],
         [ 35,  85, 132],
         ...,
         [ 26,  82, 130],
         [ 29,  82, 126],
         [ 20,  64, 107]],

        [[ 54, 107, 160],
         [ 56, 105, 149],
         [ 45,  89, 132],
         ...,
         [ 24,  77, 124],
         [ 34,  84, 129],
         [ 21,  67, 110]]],


       [[[235, 235, 235],
         [231, 231, 231],
         [232, 232, 232],
         ...,
         [233, 233, 233],
         [233, 233, 233],
         [232, 232, 232]],

        [[238, 238, 238],
         [235, 235, 235],
         [235, 235, 235],
         ...,
         [236, 236, 236],
         [236, 236, 236],
         [235, 235, 235]],

        [[237, 237, 237],
         [234, 234, 234],
         [234, 234, 234],
         ...,
         [235, 235, 235],
         [235, 235, 235],
         [234, 234, 234]],

        ...,

        [[ 87,  99,  89],
         [ 43,  51,  37],
         [ 19,  23,  11],
         ...,
         [169, 184, 179],
         [182, 197, 193],
         [188, 202, 201]],

        [[ 82,  96,  82],
         [ 46,  57,  36],
         [ 36,  44,  22],
         ...,
         [174, 189, 183],
         [185, 200, 196],
         [187, 202, 200]],

        [[ 85, 101,  83],
         [ 62,  75,  48],
         [ 58,  67,  38],
         ...,
         [168, 183, 178],
         [180, 195, 191],
         [186, 200, 199]]],


       [[[158, 190, 222],
         [158, 187, 218],
         [139, 166, 194],
         ...,
         [228, 231, 234],
         [237, 239, 243],
         [238, 241, 246]],

        [[170, 200, 229],
         [172, 199, 226],
         [151, 176, 201],
         ...,
         [232, 232, 236],
         [246, 246, 250],
         [246, 247, 251]],

        [[174, 201, 225],
         [176, 200, 222],
         [157, 179, 199],
         ...,
         [230, 229, 232],
         [250, 249, 251],
         [245, 244, 247]],

        ...,

        [[ 31,  40,  45],
         [ 30,  39,  44],
         [ 26,  35,  40],
         ...,
         [ 37,  40,  46],
         [  9,  13,  14],
         [  4,   7,   5]],

        [[ 23,  34,  39],
         [ 27,  38,  43],
         [ 25,  36,  41],
         ...,
         [ 19,  20,  24],
         [  4,   6,   3],
         [  5,   7,   3]],

        [[ 28,  41,  47],
         [ 30,  43,  50],
         [ 32,  45,  52],
         ...,
         [  5,   6,   8],
         [  4,   5,   3],
         [  7,   8,   7]]],


       ...,


       [[[103, 124, 101],
         [124, 149, 120],
         [ 73,  98,  73],
         ...,
         [ 17,  25,  16],
         [ 10,  15,   9],
         [ 15,  19,  13]],

        [[162, 175, 148],
         [122, 137, 107],
         [111, 126, 103],
         ...,
         [ 28,  38,  25],
         [ 18,  22,  16],
         [ 11,  12,   8]],

        [[226, 236, 200],
         [209, 217, 183],
         [204, 216, 161],
         ...,
         [ 21,  29,  18],
         [ 19,  24,  17],
         [ 14,  17,  11]],

        ...,

        [[132, 134, 145],
         [126, 128, 138],
         [127, 127, 139],
         ...,
         [ 43,  36,  33],
         [ 64,  46,  31],
         [ 88,  53,  32]],

        [[125, 123, 134],
         [123, 122, 132],
         [121, 120, 132],
         ...,
         [ 41,  42,  43],
         [ 52,  39,  35],
         [ 87,  56,  43]],

        [[121, 119, 131],
         [119, 117, 129],
         [118, 118, 130],
         ...,
         [ 48,  49,  53],
         [ 53,  48,  50],
         [ 67,  42,  37]]],


       [[[ 77, 114,  33],
         [ 72, 111,  25],
         [ 76, 110,  34],
         ...,
         [ 59,  64,  46],
         [ 56,  58,  42],
         [ 56,  58,  40]],

        [[ 74, 107,  34],
         [ 71,  93,  31],
         [ 80, 102,  39],
         ...,
         [ 52,  55,  44],
         [ 57,  60,  45],
         [ 54,  58,  39]],

        [[ 80, 101,  38],
         [ 84,  98,  43],
         [ 74,  95,  32],
         ...,
         [ 50,  55,  51],
         [ 50,  55,  50],
         [ 61,  67,  59]],

        ...,

        [[ 65,  92,  26],
         [ 63,  84,  24],
         [ 52,  77,  20],
         ...,
         [ 84,  82,  68],
         [ 56,  57,  48],
         [ 28,  33,  24]],

        [[ 70,  89,  26],
         [ 77,  89,  32],
         [ 60,  92,  30],
         ...,
         [ 77,  77,  66],
         [ 39,  39,  35],
         [ 32,  39,  28]],

        [[ 48,  73,  12],
         [ 57,  71,  21],
         [ 56,  85,  30],
         ...,
         [ 51,  53,  47],
         [ 24,  27,  22],
         [ 35,  44,  30]]],


       [[[175, 180, 174],
         [176, 181, 175],
         [181, 186, 180],
         ...,
         [193, 207, 210],
         [190, 204, 207],
         [188, 202, 205]],

        [[177, 182, 176],
         [179, 184, 178],
         [183, 188, 182],
         ...,
         [196, 210, 213],
         [192, 206, 209],
         [191, 205, 208]],

        [[176, 181, 175],
         [177, 182, 176],
         [182, 187, 181],
         ...,
         [194, 208, 211],
         [191, 205, 208],
         [189, 203, 206]],

        ...,

        [[122, 121, 129],
         [117, 118, 129],
         [114, 118, 130],
         ...,
         [ 58,  73,  91],
         [ 81,  97, 118],
         [ 99, 118, 141]],

        [[116, 115, 123],
         [110, 111, 121],
         [107, 111, 123],
         ...,
         [ 57,  70,  88],
         [ 78,  93, 113],
         [100, 117, 140]],

        [[113, 112, 119],
         [106, 107, 117],
         [105, 109, 121],
         ...,
         [ 57,  68,  85],
         [ 71,  85, 103],
         [ 93, 110, 131]]]], dtype=uint8), 'y_test': array([[3],
       [8],
       [8],
       [0],
       [6],
       [6],
       [1],
       [6],
       [3],
       [1],
       [0],
       [9],
       [5],
       [7],
       [9],
       [8],
       [5],
       [7],
       [8],
       [6],
       [7],
       [0],
       [4],
       [9],
       [5],
       [2],
       [4],
       [0],
       [9],
       [6],
       [6],
       [5],
       [4],
       [5],
       [9],
       [2],
       [4],
       [1],
       [9],
       [5],
       [4],
       [6],
       [5],
       [6],
       [0],
       [9],
       [3],
       [9],
       [7],
       [6],
       [9],
       [8],
       [0],
       [3],
       [8],
       [8],
       [7],
       [7],
       [4],
       [6],
       [7],
       [3],
       [6],
       [3],
       [6],
       [2],
       [1],
       [2],
       [3],
       [7],
       [2],
       [6],
       [8],
       [8],
       [0],
       [2],
       [9],
       [3],
       [3],
       [8],
       [8],
       [1],
       [1],
       [7],
       [2],
       [5],
       [2],
       [7],
       [8],
       [9],
       [0],
       [3],
       [8],
       [6],
       [4],
       [6],
       [6],
       [0],
       [0],
       [7],
       [4],
       [5],
       [6],
       [3],
       [1],
       [1],
       [3],
       [6],
       [8],
       [7],
       [4],
       [0],
       [6],
       [2],
       [1],
       [3],
       [0],
       [4],
       [2],
       [7],
       [8],
       [3],
       [1],
       [2],
       [8],
       [0],
       [8],
       [3],
       [5],
       [2],
       [4],
       [1],
       [8],
       [9],
       [1],
       [2],
       [9],
       [7],
       [2],
       [9],
       [6],
       [5],
       [6],
       [3],
       [8],
       [7],
       [6],
       [2],
       [5],
       [2],
       [8],
       [9],
       [6],
       [0],
       [0],
       [5],
       [2],
       [9],
       [5],
       [4],
       [2],
       [1],
       [6],
       [6],
       [8],
       [4],
       [8],
       [4],
       [5],
       [0],
       [9],
       [9],
       [9],
       [8],
       [9],
       [9],
       [3],
       [7],
       [5],
       [0],
       [0],
       [5],
       [2],
       [2],
       [3],
       [8],
       [6],
       [3],
       [4],
       [0],
       [5],
       [8],
       [0],
       [1],
       [7],
       [2],
       [8],
       [8],
       [7],
       [8],
       [5],
       [1],
       [8],
       [7],
       [1],
       [3],
       [0],
       [5],
       [7],
       [9],
       [7],
       [4],
       [5],
       [9],
       [8],
       [0],
       [7],
       [9],
       [8],
       [2],
       [7],
       [6],
       [9],
       [4],
       [3],
       [9],
       [6],
       [4],
       [7],
       [6],
       [5],
       [1],
       [5],
       [8],
       [8],
       [0],
       [4],
       [0],
       [5],
       [5],
       [1],
       [1],
       [8],
       [9],
       [0],
       [3],
       [1],
       [9],
       [2],
       [2],
       [5],
       [3],
       [9],
       [9],
       [4],
       [0],
       [3],
       [0],
       [0],
       [9],
       [8],
       [1],
       [5],
       [7],
       [0],
       [8],
       [2],
       [4],
       [7],
       [0],
       [2],
       [3],
       [6],
       [3],
       [8],
       [5],
       [0],
       [3],
       [4],
       [3],
       [9],
       [0],
       [6],
       [1],
       [0],
       [9],
       [1],
       [0],
       [7],
       [9],
       [1],
       [2],
       [6],
       [9],
       [3],
       [4],
       [6],
       [0],
       [0],
       [6],
       [6],
       [6],
       [3],
       [2],
       [6],
       [1],
       [8],
       [2],
       [1],
       [6],
       [8],
       [6],
       [8],
       [0],
       [4],
       [0],
       [7],
       [7],
       [5],
       [5],
       [3],
       [5],
       [2],
       [3],
       [4],
       [1],
       [7],
       [5],
       [4],
       [6],
       [1],
       [9],
       [3],
       [6],
       [6],
       [9],
       [3],
       [8],
       [0],
       [7],
       [2],
       [6],
       [2],
       [5],
       [8],
       [5],
       [4],
       [6],
       [8],
       [9],
       [9],
       [1],
       [0],
       [2],
       [2],
       [7],
       [3],
       [2],
       [8],
       [0],
       [9],
       [5],
       [8],
       [1],
       [9],
       [4],
       [1],
       [3],
       [8],
       [1],
       [4],
       [7],
       [9],
       [4],
       [2],
       [7],
       [0],
       [7],
       [0],
       [6],
       [6],
       [9],
       [0],
       [9],
       [2],
       [8],
       [7],
       [2],
       [2],
       [5],
       [1],
       [2],
       [6],
       [2],
       [9],
       [6],
       [2],
       [3],
       [0],
       [3],
       [9],
       [8],
       [7],
       [8],
       [8],
       [4],
       [0],
       [1],
       [8],
       [2],
       [7],
       [9],
       [3],
       [6],
       [1],
       [9],
       [0],
       [7],
       [3],
       [7],
       [4],
       [5],
       [0],
       [0],
       [2],
       [9],
       [3],
       [4],
       [0],
       [6],
       [2],
       [5],
       [3],
       [7],
       [3],
       [7],
       [2],
       [5],
       [3],
       [1],
       [1],
       [4],
       [9],
       [9],
       [5],
       [7],
       [5],
       [0],
       [2],
       [2],
       [2],
       [9],
       [7],
       [3],
       [9],
       [4],
       [3],
       [5],
       [4],
       [6],
       [5],
       [6],
       [1],
       [4],
       [3],
       [4],
       [4],
       [3],
       [7],
       [8],
       [3],
       [7],
       [8],
       [0],
       [5],
       [7],
       [6],
       [0],
       [5],
       [4],
       [8],
       [6],
       [8],
       [5],
       [5],
       [9],
       [9],
       [9],
       [5],
       [0],
       [1],
       [0],
       [8],
       [1],
       [1],
       [8],
       [0],
       [2],
       [2],
       [0],
       [4],
       [6],
       [5],
       [4],
       [9],
       [4],
       [7],
       [9],
       [9],
       [4],
       [5],
       [6],
       [6],
       [1],
       [5],
       [3],
       [8],
       [9],
       [5],
       [8],
       [5],
       [7],
       [0],
       [7],
       [0],
       [5],
       [0],
       [0],
       [4],
       [6],
       [9],
       [0],
       [9],
       [5],
       [6],
       [6],
       [6],
       [2],
       [9],
       [0],
       [1],
       [7],
       [6],
       [7],
       [5],
       [9],
       [1],
       [6],
       [2],
       [5],
       [5],
       [5],
       [8],
       [5],
       [9],
       [4],
       [6],
       [4],
       [3],
       [2],
       [0],
       [7],
       [6],
       [2],
       [2],
       [3],
       [9],
       [7],
       [9],
       [2],
       [6],
       [7],
       [1],
       [3],
       [6],
       [6],
       [8],
       [9],
       [7],
       [5],
       [4],
       [0],
       [8],
       [4],
       [0],
       [9],
       [3],
       [4],
       [8],
       [9],
       [6],
       [9],
       [2],
       [6],
       [1],
       [4],
       [7],
       [3],
       [5],
       [3],
       [8],
       [5],
       [0],
       [2],
       [1],
       [6],
       [4],
       [3],
       [3],
       [9],
       [6],
       [9],
       [8],
       [8],
       [5],
       [8],
       [6],
       [6],
       [2],
       [1],
       [7],
       [7],
       [1],
       [2],
       [7],
       [9],
       [9],
       [4],
       [4],
       [1],
       [2],
       [5],
       [6],
       [8],
       [7],
       [6],
       [8],
       [3],
       [0],
       [5],
       [5],
       [3],
       [0],
       [7],
       [9],
       [1],
       [3],
       [4],
       [4],
       [5],
       [3],
       [9],
       [5],
       [6],
       [9],
       [2],
       [1],
       [1],
       [4],
       [1],
       [9],
       [4],
       [7],
       [6],
       [3],
       [8],
       [9],
       [0],
       [1],
       [3],
       [6],
       [3],
       [6],
       [3],
       [2],
       [0],
       [3],
       [1],
       [0],
       [5],
       [9],
       [6],
       [4],
       [8],
       [9],
       [6],
       [9],
       [6],
       [3],
       [0],
       [3],
       [2],
       [2],
       [7],
       [8],
       [3],
       [8],
       [2],
       [7],
       [5],
       [7],
       [2],
       [4],
       [8],
       [7],
       [4],
       [2],
       [9],
       [8],
       [8],
       [6],
       [8],
       [8],
       [7],
       [4],
       [3],
       [3],
       [8],
       [4],
       [9],
       [4],
       [8],
       [8],
       [1],
       [8],
       [2],
       [1],
       [3],
       [6],
       [5],
       [4],
       [2],
       [7],
       [9],
       [9],
       [4],
       [1],
       [4],
       [1],
       [3],
       [2],
       [7],
       [0],
       [7],
       [9],
       [7],
       [6],
       [6],
       [2],
       [5],
       [9],
       [2],
       [9],
       [1],
       [2],
       [2],
       [6],
       [8],
       [2],
       [1],
       [3],
       [6],
       [6],
       [0],
       [1],
       [2],
       [7],
       [0],
       [5],
       [4],
       [6],
       [1],
       [6],
       [4],
       [0],
       [2],
       [2],
       [6],
       [0],
       [5],
       [9],
       [1],
       [7],
       [6],
       [7],
       [0],
       [3],
       [9],
       [6],
       [8],
       [3],
       [0],
       [3],
       [4],
       [7],
       [7],
       [1],
       [4],
       [7],
       [2],
       [7],
       [1],
       [4],
       [7],
       [4],
       [4],
       [8],
       [4],
       [7],
       [7],
       [5],
       [3],
       [7],
       [2],
       [0],
       [8],
       [9],
       [5],
       [8],
       [3],
       [6],
       [2],
       [0],
       [8],
       [7],
       [3],
       [7],
       [6],
       [5],
       [3],
       [1],
       [3],
       [2],
       [2],
       [5],
       [4],
       [1],
       [2],
       [9],
       [2],
       [7],
       [0],
       [7],
       [2],
       [1],
       [3],
       [2],
       [0],
       [2],
       [4],
       [7],
       [9],
       [8],
       [9],
       [0],
       [7],
       [7],
       [0],
       [7],
       [8],
       [4],
       [6],
       [3],
       [3],
       [0],
       [1],
       [3],
       [7],
       [0],
       [1],
       [3],
       [1],
       [4],
       [2],
       [3],
       [8],
       [4],
       [2],
       [3],
       [7],
       [8],
       [4],
       [3],
       [0],
       [9],
       [0],
       [0],
       [1],
       [0],
       [4],
       [4],
       [6],
       [7],
       [6],
       [1],
       [1],
       [3],
       [7],
       [3],
       [5],
       [2],
       [6],
       [6],
       [5],
       [8],
       [7],
       [1],
       [6],
       [8],
       [8],
       [5],
       [3],
       [0],
       [4],
       [0],
       [1],
       [3],
       [8],
       [8],
       [0],
       [6],
       [9],
       [9],
       [9],
       [5],
       [5],
       [8],
       [6],
       [0],
       [0],
       [4],
       [2],
       [3],
       [2],
       [7],
       [2],
       [2],
       [5],
       [9],
       [8],
       [9],
       [1],
       [7],
       [4],
       [0],
       [3],
       [0],
       [1],
       [3],
       [8],
       [3],
       [9],
       [6],
       [1],
       [4],
       [7],
       [0],
       [3],
       [7],
       [8],
       [9],
       [1],
       [1],
       [6],
       [6],
       [6],
       [6],
       [9],
       [1],
       [9],
       [9],
       [4],
       [2],
       [1],
       [7],
       [0],
       [6],
       [8],
       [1],
       [9],
       [2],
       [9],
       [0],
       [4],
       [7],
       [8],
       [3],
       [1],
       [2],
       [0],
       [1],
       [5],
       [8],
       [4],
       [6],
       [3],
       [8],
       [1],
       [3],
       [8]], dtype=uint8)}
2020-10-28 13:37:22,768 - engine_logger:INFO - Getting MNIST data.... 
2020-10-28 13:37:23,604 - engine_logger:INFO - Got MNIST data(reduced sample): {'x_train': array([[[[ 59,  62,  63],
         [ 43,  46,  45],
         [ 50,  48,  43],
         ...,
         [158, 132, 108],
         [152, 125, 102],
         [148, 124, 103]],

        [[ 16,  20,  20],
         [  0,   0,   0],
         [ 18,   8,   0],
         ...,
         [123,  88,  55],
         [119,  83,  50],
         [122,  87,  57]],

        [[ 25,  24,  21],
         [ 16,   7,   0],
         [ 49,  27,   8],
         ...,
         [118,  84,  50],
         [120,  84,  50],
         [109,  73,  42]],

        ...,

        [[208, 170,  96],
         [201, 153,  34],
         [198, 161,  26],
         ...,
         [160, 133,  70],
         [ 56,  31,   7],
         [ 53,  34,  20]],

        [[180, 139,  96],
         [173, 123,  42],
         [186, 144,  30],
         ...,
         [184, 148,  94],
         [ 97,  62,  34],
         [ 83,  53,  34]],

        [[177, 144, 116],
         [168, 129,  94],
         [179, 142,  87],
         ...,
         [216, 184, 140],
         [151, 118,  84],
         [123,  92,  72]]],


       [[[154, 177, 187],
         [126, 137, 136],
         [105, 104,  95],
         ...,
         [ 91,  95,  71],
         [ 87,  90,  71],
         [ 79,  81,  70]],

        [[140, 160, 169],
         [145, 153, 154],
         [125, 125, 118],
         ...,
         [ 96,  99,  78],
         [ 77,  80,  62],
         [ 71,  73,  61]],

        [[140, 155, 164],
         [139, 146, 149],
         [115, 115, 112],
         ...,
         [ 79,  82,  64],
         [ 68,  70,  55],
         [ 67,  69,  55]],

        ...,

        [[175, 167, 166],
         [156, 154, 160],
         [154, 160, 170],
         ...,
         [ 42,  34,  36],
         [ 61,  53,  57],
         [ 93,  83,  91]],

        [[165, 154, 128],
         [156, 152, 130],
         [159, 161, 142],
         ...,
         [103,  93,  96],
         [123, 114, 120],
         [131, 121, 131]],

        [[163, 148, 120],
         [158, 148, 122],
         [163, 156, 133],
         ...,
         [143, 133, 139],
         [143, 134, 142],
         [143, 133, 144]]],


       [[[255, 255, 255],
         [253, 253, 253],
         [253, 253, 253],
         ...,
         [253, 253, 253],
         [253, 253, 253],
         [253, 253, 253]],

        [[255, 255, 255],
         [255, 255, 255],
         [255, 255, 255],
         ...,
         [255, 255, 255],
         [255, 255, 255],
         [255, 255, 255]],

        [[255, 255, 255],
         [254, 254, 254],
         [254, 254, 254],
         ...,
         [254, 254, 254],
         [254, 254, 254],
         [254, 254, 254]],

        ...,

        [[113, 120, 112],
         [111, 118, 111],
         [105, 112, 106],
         ...,
         [ 72,  81,  80],
         [ 72,  80,  79],
         [ 72,  80,  79]],

        [[111, 118, 110],
         [104, 111, 104],
         [ 99, 106,  98],
         ...,
         [ 68,  75,  73],
         [ 70,  76,  75],
         [ 78,  84,  82]],

        [[106, 113, 105],
         [ 99, 106,  98],
         [ 95, 102,  94],
         ...,
         [ 78,  85,  83],
         [ 79,  85,  83],
         [ 80,  86,  84]]],


       ...,


       [[[167, 163, 145],
         [206, 201, 181],
         [202, 196, 177],
         ...,
         [ 91,  85,  89],
         [ 50,  64,  68],
         [ 46,  86,  90]],

        [[156, 153, 136],
         [206, 201, 181],
         [206, 199, 180],
         ...,
         [171, 166, 174],
         [ 99, 115, 123],
         [ 48,  88,  94]],

        [[147, 143, 128],
         [192, 186, 167],
         [206, 198, 177],
         ...,
         [173, 176, 186],
         [106, 130, 140],
         [ 48,  90,  96]],

        ...,

        [[144, 156, 151],
         [145, 153, 148],
         [152, 160, 156],
         ...,
         [ 45,  85,  91],
         [ 41,  78,  85],
         [ 47,  88,  94]],

        [[143, 155, 150],
         [148, 157, 154],
         [156, 167, 167],
         ...,
         [ 32,  56,  65],
         [ 31,  58,  66],
         [ 34,  66,  73]],

        [[139, 154, 149],
         [144, 157, 155],
         [140, 157, 159],
         ...,
         [ 39,  75,  81],
         [ 42,  82,  87],
         [ 42,  78,  84]]],


       [[[154, 152, 125],
         [156, 154, 130],
         [149, 146, 125],
         ...,
         [156, 154, 110],
         [131, 130,  97],
         [154, 149, 111]],

        [[163, 150, 111],
         [178, 167, 125],
         [179, 168, 126],
         ...,
         [185, 175, 127],
         [166, 165, 118],
         [168, 164, 117]],

        [[198, 184, 126],
         [188, 173, 117],
         [193, 179, 121],
         ...,
         [188, 166, 118],
         [184, 172, 126],
         [183, 179, 128]],

        ...,

        [[187, 185, 132],
         [175, 175, 129],
         [162, 162, 109],
         ...,
         [201, 217, 129],
         [200, 220, 129],
         [190, 205, 118]],

        [[157, 160, 109],
         [147, 153, 104],
         [144, 157,  98],
         ...,
         [213, 232, 134],
         [191, 227, 117],
         [173, 216, 105]],

        [[153, 150, 102],
         [150, 159,  99],
         [173, 195, 124],
         ...,
         [195, 234, 113],
         [187, 237, 108],
         [194, 247, 114]]],


       [[[ 45,  32,  21],
         [ 48,  34,  21],
         [ 66,  54,  41],
         ...,
         [ 19,   9,   7],
         [ 23,  14,  10],
         [ 20,  10,   8]],

        [[ 47,  33,  21],
         [ 50,  35,  22],
         [ 71,  58,  44],
         ...,
         [ 22,  10,   8],
         [ 22,  11,  10],
         [ 19,   8,   7]],

        [[ 47,  35,  22],
         [ 54,  40,  24],
         [ 63,  50,  35],
         ...,
         [ 24,  10,   7],
         [ 18,   6,   6],
         [ 18,   7,   6]],

        ...,

        [[109, 105,  66],
         [113, 108,  68],
         [115, 106,  67],
         ...,
         [103,  87,  55],
         [ 85,  75,  43],
         [ 97,  85,  52]],

        [[ 96,  90,  53],
         [114, 106,  69],
         [111, 102,  64],
         ...,
         [164, 146, 104],
         [154, 135,  89],
         [152, 139,  97]],

        [[ 97,  91,  52],
         [ 85,  79,  40],
         [105,  99,  57],
         ...,
         [161, 148, 108],
         [156, 137,  93],
         [156, 142, 100]]]], dtype=uint8), 'y_train': array([[6],
       [9],
       [9],
       ...,
       [5],
       [4],
       [6]], dtype=uint8), 'x_test': array([[[[158, 112,  49],
         [159, 111,  47],
         [165, 116,  51],
         ...,
         [137,  95,  36],
         [126,  91,  36],
         [116,  85,  33]],

        [[152, 112,  51],
         [151, 110,  40],
         [159, 114,  45],
         ...,
         [136,  95,  31],
         [125,  91,  32],
         [119,  88,  34]],

        [[151, 110,  47],
         [151, 109,  33],
         [158, 111,  36],
         ...,
         [139,  98,  34],
         [130,  95,  34],
         [120,  89,  33]],

        ...,

        [[ 68, 124, 177],
         [ 42, 100, 148],
         [ 31,  88, 137],
         ...,
         [ 38,  97, 146],
         [ 13,  64, 108],
         [ 40,  85, 127]],

        [[ 61, 116, 168],
         [ 49, 102, 148],
         [ 35,  85, 132],
         ...,
         [ 26,  82, 130],
         [ 29,  82, 126],
         [ 20,  64, 107]],

        [[ 54, 107, 160],
         [ 56, 105, 149],
         [ 45,  89, 132],
         ...,
         [ 24,  77, 124],
         [ 34,  84, 129],
         [ 21,  67, 110]]],


       [[[235, 235, 235],
         [231, 231, 231],
         [232, 232, 232],
         ...,
         [233, 233, 233],
         [233, 233, 233],
         [232, 232, 232]],

        [[238, 238, 238],
         [235, 235, 235],
         [235, 235, 235],
         ...,
         [236, 236, 236],
         [236, 236, 236],
         [235, 235, 235]],

        [[237, 237, 237],
         [234, 234, 234],
         [234, 234, 234],
         ...,
         [235, 235, 235],
         [235, 235, 235],
         [234, 234, 234]],

        ...,

        [[ 87,  99,  89],
         [ 43,  51,  37],
         [ 19,  23,  11],
         ...,
         [169, 184, 179],
         [182, 197, 193],
         [188, 202, 201]],

        [[ 82,  96,  82],
         [ 46,  57,  36],
         [ 36,  44,  22],
         ...,
         [174, 189, 183],
         [185, 200, 196],
         [187, 202, 200]],

        [[ 85, 101,  83],
         [ 62,  75,  48],
         [ 58,  67,  38],
         ...,
         [168, 183, 178],
         [180, 195, 191],
         [186, 200, 199]]],


       [[[158, 190, 222],
         [158, 187, 218],
         [139, 166, 194],
         ...,
         [228, 231, 234],
         [237, 239, 243],
         [238, 241, 246]],

        [[170, 200, 229],
         [172, 199, 226],
         [151, 176, 201],
         ...,
         [232, 232, 236],
         [246, 246, 250],
         [246, 247, 251]],

        [[174, 201, 225],
         [176, 200, 222],
         [157, 179, 199],
         ...,
         [230, 229, 232],
         [250, 249, 251],
         [245, 244, 247]],

        ...,

        [[ 31,  40,  45],
         [ 30,  39,  44],
         [ 26,  35,  40],
         ...,
         [ 37,  40,  46],
         [  9,  13,  14],
         [  4,   7,   5]],

        [[ 23,  34,  39],
         [ 27,  38,  43],
         [ 25,  36,  41],
         ...,
         [ 19,  20,  24],
         [  4,   6,   3],
         [  5,   7,   3]],

        [[ 28,  41,  47],
         [ 30,  43,  50],
         [ 32,  45,  52],
         ...,
         [  5,   6,   8],
         [  4,   5,   3],
         [  7,   8,   7]]],


       ...,


       [[[103, 124, 101],
         [124, 149, 120],
         [ 73,  98,  73],
         ...,
         [ 17,  25,  16],
         [ 10,  15,   9],
         [ 15,  19,  13]],

        [[162, 175, 148],
         [122, 137, 107],
         [111, 126, 103],
         ...,
         [ 28,  38,  25],
         [ 18,  22,  16],
         [ 11,  12,   8]],

        [[226, 236, 200],
         [209, 217, 183],
         [204, 216, 161],
         ...,
         [ 21,  29,  18],
         [ 19,  24,  17],
         [ 14,  17,  11]],

        ...,

        [[132, 134, 145],
         [126, 128, 138],
         [127, 127, 139],
         ...,
         [ 43,  36,  33],
         [ 64,  46,  31],
         [ 88,  53,  32]],

        [[125, 123, 134],
         [123, 122, 132],
         [121, 120, 132],
         ...,
         [ 41,  42,  43],
         [ 52,  39,  35],
         [ 87,  56,  43]],

        [[121, 119, 131],
         [119, 117, 129],
         [118, 118, 130],
         ...,
         [ 48,  49,  53],
         [ 53,  48,  50],
         [ 67,  42,  37]]],


       [[[ 77, 114,  33],
         [ 72, 111,  25],
         [ 76, 110,  34],
         ...,
         [ 59,  64,  46],
         [ 56,  58,  42],
         [ 56,  58,  40]],

        [[ 74, 107,  34],
         [ 71,  93,  31],
         [ 80, 102,  39],
         ...,
         [ 52,  55,  44],
         [ 57,  60,  45],
         [ 54,  58,  39]],

        [[ 80, 101,  38],
         [ 84,  98,  43],
         [ 74,  95,  32],
         ...,
         [ 50,  55,  51],
         [ 50,  55,  50],
         [ 61,  67,  59]],

        ...,

        [[ 65,  92,  26],
         [ 63,  84,  24],
         [ 52,  77,  20],
         ...,
         [ 84,  82,  68],
         [ 56,  57,  48],
         [ 28,  33,  24]],

        [[ 70,  89,  26],
         [ 77,  89,  32],
         [ 60,  92,  30],
         ...,
         [ 77,  77,  66],
         [ 39,  39,  35],
         [ 32,  39,  28]],

        [[ 48,  73,  12],
         [ 57,  71,  21],
         [ 56,  85,  30],
         ...,
         [ 51,  53,  47],
         [ 24,  27,  22],
         [ 35,  44,  30]]],


       [[[175, 180, 174],
         [176, 181, 175],
         [181, 186, 180],
         ...,
         [193, 207, 210],
         [190, 204, 207],
         [188, 202, 205]],

        [[177, 182, 176],
         [179, 184, 178],
         [183, 188, 182],
         ...,
         [196, 210, 213],
         [192, 206, 209],
         [191, 205, 208]],

        [[176, 181, 175],
         [177, 182, 176],
         [182, 187, 181],
         ...,
         [194, 208, 211],
         [191, 205, 208],
         [189, 203, 206]],

        ...,

        [[122, 121, 129],
         [117, 118, 129],
         [114, 118, 130],
         ...,
         [ 58,  73,  91],
         [ 81,  97, 118],
         [ 99, 118, 141]],

        [[116, 115, 123],
         [110, 111, 121],
         [107, 111, 123],
         ...,
         [ 57,  70,  88],
         [ 78,  93, 113],
         [100, 117, 140]],

        [[113, 112, 119],
         [106, 107, 117],
         [105, 109, 121],
         ...,
         [ 57,  68,  85],
         [ 71,  85, 103],
         [ 93, 110, 131]]]], dtype=uint8), 'y_test': array([[3],
       [8],
       [8],
       [0],
       [6],
       [6],
       [1],
       [6],
       [3],
       [1],
       [0],
       [9],
       [5],
       [7],
       [9],
       [8],
       [5],
       [7],
       [8],
       [6],
       [7],
       [0],
       [4],
       [9],
       [5],
       [2],
       [4],
       [0],
       [9],
       [6],
       [6],
       [5],
       [4],
       [5],
       [9],
       [2],
       [4],
       [1],
       [9],
       [5],
       [4],
       [6],
       [5],
       [6],
       [0],
       [9],
       [3],
       [9],
       [7],
       [6],
       [9],
       [8],
       [0],
       [3],
       [8],
       [8],
       [7],
       [7],
       [4],
       [6],
       [7],
       [3],
       [6],
       [3],
       [6],
       [2],
       [1],
       [2],
       [3],
       [7],
       [2],
       [6],
       [8],
       [8],
       [0],
       [2],
       [9],
       [3],
       [3],
       [8],
       [8],
       [1],
       [1],
       [7],
       [2],
       [5],
       [2],
       [7],
       [8],
       [9],
       [0],
       [3],
       [8],
       [6],
       [4],
       [6],
       [6],
       [0],
       [0],
       [7],
       [4],
       [5],
       [6],
       [3],
       [1],
       [1],
       [3],
       [6],
       [8],
       [7],
       [4],
       [0],
       [6],
       [2],
       [1],
       [3],
       [0],
       [4],
       [2],
       [7],
       [8],
       [3],
       [1],
       [2],
       [8],
       [0],
       [8],
       [3],
       [5],
       [2],
       [4],
       [1],
       [8],
       [9],
       [1],
       [2],
       [9],
       [7],
       [2],
       [9],
       [6],
       [5],
       [6],
       [3],
       [8],
       [7],
       [6],
       [2],
       [5],
       [2],
       [8],
       [9],
       [6],
       [0],
       [0],
       [5],
       [2],
       [9],
       [5],
       [4],
       [2],
       [1],
       [6],
       [6],
       [8],
       [4],
       [8],
       [4],
       [5],
       [0],
       [9],
       [9],
       [9],
       [8],
       [9],
       [9],
       [3],
       [7],
       [5],
       [0],
       [0],
       [5],
       [2],
       [2],
       [3],
       [8],
       [6],
       [3],
       [4],
       [0],
       [5],
       [8],
       [0],
       [1],
       [7],
       [2],
       [8],
       [8],
       [7],
       [8],
       [5],
       [1],
       [8],
       [7],
       [1],
       [3],
       [0],
       [5],
       [7],
       [9],
       [7],
       [4],
       [5],
       [9],
       [8],
       [0],
       [7],
       [9],
       [8],
       [2],
       [7],
       [6],
       [9],
       [4],
       [3],
       [9],
       [6],
       [4],
       [7],
       [6],
       [5],
       [1],
       [5],
       [8],
       [8],
       [0],
       [4],
       [0],
       [5],
       [5],
       [1],
       [1],
       [8],
       [9],
       [0],
       [3],
       [1],
       [9],
       [2],
       [2],
       [5],
       [3],
       [9],
       [9],
       [4],
       [0],
       [3],
       [0],
       [0],
       [9],
       [8],
       [1],
       [5],
       [7],
       [0],
       [8],
       [2],
       [4],
       [7],
       [0],
       [2],
       [3],
       [6],
       [3],
       [8],
       [5],
       [0],
       [3],
       [4],
       [3],
       [9],
       [0],
       [6],
       [1],
       [0],
       [9],
       [1],
       [0],
       [7],
       [9],
       [1],
       [2],
       [6],
       [9],
       [3],
       [4],
       [6],
       [0],
       [0],
       [6],
       [6],
       [6],
       [3],
       [2],
       [6],
       [1],
       [8],
       [2],
       [1],
       [6],
       [8],
       [6],
       [8],
       [0],
       [4],
       [0],
       [7],
       [7],
       [5],
       [5],
       [3],
       [5],
       [2],
       [3],
       [4],
       [1],
       [7],
       [5],
       [4],
       [6],
       [1],
       [9],
       [3],
       [6],
       [6],
       [9],
       [3],
       [8],
       [0],
       [7],
       [2],
       [6],
       [2],
       [5],
       [8],
       [5],
       [4],
       [6],
       [8],
       [9],
       [9],
       [1],
       [0],
       [2],
       [2],
       [7],
       [3],
       [2],
       [8],
       [0],
       [9],
       [5],
       [8],
       [1],
       [9],
       [4],
       [1],
       [3],
       [8],
       [1],
       [4],
       [7],
       [9],
       [4],
       [2],
       [7],
       [0],
       [7],
       [0],
       [6],
       [6],
       [9],
       [0],
       [9],
       [2],
       [8],
       [7],
       [2],
       [2],
       [5],
       [1],
       [2],
       [6],
       [2],
       [9],
       [6],
       [2],
       [3],
       [0],
       [3],
       [9],
       [8],
       [7],
       [8],
       [8],
       [4],
       [0],
       [1],
       [8],
       [2],
       [7],
       [9],
       [3],
       [6],
       [1],
       [9],
       [0],
       [7],
       [3],
       [7],
       [4],
       [5],
       [0],
       [0],
       [2],
       [9],
       [3],
       [4],
       [0],
       [6],
       [2],
       [5],
       [3],
       [7],
       [3],
       [7],
       [2],
       [5],
       [3],
       [1],
       [1],
       [4],
       [9],
       [9],
       [5],
       [7],
       [5],
       [0],
       [2],
       [2],
       [2],
       [9],
       [7],
       [3],
       [9],
       [4],
       [3],
       [5],
       [4],
       [6],
       [5],
       [6],
       [1],
       [4],
       [3],
       [4],
       [4],
       [3],
       [7],
       [8],
       [3],
       [7],
       [8],
       [0],
       [5],
       [7],
       [6],
       [0],
       [5],
       [4],
       [8],
       [6],
       [8],
       [5],
       [5],
       [9],
       [9],
       [9],
       [5],
       [0],
       [1],
       [0],
       [8],
       [1],
       [1],
       [8],
       [0],
       [2],
       [2],
       [0],
       [4],
       [6],
       [5],
       [4],
       [9],
       [4],
       [7],
       [9],
       [9],
       [4],
       [5],
       [6],
       [6],
       [1],
       [5],
       [3],
       [8],
       [9],
       [5],
       [8],
       [5],
       [7],
       [0],
       [7],
       [0],
       [5],
       [0],
       [0],
       [4],
       [6],
       [9],
       [0],
       [9],
       [5],
       [6],
       [6],
       [6],
       [2],
       [9],
       [0],
       [1],
       [7],
       [6],
       [7],
       [5],
       [9],
       [1],
       [6],
       [2],
       [5],
       [5],
       [5],
       [8],
       [5],
       [9],
       [4],
       [6],
       [4],
       [3],
       [2],
       [0],
       [7],
       [6],
       [2],
       [2],
       [3],
       [9],
       [7],
       [9],
       [2],
       [6],
       [7],
       [1],
       [3],
       [6],
       [6],
       [8],
       [9],
       [7],
       [5],
       [4],
       [0],
       [8],
       [4],
       [0],
       [9],
       [3],
       [4],
       [8],
       [9],
       [6],
       [9],
       [2],
       [6],
       [1],
       [4],
       [7],
       [3],
       [5],
       [3],
       [8],
       [5],
       [0],
       [2],
       [1],
       [6],
       [4],
       [3],
       [3],
       [9],
       [6],
       [9],
       [8],
       [8],
       [5],
       [8],
       [6],
       [6],
       [2],
       [1],
       [7],
       [7],
       [1],
       [2],
       [7],
       [9],
       [9],
       [4],
       [4],
       [1],
       [2],
       [5],
       [6],
       [8],
       [7],
       [6],
       [8],
       [3],
       [0],
       [5],
       [5],
       [3],
       [0],
       [7],
       [9],
       [1],
       [3],
       [4],
       [4],
       [5],
       [3],
       [9],
       [5],
       [6],
       [9],
       [2],
       [1],
       [1],
       [4],
       [1],
       [9],
       [4],
       [7],
       [6],
       [3],
       [8],
       [9],
       [0],
       [1],
       [3],
       [6],
       [3],
       [6],
       [3],
       [2],
       [0],
       [3],
       [1],
       [0],
       [5],
       [9],
       [6],
       [4],
       [8],
       [9],
       [6],
       [9],
       [6],
       [3],
       [0],
       [3],
       [2],
       [2],
       [7],
       [8],
       [3],
       [8],
       [2],
       [7],
       [5],
       [7],
       [2],
       [4],
       [8],
       [7],
       [4],
       [2],
       [9],
       [8],
       [8],
       [6],
       [8],
       [8],
       [7],
       [4],
       [3],
       [3],
       [8],
       [4],
       [9],
       [4],
       [8],
       [8],
       [1],
       [8],
       [2],
       [1],
       [3],
       [6],
       [5],
       [4],
       [2],
       [7],
       [9],
       [9],
       [4],
       [1],
       [4],
       [1],
       [3],
       [2],
       [7],
       [0],
       [7],
       [9],
       [7],
       [6],
       [6],
       [2],
       [5],
       [9],
       [2],
       [9],
       [1],
       [2],
       [2],
       [6],
       [8],
       [2],
       [1],
       [3],
       [6],
       [6],
       [0],
       [1],
       [2],
       [7],
       [0],
       [5],
       [4],
       [6],
       [1],
       [6],
       [4],
       [0],
       [2],
       [2],
       [6],
       [0],
       [5],
       [9],
       [1],
       [7],
       [6],
       [7],
       [0],
       [3],
       [9],
       [6],
       [8],
       [3],
       [0],
       [3],
       [4],
       [7],
       [7],
       [1],
       [4],
       [7],
       [2],
       [7],
       [1],
       [4],
       [7],
       [4],
       [4],
       [8],
       [4],
       [7],
       [7],
       [5],
       [3],
       [7],
       [2],
       [0],
       [8],
       [9],
       [5],
       [8],
       [3],
       [6],
       [2],
       [0],
       [8],
       [7],
       [3],
       [7],
       [6],
       [5],
       [3],
       [1],
       [3],
       [2],
       [2],
       [5],
       [4],
       [1],
       [2],
       [9],
       [2],
       [7],
       [0],
       [7],
       [2],
       [1],
       [3],
       [2],
       [0],
       [2],
       [4],
       [7],
       [9],
       [8],
       [9],
       [0],
       [7],
       [7],
       [0],
       [7],
       [8],
       [4],
       [6],
       [3],
       [3],
       [0],
       [1],
       [3],
       [7],
       [0],
       [1],
       [3],
       [1],
       [4],
       [2],
       [3],
       [8],
       [4],
       [2],
       [3],
       [7],
       [8],
       [4],
       [3],
       [0],
       [9],
       [0],
       [0],
       [1],
       [0],
       [4],
       [4],
       [6],
       [7],
       [6],
       [1],
       [1],
       [3],
       [7],
       [3],
       [5],
       [2],
       [6],
       [6],
       [5],
       [8],
       [7],
       [1],
       [6],
       [8],
       [8],
       [5],
       [3],
       [0],
       [4],
       [0],
       [1],
       [3],
       [8],
       [8],
       [0],
       [6],
       [9],
       [9],
       [9],
       [5],
       [5],
       [8],
       [6],
       [0],
       [0],
       [4],
       [2],
       [3],
       [2],
       [7],
       [2],
       [2],
       [5],
       [9],
       [8],
       [9],
       [1],
       [7],
       [4],
       [0],
       [3],
       [0],
       [1],
       [3],
       [8],
       [3],
       [9],
       [6],
       [1],
       [4],
       [7],
       [0],
       [3],
       [7],
       [8],
       [9],
       [1],
       [1],
       [6],
       [6],
       [6],
       [6],
       [9],
       [1],
       [9],
       [9],
       [4],
       [2],
       [1],
       [7],
       [0],
       [6],
       [8],
       [1],
       [9],
       [2],
       [9],
       [0],
       [4],
       [7],
       [8],
       [3],
       [1],
       [2],
       [0],
       [1],
       [5],
       [8],
       [4],
       [6],
       [3],
       [8],
       [1],
       [3],
       [8]], dtype=uint8)}
2020-10-28 13:37:24,656 - engine_logger:INFO - Getting MNIST data.... 
2020-10-28 13:37:25,616 - engine_logger:INFO - Got MNIST data(reduced sample): {'x_train': array([[[[ 59,  62,  63],
         [ 43,  46,  45],
         [ 50,  48,  43],
         ...,
         [158, 132, 108],
         [152, 125, 102],
         [148, 124, 103]],

        [[ 16,  20,  20],
         [  0,   0,   0],
         [ 18,   8,   0],
         ...,
         [123,  88,  55],
         [119,  83,  50],
         [122,  87,  57]],

        [[ 25,  24,  21],
         [ 16,   7,   0],
         [ 49,  27,   8],
         ...,
         [118,  84,  50],
         [120,  84,  50],
         [109,  73,  42]],

        ...,

        [[208, 170,  96],
         [201, 153,  34],
         [198, 161,  26],
         ...,
         [160, 133,  70],
         [ 56,  31,   7],
         [ 53,  34,  20]],

        [[180, 139,  96],
         [173, 123,  42],
         [186, 144,  30],
         ...,
         [184, 148,  94],
         [ 97,  62,  34],
         [ 83,  53,  34]],

        [[177, 144, 116],
         [168, 129,  94],
         [179, 142,  87],
         ...,
         [216, 184, 140],
         [151, 118,  84],
         [123,  92,  72]]],


       [[[154, 177, 187],
         [126, 137, 136],
         [105, 104,  95],
         ...,
         [ 91,  95,  71],
         [ 87,  90,  71],
         [ 79,  81,  70]],

        [[140, 160, 169],
         [145, 153, 154],
         [125, 125, 118],
         ...,
         [ 96,  99,  78],
         [ 77,  80,  62],
         [ 71,  73,  61]],

        [[140, 155, 164],
         [139, 146, 149],
         [115, 115, 112],
         ...,
         [ 79,  82,  64],
         [ 68,  70,  55],
         [ 67,  69,  55]],

        ...,

        [[175, 167, 166],
         [156, 154, 160],
         [154, 160, 170],
         ...,
         [ 42,  34,  36],
         [ 61,  53,  57],
         [ 93,  83,  91]],

        [[165, 154, 128],
         [156, 152, 130],
         [159, 161, 142],
         ...,
         [103,  93,  96],
         [123, 114, 120],
         [131, 121, 131]],

        [[163, 148, 120],
         [158, 148, 122],
         [163, 156, 133],
         ...,
         [143, 133, 139],
         [143, 134, 142],
         [143, 133, 144]]],


       [[[255, 255, 255],
         [253, 253, 253],
         [253, 253, 253],
         ...,
         [253, 253, 253],
         [253, 253, 253],
         [253, 253, 253]],

        [[255, 255, 255],
         [255, 255, 255],
         [255, 255, 255],
         ...,
         [255, 255, 255],
         [255, 255, 255],
         [255, 255, 255]],

        [[255, 255, 255],
         [254, 254, 254],
         [254, 254, 254],
         ...,
         [254, 254, 254],
         [254, 254, 254],
         [254, 254, 254]],

        ...,

        [[113, 120, 112],
         [111, 118, 111],
         [105, 112, 106],
         ...,
         [ 72,  81,  80],
         [ 72,  80,  79],
         [ 72,  80,  79]],

        [[111, 118, 110],
         [104, 111, 104],
         [ 99, 106,  98],
         ...,
         [ 68,  75,  73],
         [ 70,  76,  75],
         [ 78,  84,  82]],

        [[106, 113, 105],
         [ 99, 106,  98],
         [ 95, 102,  94],
         ...,
         [ 78,  85,  83],
         [ 79,  85,  83],
         [ 80,  86,  84]]],


       ...,


       [[[167, 163, 145],
         [206, 201, 181],
         [202, 196, 177],
         ...,
         [ 91,  85,  89],
         [ 50,  64,  68],
         [ 46,  86,  90]],

        [[156, 153, 136],
         [206, 201, 181],
         [206, 199, 180],
         ...,
         [171, 166, 174],
         [ 99, 115, 123],
         [ 48,  88,  94]],

        [[147, 143, 128],
         [192, 186, 167],
         [206, 198, 177],
         ...,
         [173, 176, 186],
         [106, 130, 140],
         [ 48,  90,  96]],

        ...,

        [[144, 156, 151],
         [145, 153, 148],
         [152, 160, 156],
         ...,
         [ 45,  85,  91],
         [ 41,  78,  85],
         [ 47,  88,  94]],

        [[143, 155, 150],
         [148, 157, 154],
         [156, 167, 167],
         ...,
         [ 32,  56,  65],
         [ 31,  58,  66],
         [ 34,  66,  73]],

        [[139, 154, 149],
         [144, 157, 155],
         [140, 157, 159],
         ...,
         [ 39,  75,  81],
         [ 42,  82,  87],
         [ 42,  78,  84]]],


       [[[154, 152, 125],
         [156, 154, 130],
         [149, 146, 125],
         ...,
         [156, 154, 110],
         [131, 130,  97],
         [154, 149, 111]],

        [[163, 150, 111],
         [178, 167, 125],
         [179, 168, 126],
         ...,
         [185, 175, 127],
         [166, 165, 118],
         [168, 164, 117]],

        [[198, 184, 126],
         [188, 173, 117],
         [193, 179, 121],
         ...,
         [188, 166, 118],
         [184, 172, 126],
         [183, 179, 128]],

        ...,

        [[187, 185, 132],
         [175, 175, 129],
         [162, 162, 109],
         ...,
         [201, 217, 129],
         [200, 220, 129],
         [190, 205, 118]],

        [[157, 160, 109],
         [147, 153, 104],
         [144, 157,  98],
         ...,
         [213, 232, 134],
         [191, 227, 117],
         [173, 216, 105]],

        [[153, 150, 102],
         [150, 159,  99],
         [173, 195, 124],
         ...,
         [195, 234, 113],
         [187, 237, 108],
         [194, 247, 114]]],


       [[[ 45,  32,  21],
         [ 48,  34,  21],
         [ 66,  54,  41],
         ...,
         [ 19,   9,   7],
         [ 23,  14,  10],
         [ 20,  10,   8]],

        [[ 47,  33,  21],
         [ 50,  35,  22],
         [ 71,  58,  44],
         ...,
         [ 22,  10,   8],
         [ 22,  11,  10],
         [ 19,   8,   7]],

        [[ 47,  35,  22],
         [ 54,  40,  24],
         [ 63,  50,  35],
         ...,
         [ 24,  10,   7],
         [ 18,   6,   6],
         [ 18,   7,   6]],

        ...,

        [[109, 105,  66],
         [113, 108,  68],
         [115, 106,  67],
         ...,
         [103,  87,  55],
         [ 85,  75,  43],
         [ 97,  85,  52]],

        [[ 96,  90,  53],
         [114, 106,  69],
         [111, 102,  64],
         ...,
         [164, 146, 104],
         [154, 135,  89],
         [152, 139,  97]],

        [[ 97,  91,  52],
         [ 85,  79,  40],
         [105,  99,  57],
         ...,
         [161, 148, 108],
         [156, 137,  93],
         [156, 142, 100]]]], dtype=uint8), 'y_train': array([[6],
       [9],
       [9],
       ...,
       [5],
       [4],
       [6]], dtype=uint8), 'x_test': array([[[[158, 112,  49],
         [159, 111,  47],
         [165, 116,  51],
         ...,
         [137,  95,  36],
         [126,  91,  36],
         [116,  85,  33]],

        [[152, 112,  51],
         [151, 110,  40],
         [159, 114,  45],
         ...,
         [136,  95,  31],
         [125,  91,  32],
         [119,  88,  34]],

        [[151, 110,  47],
         [151, 109,  33],
         [158, 111,  36],
         ...,
         [139,  98,  34],
         [130,  95,  34],
         [120,  89,  33]],

        ...,

        [[ 68, 124, 177],
         [ 42, 100, 148],
         [ 31,  88, 137],
         ...,
         [ 38,  97, 146],
         [ 13,  64, 108],
         [ 40,  85, 127]],

        [[ 61, 116, 168],
         [ 49, 102, 148],
         [ 35,  85, 132],
         ...,
         [ 26,  82, 130],
         [ 29,  82, 126],
         [ 20,  64, 107]],

        [[ 54, 107, 160],
         [ 56, 105, 149],
         [ 45,  89, 132],
         ...,
         [ 24,  77, 124],
         [ 34,  84, 129],
         [ 21,  67, 110]]],


       [[[235, 235, 235],
         [231, 231, 231],
         [232, 232, 232],
         ...,
         [233, 233, 233],
         [233, 233, 233],
         [232, 232, 232]],

        [[238, 238, 238],
         [235, 235, 235],
         [235, 235, 235],
         ...,
         [236, 236, 236],
         [236, 236, 236],
         [235, 235, 235]],

        [[237, 237, 237],
         [234, 234, 234],
         [234, 234, 234],
         ...,
         [235, 235, 235],
         [235, 235, 235],
         [234, 234, 234]],

        ...,

        [[ 87,  99,  89],
         [ 43,  51,  37],
         [ 19,  23,  11],
         ...,
         [169, 184, 179],
         [182, 197, 193],
         [188, 202, 201]],

        [[ 82,  96,  82],
         [ 46,  57,  36],
         [ 36,  44,  22],
         ...,
         [174, 189, 183],
         [185, 200, 196],
         [187, 202, 200]],

        [[ 85, 101,  83],
         [ 62,  75,  48],
         [ 58,  67,  38],
         ...,
         [168, 183, 178],
         [180, 195, 191],
         [186, 200, 199]]],


       [[[158, 190, 222],
         [158, 187, 218],
         [139, 166, 194],
         ...,
         [228, 231, 234],
         [237, 239, 243],
         [238, 241, 246]],

        [[170, 200, 229],
         [172, 199, 226],
         [151, 176, 201],
         ...,
         [232, 232, 236],
         [246, 246, 250],
         [246, 247, 251]],

        [[174, 201, 225],
         [176, 200, 222],
         [157, 179, 199],
         ...,
         [230, 229, 232],
         [250, 249, 251],
         [245, 244, 247]],

        ...,

        [[ 31,  40,  45],
         [ 30,  39,  44],
         [ 26,  35,  40],
         ...,
         [ 37,  40,  46],
         [  9,  13,  14],
         [  4,   7,   5]],

        [[ 23,  34,  39],
         [ 27,  38,  43],
         [ 25,  36,  41],
         ...,
         [ 19,  20,  24],
         [  4,   6,   3],
         [  5,   7,   3]],

        [[ 28,  41,  47],
         [ 30,  43,  50],
         [ 32,  45,  52],
         ...,
         [  5,   6,   8],
         [  4,   5,   3],
         [  7,   8,   7]]],


       ...,


       [[[103, 124, 101],
         [124, 149, 120],
         [ 73,  98,  73],
         ...,
         [ 17,  25,  16],
         [ 10,  15,   9],
         [ 15,  19,  13]],

        [[162, 175, 148],
         [122, 137, 107],
         [111, 126, 103],
         ...,
         [ 28,  38,  25],
         [ 18,  22,  16],
         [ 11,  12,   8]],

        [[226, 236, 200],
         [209, 217, 183],
         [204, 216, 161],
         ...,
         [ 21,  29,  18],
         [ 19,  24,  17],
         [ 14,  17,  11]],

        ...,

        [[132, 134, 145],
         [126, 128, 138],
         [127, 127, 139],
         ...,
         [ 43,  36,  33],
         [ 64,  46,  31],
         [ 88,  53,  32]],

        [[125, 123, 134],
         [123, 122, 132],
         [121, 120, 132],
         ...,
         [ 41,  42,  43],
         [ 52,  39,  35],
         [ 87,  56,  43]],

        [[121, 119, 131],
         [119, 117, 129],
         [118, 118, 130],
         ...,
         [ 48,  49,  53],
         [ 53,  48,  50],
         [ 67,  42,  37]]],


       [[[ 77, 114,  33],
         [ 72, 111,  25],
         [ 76, 110,  34],
         ...,
         [ 59,  64,  46],
         [ 56,  58,  42],
         [ 56,  58,  40]],

        [[ 74, 107,  34],
         [ 71,  93,  31],
         [ 80, 102,  39],
         ...,
         [ 52,  55,  44],
         [ 57,  60,  45],
         [ 54,  58,  39]],

        [[ 80, 101,  38],
         [ 84,  98,  43],
         [ 74,  95,  32],
         ...,
         [ 50,  55,  51],
         [ 50,  55,  50],
         [ 61,  67,  59]],

        ...,

        [[ 65,  92,  26],
         [ 63,  84,  24],
         [ 52,  77,  20],
         ...,
         [ 84,  82,  68],
         [ 56,  57,  48],
         [ 28,  33,  24]],

        [[ 70,  89,  26],
         [ 77,  89,  32],
         [ 60,  92,  30],
         ...,
         [ 77,  77,  66],
         [ 39,  39,  35],
         [ 32,  39,  28]],

        [[ 48,  73,  12],
         [ 57,  71,  21],
         [ 56,  85,  30],
         ...,
         [ 51,  53,  47],
         [ 24,  27,  22],
         [ 35,  44,  30]]],


       [[[175, 180, 174],
         [176, 181, 175],
         [181, 186, 180],
         ...,
         [193, 207, 210],
         [190, 204, 207],
         [188, 202, 205]],

        [[177, 182, 176],
         [179, 184, 178],
         [183, 188, 182],
         ...,
         [196, 210, 213],
         [192, 206, 209],
         [191, 205, 208]],

        [[176, 181, 175],
         [177, 182, 176],
         [182, 187, 181],
         ...,
         [194, 208, 211],
         [191, 205, 208],
         [189, 203, 206]],

        ...,

        [[122, 121, 129],
         [117, 118, 129],
         [114, 118, 130],
         ...,
         [ 58,  73,  91],
         [ 81,  97, 118],
         [ 99, 118, 141]],

        [[116, 115, 123],
         [110, 111, 121],
         [107, 111, 123],
         ...,
         [ 57,  70,  88],
         [ 78,  93, 113],
         [100, 117, 140]],

        [[113, 112, 119],
         [106, 107, 117],
         [105, 109, 121],
         ...,
         [ 57,  68,  85],
         [ 71,  85, 103],
         [ 93, 110, 131]]]], dtype=uint8), 'y_test': array([[3],
       [8],
       [8],
       [0],
       [6],
       [6],
       [1],
       [6],
       [3],
       [1],
       [0],
       [9],
       [5],
       [7],
       [9],
       [8],
       [5],
       [7],
       [8],
       [6],
       [7],
       [0],
       [4],
       [9],
       [5],
       [2],
       [4],
       [0],
       [9],
       [6],
       [6],
       [5],
       [4],
       [5],
       [9],
       [2],
       [4],
       [1],
       [9],
       [5],
       [4],
       [6],
       [5],
       [6],
       [0],
       [9],
       [3],
       [9],
       [7],
       [6],
       [9],
       [8],
       [0],
       [3],
       [8],
       [8],
       [7],
       [7],
       [4],
       [6],
       [7],
       [3],
       [6],
       [3],
       [6],
       [2],
       [1],
       [2],
       [3],
       [7],
       [2],
       [6],
       [8],
       [8],
       [0],
       [2],
       [9],
       [3],
       [3],
       [8],
       [8],
       [1],
       [1],
       [7],
       [2],
       [5],
       [2],
       [7],
       [8],
       [9],
       [0],
       [3],
       [8],
       [6],
       [4],
       [6],
       [6],
       [0],
       [0],
       [7],
       [4],
       [5],
       [6],
       [3],
       [1],
       [1],
       [3],
       [6],
       [8],
       [7],
       [4],
       [0],
       [6],
       [2],
       [1],
       [3],
       [0],
       [4],
       [2],
       [7],
       [8],
       [3],
       [1],
       [2],
       [8],
       [0],
       [8],
       [3],
       [5],
       [2],
       [4],
       [1],
       [8],
       [9],
       [1],
       [2],
       [9],
       [7],
       [2],
       [9],
       [6],
       [5],
       [6],
       [3],
       [8],
       [7],
       [6],
       [2],
       [5],
       [2],
       [8],
       [9],
       [6],
       [0],
       [0],
       [5],
       [2],
       [9],
       [5],
       [4],
       [2],
       [1],
       [6],
       [6],
       [8],
       [4],
       [8],
       [4],
       [5],
       [0],
       [9],
       [9],
       [9],
       [8],
       [9],
       [9],
       [3],
       [7],
       [5],
       [0],
       [0],
       [5],
       [2],
       [2],
       [3],
       [8],
       [6],
       [3],
       [4],
       [0],
       [5],
       [8],
       [0],
       [1],
       [7],
       [2],
       [8],
       [8],
       [7],
       [8],
       [5],
       [1],
       [8],
       [7],
       [1],
       [3],
       [0],
       [5],
       [7],
       [9],
       [7],
       [4],
       [5],
       [9],
       [8],
       [0],
       [7],
       [9],
       [8],
       [2],
       [7],
       [6],
       [9],
       [4],
       [3],
       [9],
       [6],
       [4],
       [7],
       [6],
       [5],
       [1],
       [5],
       [8],
       [8],
       [0],
       [4],
       [0],
       [5],
       [5],
       [1],
       [1],
       [8],
       [9],
       [0],
       [3],
       [1],
       [9],
       [2],
       [2],
       [5],
       [3],
       [9],
       [9],
       [4],
       [0],
       [3],
       [0],
       [0],
       [9],
       [8],
       [1],
       [5],
       [7],
       [0],
       [8],
       [2],
       [4],
       [7],
       [0],
       [2],
       [3],
       [6],
       [3],
       [8],
       [5],
       [0],
       [3],
       [4],
       [3],
       [9],
       [0],
       [6],
       [1],
       [0],
       [9],
       [1],
       [0],
       [7],
       [9],
       [1],
       [2],
       [6],
       [9],
       [3],
       [4],
       [6],
       [0],
       [0],
       [6],
       [6],
       [6],
       [3],
       [2],
       [6],
       [1],
       [8],
       [2],
       [1],
       [6],
       [8],
       [6],
       [8],
       [0],
       [4],
       [0],
       [7],
       [7],
       [5],
       [5],
       [3],
       [5],
       [2],
       [3],
       [4],
       [1],
       [7],
       [5],
       [4],
       [6],
       [1],
       [9],
       [3],
       [6],
       [6],
       [9],
       [3],
       [8],
       [0],
       [7],
       [2],
       [6],
       [2],
       [5],
       [8],
       [5],
       [4],
       [6],
       [8],
       [9],
       [9],
       [1],
       [0],
       [2],
       [2],
       [7],
       [3],
       [2],
       [8],
       [0],
       [9],
       [5],
       [8],
       [1],
       [9],
       [4],
       [1],
       [3],
       [8],
       [1],
       [4],
       [7],
       [9],
       [4],
       [2],
       [7],
       [0],
       [7],
       [0],
       [6],
       [6],
       [9],
       [0],
       [9],
       [2],
       [8],
       [7],
       [2],
       [2],
       [5],
       [1],
       [2],
       [6],
       [2],
       [9],
       [6],
       [2],
       [3],
       [0],
       [3],
       [9],
       [8],
       [7],
       [8],
       [8],
       [4],
       [0],
       [1],
       [8],
       [2],
       [7],
       [9],
       [3],
       [6],
       [1],
       [9],
       [0],
       [7],
       [3],
       [7],
       [4],
       [5],
       [0],
       [0],
       [2],
       [9],
       [3],
       [4],
       [0],
       [6],
       [2],
       [5],
       [3],
       [7],
       [3],
       [7],
       [2],
       [5],
       [3],
       [1],
       [1],
       [4],
       [9],
       [9],
       [5],
       [7],
       [5],
       [0],
       [2],
       [2],
       [2],
       [9],
       [7],
       [3],
       [9],
       [4],
       [3],
       [5],
       [4],
       [6],
       [5],
       [6],
       [1],
       [4],
       [3],
       [4],
       [4],
       [3],
       [7],
       [8],
       [3],
       [7],
       [8],
       [0],
       [5],
       [7],
       [6],
       [0],
       [5],
       [4],
       [8],
       [6],
       [8],
       [5],
       [5],
       [9],
       [9],
       [9],
       [5],
       [0],
       [1],
       [0],
       [8],
       [1],
       [1],
       [8],
       [0],
       [2],
       [2],
       [0],
       [4],
       [6],
       [5],
       [4],
       [9],
       [4],
       [7],
       [9],
       [9],
       [4],
       [5],
       [6],
       [6],
       [1],
       [5],
       [3],
       [8],
       [9],
       [5],
       [8],
       [5],
       [7],
       [0],
       [7],
       [0],
       [5],
       [0],
       [0],
       [4],
       [6],
       [9],
       [0],
       [9],
       [5],
       [6],
       [6],
       [6],
       [2],
       [9],
       [0],
       [1],
       [7],
       [6],
       [7],
       [5],
       [9],
       [1],
       [6],
       [2],
       [5],
       [5],
       [5],
       [8],
       [5],
       [9],
       [4],
       [6],
       [4],
       [3],
       [2],
       [0],
       [7],
       [6],
       [2],
       [2],
       [3],
       [9],
       [7],
       [9],
       [2],
       [6],
       [7],
       [1],
       [3],
       [6],
       [6],
       [8],
       [9],
       [7],
       [5],
       [4],
       [0],
       [8],
       [4],
       [0],
       [9],
       [3],
       [4],
       [8],
       [9],
       [6],
       [9],
       [2],
       [6],
       [1],
       [4],
       [7],
       [3],
       [5],
       [3],
       [8],
       [5],
       [0],
       [2],
       [1],
       [6],
       [4],
       [3],
       [3],
       [9],
       [6],
       [9],
       [8],
       [8],
       [5],
       [8],
       [6],
       [6],
       [2],
       [1],
       [7],
       [7],
       [1],
       [2],
       [7],
       [9],
       [9],
       [4],
       [4],
       [1],
       [2],
       [5],
       [6],
       [8],
       [7],
       [6],
       [8],
       [3],
       [0],
       [5],
       [5],
       [3],
       [0],
       [7],
       [9],
       [1],
       [3],
       [4],
       [4],
       [5],
       [3],
       [9],
       [5],
       [6],
       [9],
       [2],
       [1],
       [1],
       [4],
       [1],
       [9],
       [4],
       [7],
       [6],
       [3],
       [8],
       [9],
       [0],
       [1],
       [3],
       [6],
       [3],
       [6],
       [3],
       [2],
       [0],
       [3],
       [1],
       [0],
       [5],
       [9],
       [6],
       [4],
       [8],
       [9],
       [6],
       [9],
       [6],
       [3],
       [0],
       [3],
       [2],
       [2],
       [7],
       [8],
       [3],
       [8],
       [2],
       [7],
       [5],
       [7],
       [2],
       [4],
       [8],
       [7],
       [4],
       [2],
       [9],
       [8],
       [8],
       [6],
       [8],
       [8],
       [7],
       [4],
       [3],
       [3],
       [8],
       [4],
       [9],
       [4],
       [8],
       [8],
       [1],
       [8],
       [2],
       [1],
       [3],
       [6],
       [5],
       [4],
       [2],
       [7],
       [9],
       [9],
       [4],
       [1],
       [4],
       [1],
       [3],
       [2],
       [7],
       [0],
       [7],
       [9],
       [7],
       [6],
       [6],
       [2],
       [5],
       [9],
       [2],
       [9],
       [1],
       [2],
       [2],
       [6],
       [8],
       [2],
       [1],
       [3],
       [6],
       [6],
       [0],
       [1],
       [2],
       [7],
       [0],
       [5],
       [4],
       [6],
       [1],
       [6],
       [4],
       [0],
       [2],
       [2],
       [6],
       [0],
       [5],
       [9],
       [1],
       [7],
       [6],
       [7],
       [0],
       [3],
       [9],
       [6],
       [8],
       [3],
       [0],
       [3],
       [4],
       [7],
       [7],
       [1],
       [4],
       [7],
       [2],
       [7],
       [1],
       [4],
       [7],
       [4],
       [4],
       [8],
       [4],
       [7],
       [7],
       [5],
       [3],
       [7],
       [2],
       [0],
       [8],
       [9],
       [5],
       [8],
       [3],
       [6],
       [2],
       [0],
       [8],
       [7],
       [3],
       [7],
       [6],
       [5],
       [3],
       [1],
       [3],
       [2],
       [2],
       [5],
       [4],
       [1],
       [2],
       [9],
       [2],
       [7],
       [0],
       [7],
       [2],
       [1],
       [3],
       [2],
       [0],
       [2],
       [4],
       [7],
       [9],
       [8],
       [9],
       [0],
       [7],
       [7],
       [0],
       [7],
       [8],
       [4],
       [6],
       [3],
       [3],
       [0],
       [1],
       [3],
       [7],
       [0],
       [1],
       [3],
       [1],
       [4],
       [2],
       [3],
       [8],
       [4],
       [2],
       [3],
       [7],
       [8],
       [4],
       [3],
       [0],
       [9],
       [0],
       [0],
       [1],
       [0],
       [4],
       [4],
       [6],
       [7],
       [6],
       [1],
       [1],
       [3],
       [7],
       [3],
       [5],
       [2],
       [6],
       [6],
       [5],
       [8],
       [7],
       [1],
       [6],
       [8],
       [8],
       [5],
       [3],
       [0],
       [4],
       [0],
       [1],
       [3],
       [8],
       [8],
       [0],
       [6],
       [9],
       [9],
       [9],
       [5],
       [5],
       [8],
       [6],
       [0],
       [0],
       [4],
       [2],
       [3],
       [2],
       [7],
       [2],
       [2],
       [5],
       [9],
       [8],
       [9],
       [1],
       [7],
       [4],
       [0],
       [3],
       [0],
       [1],
       [3],
       [8],
       [3],
       [9],
       [6],
       [1],
       [4],
       [7],
       [0],
       [3],
       [7],
       [8],
       [9],
       [1],
       [1],
       [6],
       [6],
       [6],
       [6],
       [9],
       [1],
       [9],
       [9],
       [4],
       [2],
       [1],
       [7],
       [0],
       [6],
       [8],
       [1],
       [9],
       [2],
       [9],
       [0],
       [4],
       [7],
       [8],
       [3],
       [1],
       [2],
       [0],
       [1],
       [5],
       [8],
       [4],
       [6],
       [3],
       [8],
       [1],
       [3],
       [8]], dtype=uint8)}
2020-10-28 13:37:26,602 - engine_logger:INFO - Getting MNIST data.... 
2020-10-28 13:37:27,571 - engine_logger:INFO - Got MNIST data(reduced sample): {'x_train': array([[[[ 59,  62,  63],
         [ 43,  46,  45],
         [ 50,  48,  43],
         ...,
         [158, 132, 108],
         [152, 125, 102],
         [148, 124, 103]],

        [[ 16,  20,  20],
         [  0,   0,   0],
         [ 18,   8,   0],
         ...,
         [123,  88,  55],
         [119,  83,  50],
         [122,  87,  57]],

        [[ 25,  24,  21],
         [ 16,   7,   0],
         [ 49,  27,   8],
         ...,
         [118,  84,  50],
         [120,  84,  50],
         [109,  73,  42]],

        ...,

        [[208, 170,  96],
         [201, 153,  34],
         [198, 161,  26],
         ...,
         [160, 133,  70],
         [ 56,  31,   7],
         [ 53,  34,  20]],

        [[180, 139,  96],
         [173, 123,  42],
         [186, 144,  30],
         ...,
         [184, 148,  94],
         [ 97,  62,  34],
         [ 83,  53,  34]],

        [[177, 144, 116],
         [168, 129,  94],
         [179, 142,  87],
         ...,
         [216, 184, 140],
         [151, 118,  84],
         [123,  92,  72]]],


       [[[154, 177, 187],
         [126, 137, 136],
         [105, 104,  95],
         ...,
         [ 91,  95,  71],
         [ 87,  90,  71],
         [ 79,  81,  70]],

        [[140, 160, 169],
         [145, 153, 154],
         [125, 125, 118],
         ...,
         [ 96,  99,  78],
         [ 77,  80,  62],
         [ 71,  73,  61]],

        [[140, 155, 164],
         [139, 146, 149],
         [115, 115, 112],
         ...,
         [ 79,  82,  64],
         [ 68,  70,  55],
         [ 67,  69,  55]],

        ...,

        [[175, 167, 166],
         [156, 154, 160],
         [154, 160, 170],
         ...,
         [ 42,  34,  36],
         [ 61,  53,  57],
         [ 93,  83,  91]],

        [[165, 154, 128],
         [156, 152, 130],
         [159, 161, 142],
         ...,
         [103,  93,  96],
         [123, 114, 120],
         [131, 121, 131]],

        [[163, 148, 120],
         [158, 148, 122],
         [163, 156, 133],
         ...,
         [143, 133, 139],
         [143, 134, 142],
         [143, 133, 144]]],


       [[[255, 255, 255],
         [253, 253, 253],
         [253, 253, 253],
         ...,
         [253, 253, 253],
         [253, 253, 253],
         [253, 253, 253]],

        [[255, 255, 255],
         [255, 255, 255],
         [255, 255, 255],
         ...,
         [255, 255, 255],
         [255, 255, 255],
         [255, 255, 255]],

        [[255, 255, 255],
         [254, 254, 254],
         [254, 254, 254],
         ...,
         [254, 254, 254],
         [254, 254, 254],
         [254, 254, 254]],

        ...,

        [[113, 120, 112],
         [111, 118, 111],
         [105, 112, 106],
         ...,
         [ 72,  81,  80],
         [ 72,  80,  79],
         [ 72,  80,  79]],

        [[111, 118, 110],
         [104, 111, 104],
         [ 99, 106,  98],
         ...,
         [ 68,  75,  73],
         [ 70,  76,  75],
         [ 78,  84,  82]],

        [[106, 113, 105],
         [ 99, 106,  98],
         [ 95, 102,  94],
         ...,
         [ 78,  85,  83],
         [ 79,  85,  83],
         [ 80,  86,  84]]],


       ...,


       [[[167, 163, 145],
         [206, 201, 181],
         [202, 196, 177],
         ...,
         [ 91,  85,  89],
         [ 50,  64,  68],
         [ 46,  86,  90]],

        [[156, 153, 136],
         [206, 201, 181],
         [206, 199, 180],
         ...,
         [171, 166, 174],
         [ 99, 115, 123],
         [ 48,  88,  94]],

        [[147, 143, 128],
         [192, 186, 167],
         [206, 198, 177],
         ...,
         [173, 176, 186],
         [106, 130, 140],
         [ 48,  90,  96]],

        ...,

        [[144, 156, 151],
         [145, 153, 148],
         [152, 160, 156],
         ...,
         [ 45,  85,  91],
         [ 41,  78,  85],
         [ 47,  88,  94]],

        [[143, 155, 150],
         [148, 157, 154],
         [156, 167, 167],
         ...,
         [ 32,  56,  65],
         [ 31,  58,  66],
         [ 34,  66,  73]],

        [[139, 154, 149],
         [144, 157, 155],
         [140, 157, 159],
         ...,
         [ 39,  75,  81],
         [ 42,  82,  87],
         [ 42,  78,  84]]],


       [[[154, 152, 125],
         [156, 154, 130],
         [149, 146, 125],
         ...,
         [156, 154, 110],
         [131, 130,  97],
         [154, 149, 111]],

        [[163, 150, 111],
         [178, 167, 125],
         [179, 168, 126],
         ...,
         [185, 175, 127],
         [166, 165, 118],
         [168, 164, 117]],

        [[198, 184, 126],
         [188, 173, 117],
         [193, 179, 121],
         ...,
         [188, 166, 118],
         [184, 172, 126],
         [183, 179, 128]],

        ...,

        [[187, 185, 132],
         [175, 175, 129],
         [162, 162, 109],
         ...,
         [201, 217, 129],
         [200, 220, 129],
         [190, 205, 118]],

        [[157, 160, 109],
         [147, 153, 104],
         [144, 157,  98],
         ...,
         [213, 232, 134],
         [191, 227, 117],
         [173, 216, 105]],

        [[153, 150, 102],
         [150, 159,  99],
         [173, 195, 124],
         ...,
         [195, 234, 113],
         [187, 237, 108],
         [194, 247, 114]]],


       [[[ 45,  32,  21],
         [ 48,  34,  21],
         [ 66,  54,  41],
         ...,
         [ 19,   9,   7],
         [ 23,  14,  10],
         [ 20,  10,   8]],

        [[ 47,  33,  21],
         [ 50,  35,  22],
         [ 71,  58,  44],
         ...,
         [ 22,  10,   8],
         [ 22,  11,  10],
         [ 19,   8,   7]],

        [[ 47,  35,  22],
         [ 54,  40,  24],
         [ 63,  50,  35],
         ...,
         [ 24,  10,   7],
         [ 18,   6,   6],
         [ 18,   7,   6]],

        ...,

        [[109, 105,  66],
         [113, 108,  68],
         [115, 106,  67],
         ...,
         [103,  87,  55],
         [ 85,  75,  43],
         [ 97,  85,  52]],

        [[ 96,  90,  53],
         [114, 106,  69],
         [111, 102,  64],
         ...,
         [164, 146, 104],
         [154, 135,  89],
         [152, 139,  97]],

        [[ 97,  91,  52],
         [ 85,  79,  40],
         [105,  99,  57],
         ...,
         [161, 148, 108],
         [156, 137,  93],
         [156, 142, 100]]]], dtype=uint8), 'y_train': array([[6],
       [9],
       [9],
       ...,
       [5],
       [4],
       [6]], dtype=uint8), 'x_test': array([[[[158, 112,  49],
         [159, 111,  47],
         [165, 116,  51],
         ...,
         [137,  95,  36],
         [126,  91,  36],
         [116,  85,  33]],

        [[152, 112,  51],
         [151, 110,  40],
         [159, 114,  45],
         ...,
         [136,  95,  31],
         [125,  91,  32],
         [119,  88,  34]],

        [[151, 110,  47],
         [151, 109,  33],
         [158, 111,  36],
         ...,
         [139,  98,  34],
         [130,  95,  34],
         [120,  89,  33]],

        ...,

        [[ 68, 124, 177],
         [ 42, 100, 148],
         [ 31,  88, 137],
         ...,
         [ 38,  97, 146],
         [ 13,  64, 108],
         [ 40,  85, 127]],

        [[ 61, 116, 168],
         [ 49, 102, 148],
         [ 35,  85, 132],
         ...,
         [ 26,  82, 130],
         [ 29,  82, 126],
         [ 20,  64, 107]],

        [[ 54, 107, 160],
         [ 56, 105, 149],
         [ 45,  89, 132],
         ...,
         [ 24,  77, 124],
         [ 34,  84, 129],
         [ 21,  67, 110]]],


       [[[235, 235, 235],
         [231, 231, 231],
         [232, 232, 232],
         ...,
         [233, 233, 233],
         [233, 233, 233],
         [232, 232, 232]],

        [[238, 238, 238],
         [235, 235, 235],
         [235, 235, 235],
         ...,
         [236, 236, 236],
         [236, 236, 236],
         [235, 235, 235]],

        [[237, 237, 237],
         [234, 234, 234],
         [234, 234, 234],
         ...,
         [235, 235, 235],
         [235, 235, 235],
         [234, 234, 234]],

        ...,

        [[ 87,  99,  89],
         [ 43,  51,  37],
         [ 19,  23,  11],
         ...,
         [169, 184, 179],
         [182, 197, 193],
         [188, 202, 201]],

        [[ 82,  96,  82],
         [ 46,  57,  36],
         [ 36,  44,  22],
         ...,
         [174, 189, 183],
         [185, 200, 196],
         [187, 202, 200]],

        [[ 85, 101,  83],
         [ 62,  75,  48],
         [ 58,  67,  38],
         ...,
         [168, 183, 178],
         [180, 195, 191],
         [186, 200, 199]]],


       [[[158, 190, 222],
         [158, 187, 218],
         [139, 166, 194],
         ...,
         [228, 231, 234],
         [237, 239, 243],
         [238, 241, 246]],

        [[170, 200, 229],
         [172, 199, 226],
         [151, 176, 201],
         ...,
         [232, 232, 236],
         [246, 246, 250],
         [246, 247, 251]],

        [[174, 201, 225],
         [176, 200, 222],
         [157, 179, 199],
         ...,
         [230, 229, 232],
         [250, 249, 251],
         [245, 244, 247]],

        ...,

        [[ 31,  40,  45],
         [ 30,  39,  44],
         [ 26,  35,  40],
         ...,
         [ 37,  40,  46],
         [  9,  13,  14],
         [  4,   7,   5]],

        [[ 23,  34,  39],
         [ 27,  38,  43],
         [ 25,  36,  41],
         ...,
         [ 19,  20,  24],
         [  4,   6,   3],
         [  5,   7,   3]],

        [[ 28,  41,  47],
         [ 30,  43,  50],
         [ 32,  45,  52],
         ...,
         [  5,   6,   8],
         [  4,   5,   3],
         [  7,   8,   7]]],


       ...,


       [[[103, 124, 101],
         [124, 149, 120],
         [ 73,  98,  73],
         ...,
         [ 17,  25,  16],
         [ 10,  15,   9],
         [ 15,  19,  13]],

        [[162, 175, 148],
         [122, 137, 107],
         [111, 126, 103],
         ...,
         [ 28,  38,  25],
         [ 18,  22,  16],
         [ 11,  12,   8]],

        [[226, 236, 200],
         [209, 217, 183],
         [204, 216, 161],
         ...,
         [ 21,  29,  18],
         [ 19,  24,  17],
         [ 14,  17,  11]],

        ...,

        [[132, 134, 145],
         [126, 128, 138],
         [127, 127, 139],
         ...,
         [ 43,  36,  33],
         [ 64,  46,  31],
         [ 88,  53,  32]],

        [[125, 123, 134],
         [123, 122, 132],
         [121, 120, 132],
         ...,
         [ 41,  42,  43],
         [ 52,  39,  35],
         [ 87,  56,  43]],

        [[121, 119, 131],
         [119, 117, 129],
         [118, 118, 130],
         ...,
         [ 48,  49,  53],
         [ 53,  48,  50],
         [ 67,  42,  37]]],


       [[[ 77, 114,  33],
         [ 72, 111,  25],
         [ 76, 110,  34],
         ...,
         [ 59,  64,  46],
         [ 56,  58,  42],
         [ 56,  58,  40]],

        [[ 74, 107,  34],
         [ 71,  93,  31],
         [ 80, 102,  39],
         ...,
         [ 52,  55,  44],
         [ 57,  60,  45],
         [ 54,  58,  39]],

        [[ 80, 101,  38],
         [ 84,  98,  43],
         [ 74,  95,  32],
         ...,
         [ 50,  55,  51],
         [ 50,  55,  50],
         [ 61,  67,  59]],

        ...,

        [[ 65,  92,  26],
         [ 63,  84,  24],
         [ 52,  77,  20],
         ...,
         [ 84,  82,  68],
         [ 56,  57,  48],
         [ 28,  33,  24]],

        [[ 70,  89,  26],
         [ 77,  89,  32],
         [ 60,  92,  30],
         ...,
         [ 77,  77,  66],
         [ 39,  39,  35],
         [ 32,  39,  28]],

        [[ 48,  73,  12],
         [ 57,  71,  21],
         [ 56,  85,  30],
         ...,
         [ 51,  53,  47],
         [ 24,  27,  22],
         [ 35,  44,  30]]],


       [[[175, 180, 174],
         [176, 181, 175],
         [181, 186, 180],
         ...,
         [193, 207, 210],
         [190, 204, 207],
         [188, 202, 205]],

        [[177, 182, 176],
         [179, 184, 178],
         [183, 188, 182],
         ...,
         [196, 210, 213],
         [192, 206, 209],
         [191, 205, 208]],

        [[176, 181, 175],
         [177, 182, 176],
         [182, 187, 181],
         ...,
         [194, 208, 211],
         [191, 205, 208],
         [189, 203, 206]],

        ...,

        [[122, 121, 129],
         [117, 118, 129],
         [114, 118, 130],
         ...,
         [ 58,  73,  91],
         [ 81,  97, 118],
         [ 99, 118, 141]],

        [[116, 115, 123],
         [110, 111, 121],
         [107, 111, 123],
         ...,
         [ 57,  70,  88],
         [ 78,  93, 113],
         [100, 117, 140]],

        [[113, 112, 119],
         [106, 107, 117],
         [105, 109, 121],
         ...,
         [ 57,  68,  85],
         [ 71,  85, 103],
         [ 93, 110, 131]]]], dtype=uint8), 'y_test': array([[3],
       [8],
       [8],
       [0],
       [6],
       [6],
       [1],
       [6],
       [3],
       [1],
       [0],
       [9],
       [5],
       [7],
       [9],
       [8],
       [5],
       [7],
       [8],
       [6],
       [7],
       [0],
       [4],
       [9],
       [5],
       [2],
       [4],
       [0],
       [9],
       [6],
       [6],
       [5],
       [4],
       [5],
       [9],
       [2],
       [4],
       [1],
       [9],
       [5],
       [4],
       [6],
       [5],
       [6],
       [0],
       [9],
       [3],
       [9],
       [7],
       [6],
       [9],
       [8],
       [0],
       [3],
       [8],
       [8],
       [7],
       [7],
       [4],
       [6],
       [7],
       [3],
       [6],
       [3],
       [6],
       [2],
       [1],
       [2],
       [3],
       [7],
       [2],
       [6],
       [8],
       [8],
       [0],
       [2],
       [9],
       [3],
       [3],
       [8],
       [8],
       [1],
       [1],
       [7],
       [2],
       [5],
       [2],
       [7],
       [8],
       [9],
       [0],
       [3],
       [8],
       [6],
       [4],
       [6],
       [6],
       [0],
       [0],
       [7],
       [4],
       [5],
       [6],
       [3],
       [1],
       [1],
       [3],
       [6],
       [8],
       [7],
       [4],
       [0],
       [6],
       [2],
       [1],
       [3],
       [0],
       [4],
       [2],
       [7],
       [8],
       [3],
       [1],
       [2],
       [8],
       [0],
       [8],
       [3],
       [5],
       [2],
       [4],
       [1],
       [8],
       [9],
       [1],
       [2],
       [9],
       [7],
       [2],
       [9],
       [6],
       [5],
       [6],
       [3],
       [8],
       [7],
       [6],
       [2],
       [5],
       [2],
       [8],
       [9],
       [6],
       [0],
       [0],
       [5],
       [2],
       [9],
       [5],
       [4],
       [2],
       [1],
       [6],
       [6],
       [8],
       [4],
       [8],
       [4],
       [5],
       [0],
       [9],
       [9],
       [9],
       [8],
       [9],
       [9],
       [3],
       [7],
       [5],
       [0],
       [0],
       [5],
       [2],
       [2],
       [3],
       [8],
       [6],
       [3],
       [4],
       [0],
       [5],
       [8],
       [0],
       [1],
       [7],
       [2],
       [8],
       [8],
       [7],
       [8],
       [5],
       [1],
       [8],
       [7],
       [1],
       [3],
       [0],
       [5],
       [7],
       [9],
       [7],
       [4],
       [5],
       [9],
       [8],
       [0],
       [7],
       [9],
       [8],
       [2],
       [7],
       [6],
       [9],
       [4],
       [3],
       [9],
       [6],
       [4],
       [7],
       [6],
       [5],
       [1],
       [5],
       [8],
       [8],
       [0],
       [4],
       [0],
       [5],
       [5],
       [1],
       [1],
       [8],
       [9],
       [0],
       [3],
       [1],
       [9],
       [2],
       [2],
       [5],
       [3],
       [9],
       [9],
       [4],
       [0],
       [3],
       [0],
       [0],
       [9],
       [8],
       [1],
       [5],
       [7],
       [0],
       [8],
       [2],
       [4],
       [7],
       [0],
       [2],
       [3],
       [6],
       [3],
       [8],
       [5],
       [0],
       [3],
       [4],
       [3],
       [9],
       [0],
       [6],
       [1],
       [0],
       [9],
       [1],
       [0],
       [7],
       [9],
       [1],
       [2],
       [6],
       [9],
       [3],
       [4],
       [6],
       [0],
       [0],
       [6],
       [6],
       [6],
       [3],
       [2],
       [6],
       [1],
       [8],
       [2],
       [1],
       [6],
       [8],
       [6],
       [8],
       [0],
       [4],
       [0],
       [7],
       [7],
       [5],
       [5],
       [3],
       [5],
       [2],
       [3],
       [4],
       [1],
       [7],
       [5],
       [4],
       [6],
       [1],
       [9],
       [3],
       [6],
       [6],
       [9],
       [3],
       [8],
       [0],
       [7],
       [2],
       [6],
       [2],
       [5],
       [8],
       [5],
       [4],
       [6],
       [8],
       [9],
       [9],
       [1],
       [0],
       [2],
       [2],
       [7],
       [3],
       [2],
       [8],
       [0],
       [9],
       [5],
       [8],
       [1],
       [9],
       [4],
       [1],
       [3],
       [8],
       [1],
       [4],
       [7],
       [9],
       [4],
       [2],
       [7],
       [0],
       [7],
       [0],
       [6],
       [6],
       [9],
       [0],
       [9],
       [2],
       [8],
       [7],
       [2],
       [2],
       [5],
       [1],
       [2],
       [6],
       [2],
       [9],
       [6],
       [2],
       [3],
       [0],
       [3],
       [9],
       [8],
       [7],
       [8],
       [8],
       [4],
       [0],
       [1],
       [8],
       [2],
       [7],
       [9],
       [3],
       [6],
       [1],
       [9],
       [0],
       [7],
       [3],
       [7],
       [4],
       [5],
       [0],
       [0],
       [2],
       [9],
       [3],
       [4],
       [0],
       [6],
       [2],
       [5],
       [3],
       [7],
       [3],
       [7],
       [2],
       [5],
       [3],
       [1],
       [1],
       [4],
       [9],
       [9],
       [5],
       [7],
       [5],
       [0],
       [2],
       [2],
       [2],
       [9],
       [7],
       [3],
       [9],
       [4],
       [3],
       [5],
       [4],
       [6],
       [5],
       [6],
       [1],
       [4],
       [3],
       [4],
       [4],
       [3],
       [7],
       [8],
       [3],
       [7],
       [8],
       [0],
       [5],
       [7],
       [6],
       [0],
       [5],
       [4],
       [8],
       [6],
       [8],
       [5],
       [5],
       [9],
       [9],
       [9],
       [5],
       [0],
       [1],
       [0],
       [8],
       [1],
       [1],
       [8],
       [0],
       [2],
       [2],
       [0],
       [4],
       [6],
       [5],
       [4],
       [9],
       [4],
       [7],
       [9],
       [9],
       [4],
       [5],
       [6],
       [6],
       [1],
       [5],
       [3],
       [8],
       [9],
       [5],
       [8],
       [5],
       [7],
       [0],
       [7],
       [0],
       [5],
       [0],
       [0],
       [4],
       [6],
       [9],
       [0],
       [9],
       [5],
       [6],
       [6],
       [6],
       [2],
       [9],
       [0],
       [1],
       [7],
       [6],
       [7],
       [5],
       [9],
       [1],
       [6],
       [2],
       [5],
       [5],
       [5],
       [8],
       [5],
       [9],
       [4],
       [6],
       [4],
       [3],
       [2],
       [0],
       [7],
       [6],
       [2],
       [2],
       [3],
       [9],
       [7],
       [9],
       [2],
       [6],
       [7],
       [1],
       [3],
       [6],
       [6],
       [8],
       [9],
       [7],
       [5],
       [4],
       [0],
       [8],
       [4],
       [0],
       [9],
       [3],
       [4],
       [8],
       [9],
       [6],
       [9],
       [2],
       [6],
       [1],
       [4],
       [7],
       [3],
       [5],
       [3],
       [8],
       [5],
       [0],
       [2],
       [1],
       [6],
       [4],
       [3],
       [3],
       [9],
       [6],
       [9],
       [8],
       [8],
       [5],
       [8],
       [6],
       [6],
       [2],
       [1],
       [7],
       [7],
       [1],
       [2],
       [7],
       [9],
       [9],
       [4],
       [4],
       [1],
       [2],
       [5],
       [6],
       [8],
       [7],
       [6],
       [8],
       [3],
       [0],
       [5],
       [5],
       [3],
       [0],
       [7],
       [9],
       [1],
       [3],
       [4],
       [4],
       [5],
       [3],
       [9],
       [5],
       [6],
       [9],
       [2],
       [1],
       [1],
       [4],
       [1],
       [9],
       [4],
       [7],
       [6],
       [3],
       [8],
       [9],
       [0],
       [1],
       [3],
       [6],
       [3],
       [6],
       [3],
       [2],
       [0],
       [3],
       [1],
       [0],
       [5],
       [9],
       [6],
       [4],
       [8],
       [9],
       [6],
       [9],
       [6],
       [3],
       [0],
       [3],
       [2],
       [2],
       [7],
       [8],
       [3],
       [8],
       [2],
       [7],
       [5],
       [7],
       [2],
       [4],
       [8],
       [7],
       [4],
       [2],
       [9],
       [8],
       [8],
       [6],
       [8],
       [8],
       [7],
       [4],
       [3],
       [3],
       [8],
       [4],
       [9],
       [4],
       [8],
       [8],
       [1],
       [8],
       [2],
       [1],
       [3],
       [6],
       [5],
       [4],
       [2],
       [7],
       [9],
       [9],
       [4],
       [1],
       [4],
       [1],
       [3],
       [2],
       [7],
       [0],
       [7],
       [9],
       [7],
       [6],
       [6],
       [2],
       [5],
       [9],
       [2],
       [9],
       [1],
       [2],
       [2],
       [6],
       [8],
       [2],
       [1],
       [3],
       [6],
       [6],
       [0],
       [1],
       [2],
       [7],
       [0],
       [5],
       [4],
       [6],
       [1],
       [6],
       [4],
       [0],
       [2],
       [2],
       [6],
       [0],
       [5],
       [9],
       [1],
       [7],
       [6],
       [7],
       [0],
       [3],
       [9],
       [6],
       [8],
       [3],
       [0],
       [3],
       [4],
       [7],
       [7],
       [1],
       [4],
       [7],
       [2],
       [7],
       [1],
       [4],
       [7],
       [4],
       [4],
       [8],
       [4],
       [7],
       [7],
       [5],
       [3],
       [7],
       [2],
       [0],
       [8],
       [9],
       [5],
       [8],
       [3],
       [6],
       [2],
       [0],
       [8],
       [7],
       [3],
       [7],
       [6],
       [5],
       [3],
       [1],
       [3],
       [2],
       [2],
       [5],
       [4],
       [1],
       [2],
       [9],
       [2],
       [7],
       [0],
       [7],
       [2],
       [1],
       [3],
       [2],
       [0],
       [2],
       [4],
       [7],
       [9],
       [8],
       [9],
       [0],
       [7],
       [7],
       [0],
       [7],
       [8],
       [4],
       [6],
       [3],
       [3],
       [0],
       [1],
       [3],
       [7],
       [0],
       [1],
       [3],
       [1],
       [4],
       [2],
       [3],
       [8],
       [4],
       [2],
       [3],
       [7],
       [8],
       [4],
       [3],
       [0],
       [9],
       [0],
       [0],
       [1],
       [0],
       [4],
       [4],
       [6],
       [7],
       [6],
       [1],
       [1],
       [3],
       [7],
       [3],
       [5],
       [2],
       [6],
       [6],
       [5],
       [8],
       [7],
       [1],
       [6],
       [8],
       [8],
       [5],
       [3],
       [0],
       [4],
       [0],
       [1],
       [3],
       [8],
       [8],
       [0],
       [6],
       [9],
       [9],
       [9],
       [5],
       [5],
       [8],
       [6],
       [0],
       [0],
       [4],
       [2],
       [3],
       [2],
       [7],
       [2],
       [2],
       [5],
       [9],
       [8],
       [9],
       [1],
       [7],
       [4],
       [0],
       [3],
       [0],
       [1],
       [3],
       [8],
       [3],
       [9],
       [6],
       [1],
       [4],
       [7],
       [0],
       [3],
       [7],
       [8],
       [9],
       [1],
       [1],
       [6],
       [6],
       [6],
       [6],
       [9],
       [1],
       [9],
       [9],
       [4],
       [2],
       [1],
       [7],
       [0],
       [6],
       [8],
       [1],
       [9],
       [2],
       [9],
       [0],
       [4],
       [7],
       [8],
       [3],
       [1],
       [2],
       [0],
       [1],
       [5],
       [8],
       [4],
       [6],
       [3],
       [8],
       [1],
       [3],
       [8]], dtype=uint8)}
2020-10-28 13:37:38,323 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 13:37:40,395 - engine_logger:INFO - Getting MNIST data.... 
2020-10-28 13:37:41,364 - engine_logger:INFO - Got MNIST data(reduced sample): {'x_train': array([[[[ 59,  62,  63],
         [ 43,  46,  45],
         [ 50,  48,  43],
         ...,
         [158, 132, 108],
         [152, 125, 102],
         [148, 124, 103]],

        [[ 16,  20,  20],
         [  0,   0,   0],
         [ 18,   8,   0],
         ...,
         [123,  88,  55],
         [119,  83,  50],
         [122,  87,  57]],

        [[ 25,  24,  21],
         [ 16,   7,   0],
         [ 49,  27,   8],
         ...,
         [118,  84,  50],
         [120,  84,  50],
         [109,  73,  42]],

        ...,

        [[208, 170,  96],
         [201, 153,  34],
         [198, 161,  26],
         ...,
         [160, 133,  70],
         [ 56,  31,   7],
         [ 53,  34,  20]],

        [[180, 139,  96],
         [173, 123,  42],
         [186, 144,  30],
         ...,
         [184, 148,  94],
         [ 97,  62,  34],
         [ 83,  53,  34]],

        [[177, 144, 116],
         [168, 129,  94],
         [179, 142,  87],
         ...,
         [216, 184, 140],
         [151, 118,  84],
         [123,  92,  72]]],


       [[[154, 177, 187],
         [126, 137, 136],
         [105, 104,  95],
         ...,
         [ 91,  95,  71],
         [ 87,  90,  71],
         [ 79,  81,  70]],

        [[140, 160, 169],
         [145, 153, 154],
         [125, 125, 118],
         ...,
         [ 96,  99,  78],
         [ 77,  80,  62],
         [ 71,  73,  61]],

        [[140, 155, 164],
         [139, 146, 149],
         [115, 115, 112],
         ...,
         [ 79,  82,  64],
         [ 68,  70,  55],
         [ 67,  69,  55]],

        ...,

        [[175, 167, 166],
         [156, 154, 160],
         [154, 160, 170],
         ...,
         [ 42,  34,  36],
         [ 61,  53,  57],
         [ 93,  83,  91]],

        [[165, 154, 128],
         [156, 152, 130],
         [159, 161, 142],
         ...,
         [103,  93,  96],
         [123, 114, 120],
         [131, 121, 131]],

        [[163, 148, 120],
         [158, 148, 122],
         [163, 156, 133],
         ...,
         [143, 133, 139],
         [143, 134, 142],
         [143, 133, 144]]],


       [[[255, 255, 255],
         [253, 253, 253],
         [253, 253, 253],
         ...,
         [253, 253, 253],
         [253, 253, 253],
         [253, 253, 253]],

        [[255, 255, 255],
         [255, 255, 255],
         [255, 255, 255],
         ...,
         [255, 255, 255],
         [255, 255, 255],
         [255, 255, 255]],

        [[255, 255, 255],
         [254, 254, 254],
         [254, 254, 254],
         ...,
         [254, 254, 254],
         [254, 254, 254],
         [254, 254, 254]],

        ...,

        [[113, 120, 112],
         [111, 118, 111],
         [105, 112, 106],
         ...,
         [ 72,  81,  80],
         [ 72,  80,  79],
         [ 72,  80,  79]],

        [[111, 118, 110],
         [104, 111, 104],
         [ 99, 106,  98],
         ...,
         [ 68,  75,  73],
         [ 70,  76,  75],
         [ 78,  84,  82]],

        [[106, 113, 105],
         [ 99, 106,  98],
         [ 95, 102,  94],
         ...,
         [ 78,  85,  83],
         [ 79,  85,  83],
         [ 80,  86,  84]]],


       ...,


       [[[167, 163, 145],
         [206, 201, 181],
         [202, 196, 177],
         ...,
         [ 91,  85,  89],
         [ 50,  64,  68],
         [ 46,  86,  90]],

        [[156, 153, 136],
         [206, 201, 181],
         [206, 199, 180],
         ...,
         [171, 166, 174],
         [ 99, 115, 123],
         [ 48,  88,  94]],

        [[147, 143, 128],
         [192, 186, 167],
         [206, 198, 177],
         ...,
         [173, 176, 186],
         [106, 130, 140],
         [ 48,  90,  96]],

        ...,

        [[144, 156, 151],
         [145, 153, 148],
         [152, 160, 156],
         ...,
         [ 45,  85,  91],
         [ 41,  78,  85],
         [ 47,  88,  94]],

        [[143, 155, 150],
         [148, 157, 154],
         [156, 167, 167],
         ...,
         [ 32,  56,  65],
         [ 31,  58,  66],
         [ 34,  66,  73]],

        [[139, 154, 149],
         [144, 157, 155],
         [140, 157, 159],
         ...,
         [ 39,  75,  81],
         [ 42,  82,  87],
         [ 42,  78,  84]]],


       [[[154, 152, 125],
         [156, 154, 130],
         [149, 146, 125],
         ...,
         [156, 154, 110],
         [131, 130,  97],
         [154, 149, 111]],

        [[163, 150, 111],
         [178, 167, 125],
         [179, 168, 126],
         ...,
         [185, 175, 127],
         [166, 165, 118],
         [168, 164, 117]],

        [[198, 184, 126],
         [188, 173, 117],
         [193, 179, 121],
         ...,
         [188, 166, 118],
         [184, 172, 126],
         [183, 179, 128]],

        ...,

        [[187, 185, 132],
         [175, 175, 129],
         [162, 162, 109],
         ...,
         [201, 217, 129],
         [200, 220, 129],
         [190, 205, 118]],

        [[157, 160, 109],
         [147, 153, 104],
         [144, 157,  98],
         ...,
         [213, 232, 134],
         [191, 227, 117],
         [173, 216, 105]],

        [[153, 150, 102],
         [150, 159,  99],
         [173, 195, 124],
         ...,
         [195, 234, 113],
         [187, 237, 108],
         [194, 247, 114]]],


       [[[ 45,  32,  21],
         [ 48,  34,  21],
         [ 66,  54,  41],
         ...,
         [ 19,   9,   7],
         [ 23,  14,  10],
         [ 20,  10,   8]],

        [[ 47,  33,  21],
         [ 50,  35,  22],
         [ 71,  58,  44],
         ...,
         [ 22,  10,   8],
         [ 22,  11,  10],
         [ 19,   8,   7]],

        [[ 47,  35,  22],
         [ 54,  40,  24],
         [ 63,  50,  35],
         ...,
         [ 24,  10,   7],
         [ 18,   6,   6],
         [ 18,   7,   6]],

        ...,

        [[109, 105,  66],
         [113, 108,  68],
         [115, 106,  67],
         ...,
         [103,  87,  55],
         [ 85,  75,  43],
         [ 97,  85,  52]],

        [[ 96,  90,  53],
         [114, 106,  69],
         [111, 102,  64],
         ...,
         [164, 146, 104],
         [154, 135,  89],
         [152, 139,  97]],

        [[ 97,  91,  52],
         [ 85,  79,  40],
         [105,  99,  57],
         ...,
         [161, 148, 108],
         [156, 137,  93],
         [156, 142, 100]]]], dtype=uint8), 'y_train': array([[6],
       [9],
       [9],
       ...,
       [5],
       [4],
       [6]], dtype=uint8), 'x_test': array([[[[158, 112,  49],
         [159, 111,  47],
         [165, 116,  51],
         ...,
         [137,  95,  36],
         [126,  91,  36],
         [116,  85,  33]],

        [[152, 112,  51],
         [151, 110,  40],
         [159, 114,  45],
         ...,
         [136,  95,  31],
         [125,  91,  32],
         [119,  88,  34]],

        [[151, 110,  47],
         [151, 109,  33],
         [158, 111,  36],
         ...,
         [139,  98,  34],
         [130,  95,  34],
         [120,  89,  33]],

        ...,

        [[ 68, 124, 177],
         [ 42, 100, 148],
         [ 31,  88, 137],
         ...,
         [ 38,  97, 146],
         [ 13,  64, 108],
         [ 40,  85, 127]],

        [[ 61, 116, 168],
         [ 49, 102, 148],
         [ 35,  85, 132],
         ...,
         [ 26,  82, 130],
         [ 29,  82, 126],
         [ 20,  64, 107]],

        [[ 54, 107, 160],
         [ 56, 105, 149],
         [ 45,  89, 132],
         ...,
         [ 24,  77, 124],
         [ 34,  84, 129],
         [ 21,  67, 110]]],


       [[[235, 235, 235],
         [231, 231, 231],
         [232, 232, 232],
         ...,
         [233, 233, 233],
         [233, 233, 233],
         [232, 232, 232]],

        [[238, 238, 238],
         [235, 235, 235],
         [235, 235, 235],
         ...,
         [236, 236, 236],
         [236, 236, 236],
         [235, 235, 235]],

        [[237, 237, 237],
         [234, 234, 234],
         [234, 234, 234],
         ...,
         [235, 235, 235],
         [235, 235, 235],
         [234, 234, 234]],

        ...,

        [[ 87,  99,  89],
         [ 43,  51,  37],
         [ 19,  23,  11],
         ...,
         [169, 184, 179],
         [182, 197, 193],
         [188, 202, 201]],

        [[ 82,  96,  82],
         [ 46,  57,  36],
         [ 36,  44,  22],
         ...,
         [174, 189, 183],
         [185, 200, 196],
         [187, 202, 200]],

        [[ 85, 101,  83],
         [ 62,  75,  48],
         [ 58,  67,  38],
         ...,
         [168, 183, 178],
         [180, 195, 191],
         [186, 200, 199]]],


       [[[158, 190, 222],
         [158, 187, 218],
         [139, 166, 194],
         ...,
         [228, 231, 234],
         [237, 239, 243],
         [238, 241, 246]],

        [[170, 200, 229],
         [172, 199, 226],
         [151, 176, 201],
         ...,
         [232, 232, 236],
         [246, 246, 250],
         [246, 247, 251]],

        [[174, 201, 225],
         [176, 200, 222],
         [157, 179, 199],
         ...,
         [230, 229, 232],
         [250, 249, 251],
         [245, 244, 247]],

        ...,

        [[ 31,  40,  45],
         [ 30,  39,  44],
         [ 26,  35,  40],
         ...,
         [ 37,  40,  46],
         [  9,  13,  14],
         [  4,   7,   5]],

        [[ 23,  34,  39],
         [ 27,  38,  43],
         [ 25,  36,  41],
         ...,
         [ 19,  20,  24],
         [  4,   6,   3],
         [  5,   7,   3]],

        [[ 28,  41,  47],
         [ 30,  43,  50],
         [ 32,  45,  52],
         ...,
         [  5,   6,   8],
         [  4,   5,   3],
         [  7,   8,   7]]],


       ...,


       [[[103, 124, 101],
         [124, 149, 120],
         [ 73,  98,  73],
         ...,
         [ 17,  25,  16],
         [ 10,  15,   9],
         [ 15,  19,  13]],

        [[162, 175, 148],
         [122, 137, 107],
         [111, 126, 103],
         ...,
         [ 28,  38,  25],
         [ 18,  22,  16],
         [ 11,  12,   8]],

        [[226, 236, 200],
         [209, 217, 183],
         [204, 216, 161],
         ...,
         [ 21,  29,  18],
         [ 19,  24,  17],
         [ 14,  17,  11]],

        ...,

        [[132, 134, 145],
         [126, 128, 138],
         [127, 127, 139],
         ...,
         [ 43,  36,  33],
         [ 64,  46,  31],
         [ 88,  53,  32]],

        [[125, 123, 134],
         [123, 122, 132],
         [121, 120, 132],
         ...,
         [ 41,  42,  43],
         [ 52,  39,  35],
         [ 87,  56,  43]],

        [[121, 119, 131],
         [119, 117, 129],
         [118, 118, 130],
         ...,
         [ 48,  49,  53],
         [ 53,  48,  50],
         [ 67,  42,  37]]],


       [[[ 77, 114,  33],
         [ 72, 111,  25],
         [ 76, 110,  34],
         ...,
         [ 59,  64,  46],
         [ 56,  58,  42],
         [ 56,  58,  40]],

        [[ 74, 107,  34],
         [ 71,  93,  31],
         [ 80, 102,  39],
         ...,
         [ 52,  55,  44],
         [ 57,  60,  45],
         [ 54,  58,  39]],

        [[ 80, 101,  38],
         [ 84,  98,  43],
         [ 74,  95,  32],
         ...,
         [ 50,  55,  51],
         [ 50,  55,  50],
         [ 61,  67,  59]],

        ...,

        [[ 65,  92,  26],
         [ 63,  84,  24],
         [ 52,  77,  20],
         ...,
         [ 84,  82,  68],
         [ 56,  57,  48],
         [ 28,  33,  24]],

        [[ 70,  89,  26],
         [ 77,  89,  32],
         [ 60,  92,  30],
         ...,
         [ 77,  77,  66],
         [ 39,  39,  35],
         [ 32,  39,  28]],

        [[ 48,  73,  12],
         [ 57,  71,  21],
         [ 56,  85,  30],
         ...,
         [ 51,  53,  47],
         [ 24,  27,  22],
         [ 35,  44,  30]]],


       [[[175, 180, 174],
         [176, 181, 175],
         [181, 186, 180],
         ...,
         [193, 207, 210],
         [190, 204, 207],
         [188, 202, 205]],

        [[177, 182, 176],
         [179, 184, 178],
         [183, 188, 182],
         ...,
         [196, 210, 213],
         [192, 206, 209],
         [191, 205, 208]],

        [[176, 181, 175],
         [177, 182, 176],
         [182, 187, 181],
         ...,
         [194, 208, 211],
         [191, 205, 208],
         [189, 203, 206]],

        ...,

        [[122, 121, 129],
         [117, 118, 129],
         [114, 118, 130],
         ...,
         [ 58,  73,  91],
         [ 81,  97, 118],
         [ 99, 118, 141]],

        [[116, 115, 123],
         [110, 111, 121],
         [107, 111, 123],
         ...,
         [ 57,  70,  88],
         [ 78,  93, 113],
         [100, 117, 140]],

        [[113, 112, 119],
         [106, 107, 117],
         [105, 109, 121],
         ...,
         [ 57,  68,  85],
         [ 71,  85, 103],
         [ 93, 110, 131]]]], dtype=uint8), 'y_test': array([[3],
       [8],
       [8],
       [0],
       [6],
       [6],
       [1],
       [6],
       [3],
       [1],
       [0],
       [9],
       [5],
       [7],
       [9],
       [8],
       [5],
       [7],
       [8],
       [6],
       [7],
       [0],
       [4],
       [9],
       [5],
       [2],
       [4],
       [0],
       [9],
       [6],
       [6],
       [5],
       [4],
       [5],
       [9],
       [2],
       [4],
       [1],
       [9],
       [5],
       [4],
       [6],
       [5],
       [6],
       [0],
       [9],
       [3],
       [9],
       [7],
       [6],
       [9],
       [8],
       [0],
       [3],
       [8],
       [8],
       [7],
       [7],
       [4],
       [6],
       [7],
       [3],
       [6],
       [3],
       [6],
       [2],
       [1],
       [2],
       [3],
       [7],
       [2],
       [6],
       [8],
       [8],
       [0],
       [2],
       [9],
       [3],
       [3],
       [8],
       [8],
       [1],
       [1],
       [7],
       [2],
       [5],
       [2],
       [7],
       [8],
       [9],
       [0],
       [3],
       [8],
       [6],
       [4],
       [6],
       [6],
       [0],
       [0],
       [7],
       [4],
       [5],
       [6],
       [3],
       [1],
       [1],
       [3],
       [6],
       [8],
       [7],
       [4],
       [0],
       [6],
       [2],
       [1],
       [3],
       [0],
       [4],
       [2],
       [7],
       [8],
       [3],
       [1],
       [2],
       [8],
       [0],
       [8],
       [3],
       [5],
       [2],
       [4],
       [1],
       [8],
       [9],
       [1],
       [2],
       [9],
       [7],
       [2],
       [9],
       [6],
       [5],
       [6],
       [3],
       [8],
       [7],
       [6],
       [2],
       [5],
       [2],
       [8],
       [9],
       [6],
       [0],
       [0],
       [5],
       [2],
       [9],
       [5],
       [4],
       [2],
       [1],
       [6],
       [6],
       [8],
       [4],
       [8],
       [4],
       [5],
       [0],
       [9],
       [9],
       [9],
       [8],
       [9],
       [9],
       [3],
       [7],
       [5],
       [0],
       [0],
       [5],
       [2],
       [2],
       [3],
       [8],
       [6],
       [3],
       [4],
       [0],
       [5],
       [8],
       [0],
       [1],
       [7],
       [2],
       [8],
       [8],
       [7],
       [8],
       [5],
       [1],
       [8],
       [7],
       [1],
       [3],
       [0],
       [5],
       [7],
       [9],
       [7],
       [4],
       [5],
       [9],
       [8],
       [0],
       [7],
       [9],
       [8],
       [2],
       [7],
       [6],
       [9],
       [4],
       [3],
       [9],
       [6],
       [4],
       [7],
       [6],
       [5],
       [1],
       [5],
       [8],
       [8],
       [0],
       [4],
       [0],
       [5],
       [5],
       [1],
       [1],
       [8],
       [9],
       [0],
       [3],
       [1],
       [9],
       [2],
       [2],
       [5],
       [3],
       [9],
       [9],
       [4],
       [0],
       [3],
       [0],
       [0],
       [9],
       [8],
       [1],
       [5],
       [7],
       [0],
       [8],
       [2],
       [4],
       [7],
       [0],
       [2],
       [3],
       [6],
       [3],
       [8],
       [5],
       [0],
       [3],
       [4],
       [3],
       [9],
       [0],
       [6],
       [1],
       [0],
       [9],
       [1],
       [0],
       [7],
       [9],
       [1],
       [2],
       [6],
       [9],
       [3],
       [4],
       [6],
       [0],
       [0],
       [6],
       [6],
       [6],
       [3],
       [2],
       [6],
       [1],
       [8],
       [2],
       [1],
       [6],
       [8],
       [6],
       [8],
       [0],
       [4],
       [0],
       [7],
       [7],
       [5],
       [5],
       [3],
       [5],
       [2],
       [3],
       [4],
       [1],
       [7],
       [5],
       [4],
       [6],
       [1],
       [9],
       [3],
       [6],
       [6],
       [9],
       [3],
       [8],
       [0],
       [7],
       [2],
       [6],
       [2],
       [5],
       [8],
       [5],
       [4],
       [6],
       [8],
       [9],
       [9],
       [1],
       [0],
       [2],
       [2],
       [7],
       [3],
       [2],
       [8],
       [0],
       [9],
       [5],
       [8],
       [1],
       [9],
       [4],
       [1],
       [3],
       [8],
       [1],
       [4],
       [7],
       [9],
       [4],
       [2],
       [7],
       [0],
       [7],
       [0],
       [6],
       [6],
       [9],
       [0],
       [9],
       [2],
       [8],
       [7],
       [2],
       [2],
       [5],
       [1],
       [2],
       [6],
       [2],
       [9],
       [6],
       [2],
       [3],
       [0],
       [3],
       [9],
       [8],
       [7],
       [8],
       [8],
       [4],
       [0],
       [1],
       [8],
       [2],
       [7],
       [9],
       [3],
       [6],
       [1],
       [9],
       [0],
       [7],
       [3],
       [7],
       [4],
       [5],
       [0],
       [0],
       [2],
       [9],
       [3],
       [4],
       [0],
       [6],
       [2],
       [5],
       [3],
       [7],
       [3],
       [7],
       [2],
       [5],
       [3],
       [1],
       [1],
       [4],
       [9],
       [9],
       [5],
       [7],
       [5],
       [0],
       [2],
       [2],
       [2],
       [9],
       [7],
       [3],
       [9],
       [4],
       [3],
       [5],
       [4],
       [6],
       [5],
       [6],
       [1],
       [4],
       [3],
       [4],
       [4],
       [3],
       [7],
       [8],
       [3],
       [7],
       [8],
       [0],
       [5],
       [7],
       [6],
       [0],
       [5],
       [4],
       [8],
       [6],
       [8],
       [5],
       [5],
       [9],
       [9],
       [9],
       [5],
       [0],
       [1],
       [0],
       [8],
       [1],
       [1],
       [8],
       [0],
       [2],
       [2],
       [0],
       [4],
       [6],
       [5],
       [4],
       [9],
       [4],
       [7],
       [9],
       [9],
       [4],
       [5],
       [6],
       [6],
       [1],
       [5],
       [3],
       [8],
       [9],
       [5],
       [8],
       [5],
       [7],
       [0],
       [7],
       [0],
       [5],
       [0],
       [0],
       [4],
       [6],
       [9],
       [0],
       [9],
       [5],
       [6],
       [6],
       [6],
       [2],
       [9],
       [0],
       [1],
       [7],
       [6],
       [7],
       [5],
       [9],
       [1],
       [6],
       [2],
       [5],
       [5],
       [5],
       [8],
       [5],
       [9],
       [4],
       [6],
       [4],
       [3],
       [2],
       [0],
       [7],
       [6],
       [2],
       [2],
       [3],
       [9],
       [7],
       [9],
       [2],
       [6],
       [7],
       [1],
       [3],
       [6],
       [6],
       [8],
       [9],
       [7],
       [5],
       [4],
       [0],
       [8],
       [4],
       [0],
       [9],
       [3],
       [4],
       [8],
       [9],
       [6],
       [9],
       [2],
       [6],
       [1],
       [4],
       [7],
       [3],
       [5],
       [3],
       [8],
       [5],
       [0],
       [2],
       [1],
       [6],
       [4],
       [3],
       [3],
       [9],
       [6],
       [9],
       [8],
       [8],
       [5],
       [8],
       [6],
       [6],
       [2],
       [1],
       [7],
       [7],
       [1],
       [2],
       [7],
       [9],
       [9],
       [4],
       [4],
       [1],
       [2],
       [5],
       [6],
       [8],
       [7],
       [6],
       [8],
       [3],
       [0],
       [5],
       [5],
       [3],
       [0],
       [7],
       [9],
       [1],
       [3],
       [4],
       [4],
       [5],
       [3],
       [9],
       [5],
       [6],
       [9],
       [2],
       [1],
       [1],
       [4],
       [1],
       [9],
       [4],
       [7],
       [6],
       [3],
       [8],
       [9],
       [0],
       [1],
       [3],
       [6],
       [3],
       [6],
       [3],
       [2],
       [0],
       [3],
       [1],
       [0],
       [5],
       [9],
       [6],
       [4],
       [8],
       [9],
       [6],
       [9],
       [6],
       [3],
       [0],
       [3],
       [2],
       [2],
       [7],
       [8],
       [3],
       [8],
       [2],
       [7],
       [5],
       [7],
       [2],
       [4],
       [8],
       [7],
       [4],
       [2],
       [9],
       [8],
       [8],
       [6],
       [8],
       [8],
       [7],
       [4],
       [3],
       [3],
       [8],
       [4],
       [9],
       [4],
       [8],
       [8],
       [1],
       [8],
       [2],
       [1],
       [3],
       [6],
       [5],
       [4],
       [2],
       [7],
       [9],
       [9],
       [4],
       [1],
       [4],
       [1],
       [3],
       [2],
       [7],
       [0],
       [7],
       [9],
       [7],
       [6],
       [6],
       [2],
       [5],
       [9],
       [2],
       [9],
       [1],
       [2],
       [2],
       [6],
       [8],
       [2],
       [1],
       [3],
       [6],
       [6],
       [0],
       [1],
       [2],
       [7],
       [0],
       [5],
       [4],
       [6],
       [1],
       [6],
       [4],
       [0],
       [2],
       [2],
       [6],
       [0],
       [5],
       [9],
       [1],
       [7],
       [6],
       [7],
       [0],
       [3],
       [9],
       [6],
       [8],
       [3],
       [0],
       [3],
       [4],
       [7],
       [7],
       [1],
       [4],
       [7],
       [2],
       [7],
       [1],
       [4],
       [7],
       [4],
       [4],
       [8],
       [4],
       [7],
       [7],
       [5],
       [3],
       [7],
       [2],
       [0],
       [8],
       [9],
       [5],
       [8],
       [3],
       [6],
       [2],
       [0],
       [8],
       [7],
       [3],
       [7],
       [6],
       [5],
       [3],
       [1],
       [3],
       [2],
       [2],
       [5],
       [4],
       [1],
       [2],
       [9],
       [2],
       [7],
       [0],
       [7],
       [2],
       [1],
       [3],
       [2],
       [0],
       [2],
       [4],
       [7],
       [9],
       [8],
       [9],
       [0],
       [7],
       [7],
       [0],
       [7],
       [8],
       [4],
       [6],
       [3],
       [3],
       [0],
       [1],
       [3],
       [7],
       [0],
       [1],
       [3],
       [1],
       [4],
       [2],
       [3],
       [8],
       [4],
       [2],
       [3],
       [7],
       [8],
       [4],
       [3],
       [0],
       [9],
       [0],
       [0],
       [1],
       [0],
       [4],
       [4],
       [6],
       [7],
       [6],
       [1],
       [1],
       [3],
       [7],
       [3],
       [5],
       [2],
       [6],
       [6],
       [5],
       [8],
       [7],
       [1],
       [6],
       [8],
       [8],
       [5],
       [3],
       [0],
       [4],
       [0],
       [1],
       [3],
       [8],
       [8],
       [0],
       [6],
       [9],
       [9],
       [9],
       [5],
       [5],
       [8],
       [6],
       [0],
       [0],
       [4],
       [2],
       [3],
       [2],
       [7],
       [2],
       [2],
       [5],
       [9],
       [8],
       [9],
       [1],
       [7],
       [4],
       [0],
       [3],
       [0],
       [1],
       [3],
       [8],
       [3],
       [9],
       [6],
       [1],
       [4],
       [7],
       [0],
       [3],
       [7],
       [8],
       [9],
       [1],
       [1],
       [6],
       [6],
       [6],
       [6],
       [9],
       [1],
       [9],
       [9],
       [4],
       [2],
       [1],
       [7],
       [0],
       [6],
       [8],
       [1],
       [9],
       [2],
       [9],
       [0],
       [4],
       [7],
       [8],
       [3],
       [1],
       [2],
       [0],
       [1],
       [5],
       [8],
       [4],
       [6],
       [3],
       [8],
       [1],
       [3],
       [8]], dtype=uint8)}
2020-10-28 13:37:41,383 - engine_logger:INFO - Getting MNIST data.... 
2020-10-28 13:37:42,382 - engine_logger:INFO - Got MNIST data(reduced sample): {'x_train': array([[[[ 59,  62,  63],
         [ 43,  46,  45],
         [ 50,  48,  43],
         ...,
         [158, 132, 108],
         [152, 125, 102],
         [148, 124, 103]],

        [[ 16,  20,  20],
         [  0,   0,   0],
         [ 18,   8,   0],
         ...,
         [123,  88,  55],
         [119,  83,  50],
         [122,  87,  57]],

        [[ 25,  24,  21],
         [ 16,   7,   0],
         [ 49,  27,   8],
         ...,
         [118,  84,  50],
         [120,  84,  50],
         [109,  73,  42]],

        ...,

        [[208, 170,  96],
         [201, 153,  34],
         [198, 161,  26],
         ...,
         [160, 133,  70],
         [ 56,  31,   7],
         [ 53,  34,  20]],

        [[180, 139,  96],
         [173, 123,  42],
         [186, 144,  30],
         ...,
         [184, 148,  94],
         [ 97,  62,  34],
         [ 83,  53,  34]],

        [[177, 144, 116],
         [168, 129,  94],
         [179, 142,  87],
         ...,
         [216, 184, 140],
         [151, 118,  84],
         [123,  92,  72]]],


       [[[154, 177, 187],
         [126, 137, 136],
         [105, 104,  95],
         ...,
         [ 91,  95,  71],
         [ 87,  90,  71],
         [ 79,  81,  70]],

        [[140, 160, 169],
         [145, 153, 154],
         [125, 125, 118],
         ...,
         [ 96,  99,  78],
         [ 77,  80,  62],
         [ 71,  73,  61]],

        [[140, 155, 164],
         [139, 146, 149],
         [115, 115, 112],
         ...,
         [ 79,  82,  64],
         [ 68,  70,  55],
         [ 67,  69,  55]],

        ...,

        [[175, 167, 166],
         [156, 154, 160],
         [154, 160, 170],
         ...,
         [ 42,  34,  36],
         [ 61,  53,  57],
         [ 93,  83,  91]],

        [[165, 154, 128],
         [156, 152, 130],
         [159, 161, 142],
         ...,
         [103,  93,  96],
         [123, 114, 120],
         [131, 121, 131]],

        [[163, 148, 120],
         [158, 148, 122],
         [163, 156, 133],
         ...,
         [143, 133, 139],
         [143, 134, 142],
         [143, 133, 144]]],


       [[[255, 255, 255],
         [253, 253, 253],
         [253, 253, 253],
         ...,
         [253, 253, 253],
         [253, 253, 253],
         [253, 253, 253]],

        [[255, 255, 255],
         [255, 255, 255],
         [255, 255, 255],
         ...,
         [255, 255, 255],
         [255, 255, 255],
         [255, 255, 255]],

        [[255, 255, 255],
         [254, 254, 254],
         [254, 254, 254],
         ...,
         [254, 254, 254],
         [254, 254, 254],
         [254, 254, 254]],

        ...,

        [[113, 120, 112],
         [111, 118, 111],
         [105, 112, 106],
         ...,
         [ 72,  81,  80],
         [ 72,  80,  79],
         [ 72,  80,  79]],

        [[111, 118, 110],
         [104, 111, 104],
         [ 99, 106,  98],
         ...,
         [ 68,  75,  73],
         [ 70,  76,  75],
         [ 78,  84,  82]],

        [[106, 113, 105],
         [ 99, 106,  98],
         [ 95, 102,  94],
         ...,
         [ 78,  85,  83],
         [ 79,  85,  83],
         [ 80,  86,  84]]],


       ...,


       [[[167, 163, 145],
         [206, 201, 181],
         [202, 196, 177],
         ...,
         [ 91,  85,  89],
         [ 50,  64,  68],
         [ 46,  86,  90]],

        [[156, 153, 136],
         [206, 201, 181],
         [206, 199, 180],
         ...,
         [171, 166, 174],
         [ 99, 115, 123],
         [ 48,  88,  94]],

        [[147, 143, 128],
         [192, 186, 167],
         [206, 198, 177],
         ...,
         [173, 176, 186],
         [106, 130, 140],
         [ 48,  90,  96]],

        ...,

        [[144, 156, 151],
         [145, 153, 148],
         [152, 160, 156],
         ...,
         [ 45,  85,  91],
         [ 41,  78,  85],
         [ 47,  88,  94]],

        [[143, 155, 150],
         [148, 157, 154],
         [156, 167, 167],
         ...,
         [ 32,  56,  65],
         [ 31,  58,  66],
         [ 34,  66,  73]],

        [[139, 154, 149],
         [144, 157, 155],
         [140, 157, 159],
         ...,
         [ 39,  75,  81],
         [ 42,  82,  87],
         [ 42,  78,  84]]],


       [[[154, 152, 125],
         [156, 154, 130],
         [149, 146, 125],
         ...,
         [156, 154, 110],
         [131, 130,  97],
         [154, 149, 111]],

        [[163, 150, 111],
         [178, 167, 125],
         [179, 168, 126],
         ...,
         [185, 175, 127],
         [166, 165, 118],
         [168, 164, 117]],

        [[198, 184, 126],
         [188, 173, 117],
         [193, 179, 121],
         ...,
         [188, 166, 118],
         [184, 172, 126],
         [183, 179, 128]],

        ...,

        [[187, 185, 132],
         [175, 175, 129],
         [162, 162, 109],
         ...,
         [201, 217, 129],
         [200, 220, 129],
         [190, 205, 118]],

        [[157, 160, 109],
         [147, 153, 104],
         [144, 157,  98],
         ...,
         [213, 232, 134],
         [191, 227, 117],
         [173, 216, 105]],

        [[153, 150, 102],
         [150, 159,  99],
         [173, 195, 124],
         ...,
         [195, 234, 113],
         [187, 237, 108],
         [194, 247, 114]]],


       [[[ 45,  32,  21],
         [ 48,  34,  21],
         [ 66,  54,  41],
         ...,
         [ 19,   9,   7],
         [ 23,  14,  10],
         [ 20,  10,   8]],

        [[ 47,  33,  21],
         [ 50,  35,  22],
         [ 71,  58,  44],
         ...,
         [ 22,  10,   8],
         [ 22,  11,  10],
         [ 19,   8,   7]],

        [[ 47,  35,  22],
         [ 54,  40,  24],
         [ 63,  50,  35],
         ...,
         [ 24,  10,   7],
         [ 18,   6,   6],
         [ 18,   7,   6]],

        ...,

        [[109, 105,  66],
         [113, 108,  68],
         [115, 106,  67],
         ...,
         [103,  87,  55],
         [ 85,  75,  43],
         [ 97,  85,  52]],

        [[ 96,  90,  53],
         [114, 106,  69],
         [111, 102,  64],
         ...,
         [164, 146, 104],
         [154, 135,  89],
         [152, 139,  97]],

        [[ 97,  91,  52],
         [ 85,  79,  40],
         [105,  99,  57],
         ...,
         [161, 148, 108],
         [156, 137,  93],
         [156, 142, 100]]]], dtype=uint8), 'y_train': array([[6],
       [9],
       [9],
       ...,
       [5],
       [4],
       [6]], dtype=uint8), 'x_test': array([[[[158, 112,  49],
         [159, 111,  47],
         [165, 116,  51],
         ...,
         [137,  95,  36],
         [126,  91,  36],
         [116,  85,  33]],

        [[152, 112,  51],
         [151, 110,  40],
         [159, 114,  45],
         ...,
         [136,  95,  31],
         [125,  91,  32],
         [119,  88,  34]],

        [[151, 110,  47],
         [151, 109,  33],
         [158, 111,  36],
         ...,
         [139,  98,  34],
         [130,  95,  34],
         [120,  89,  33]],

        ...,

        [[ 68, 124, 177],
         [ 42, 100, 148],
         [ 31,  88, 137],
         ...,
         [ 38,  97, 146],
         [ 13,  64, 108],
         [ 40,  85, 127]],

        [[ 61, 116, 168],
         [ 49, 102, 148],
         [ 35,  85, 132],
         ...,
         [ 26,  82, 130],
         [ 29,  82, 126],
         [ 20,  64, 107]],

        [[ 54, 107, 160],
         [ 56, 105, 149],
         [ 45,  89, 132],
         ...,
         [ 24,  77, 124],
         [ 34,  84, 129],
         [ 21,  67, 110]]],


       [[[235, 235, 235],
         [231, 231, 231],
         [232, 232, 232],
         ...,
         [233, 233, 233],
         [233, 233, 233],
         [232, 232, 232]],

        [[238, 238, 238],
         [235, 235, 235],
         [235, 235, 235],
         ...,
         [236, 236, 236],
         [236, 236, 236],
         [235, 235, 235]],

        [[237, 237, 237],
         [234, 234, 234],
         [234, 234, 234],
         ...,
         [235, 235, 235],
         [235, 235, 235],
         [234, 234, 234]],

        ...,

        [[ 87,  99,  89],
         [ 43,  51,  37],
         [ 19,  23,  11],
         ...,
         [169, 184, 179],
         [182, 197, 193],
         [188, 202, 201]],

        [[ 82,  96,  82],
         [ 46,  57,  36],
         [ 36,  44,  22],
         ...,
         [174, 189, 183],
         [185, 200, 196],
         [187, 202, 200]],

        [[ 85, 101,  83],
         [ 62,  75,  48],
         [ 58,  67,  38],
         ...,
         [168, 183, 178],
         [180, 195, 191],
         [186, 200, 199]]],


       [[[158, 190, 222],
         [158, 187, 218],
         [139, 166, 194],
         ...,
         [228, 231, 234],
         [237, 239, 243],
         [238, 241, 246]],

        [[170, 200, 229],
         [172, 199, 226],
         [151, 176, 201],
         ...,
         [232, 232, 236],
         [246, 246, 250],
         [246, 247, 251]],

        [[174, 201, 225],
         [176, 200, 222],
         [157, 179, 199],
         ...,
         [230, 229, 232],
         [250, 249, 251],
         [245, 244, 247]],

        ...,

        [[ 31,  40,  45],
         [ 30,  39,  44],
         [ 26,  35,  40],
         ...,
         [ 37,  40,  46],
         [  9,  13,  14],
         [  4,   7,   5]],

        [[ 23,  34,  39],
         [ 27,  38,  43],
         [ 25,  36,  41],
         ...,
         [ 19,  20,  24],
         [  4,   6,   3],
         [  5,   7,   3]],

        [[ 28,  41,  47],
         [ 30,  43,  50],
         [ 32,  45,  52],
         ...,
         [  5,   6,   8],
         [  4,   5,   3],
         [  7,   8,   7]]],


       ...,


       [[[103, 124, 101],
         [124, 149, 120],
         [ 73,  98,  73],
         ...,
         [ 17,  25,  16],
         [ 10,  15,   9],
         [ 15,  19,  13]],

        [[162, 175, 148],
         [122, 137, 107],
         [111, 126, 103],
         ...,
         [ 28,  38,  25],
         [ 18,  22,  16],
         [ 11,  12,   8]],

        [[226, 236, 200],
         [209, 217, 183],
         [204, 216, 161],
         ...,
         [ 21,  29,  18],
         [ 19,  24,  17],
         [ 14,  17,  11]],

        ...,

        [[132, 134, 145],
         [126, 128, 138],
         [127, 127, 139],
         ...,
         [ 43,  36,  33],
         [ 64,  46,  31],
         [ 88,  53,  32]],

        [[125, 123, 134],
         [123, 122, 132],
         [121, 120, 132],
         ...,
         [ 41,  42,  43],
         [ 52,  39,  35],
         [ 87,  56,  43]],

        [[121, 119, 131],
         [119, 117, 129],
         [118, 118, 130],
         ...,
         [ 48,  49,  53],
         [ 53,  48,  50],
         [ 67,  42,  37]]],


       [[[ 77, 114,  33],
         [ 72, 111,  25],
         [ 76, 110,  34],
         ...,
         [ 59,  64,  46],
         [ 56,  58,  42],
         [ 56,  58,  40]],

        [[ 74, 107,  34],
         [ 71,  93,  31],
         [ 80, 102,  39],
         ...,
         [ 52,  55,  44],
         [ 57,  60,  45],
         [ 54,  58,  39]],

        [[ 80, 101,  38],
         [ 84,  98,  43],
         [ 74,  95,  32],
         ...,
         [ 50,  55,  51],
         [ 50,  55,  50],
         [ 61,  67,  59]],

        ...,

        [[ 65,  92,  26],
         [ 63,  84,  24],
         [ 52,  77,  20],
         ...,
         [ 84,  82,  68],
         [ 56,  57,  48],
         [ 28,  33,  24]],

        [[ 70,  89,  26],
         [ 77,  89,  32],
         [ 60,  92,  30],
         ...,
         [ 77,  77,  66],
         [ 39,  39,  35],
         [ 32,  39,  28]],

        [[ 48,  73,  12],
         [ 57,  71,  21],
         [ 56,  85,  30],
         ...,
         [ 51,  53,  47],
         [ 24,  27,  22],
         [ 35,  44,  30]]],


       [[[175, 180, 174],
         [176, 181, 175],
         [181, 186, 180],
         ...,
         [193, 207, 210],
         [190, 204, 207],
         [188, 202, 205]],

        [[177, 182, 176],
         [179, 184, 178],
         [183, 188, 182],
         ...,
         [196, 210, 213],
         [192, 206, 209],
         [191, 205, 208]],

        [[176, 181, 175],
         [177, 182, 176],
         [182, 187, 181],
         ...,
         [194, 208, 211],
         [191, 205, 208],
         [189, 203, 206]],

        ...,

        [[122, 121, 129],
         [117, 118, 129],
         [114, 118, 130],
         ...,
         [ 58,  73,  91],
         [ 81,  97, 118],
         [ 99, 118, 141]],

        [[116, 115, 123],
         [110, 111, 121],
         [107, 111, 123],
         ...,
         [ 57,  70,  88],
         [ 78,  93, 113],
         [100, 117, 140]],

        [[113, 112, 119],
         [106, 107, 117],
         [105, 109, 121],
         ...,
         [ 57,  68,  85],
         [ 71,  85, 103],
         [ 93, 110, 131]]]], dtype=uint8), 'y_test': array([[3],
       [8],
       [8],
       [0],
       [6],
       [6],
       [1],
       [6],
       [3],
       [1],
       [0],
       [9],
       [5],
       [7],
       [9],
       [8],
       [5],
       [7],
       [8],
       [6],
       [7],
       [0],
       [4],
       [9],
       [5],
       [2],
       [4],
       [0],
       [9],
       [6],
       [6],
       [5],
       [4],
       [5],
       [9],
       [2],
       [4],
       [1],
       [9],
       [5],
       [4],
       [6],
       [5],
       [6],
       [0],
       [9],
       [3],
       [9],
       [7],
       [6],
       [9],
       [8],
       [0],
       [3],
       [8],
       [8],
       [7],
       [7],
       [4],
       [6],
       [7],
       [3],
       [6],
       [3],
       [6],
       [2],
       [1],
       [2],
       [3],
       [7],
       [2],
       [6],
       [8],
       [8],
       [0],
       [2],
       [9],
       [3],
       [3],
       [8],
       [8],
       [1],
       [1],
       [7],
       [2],
       [5],
       [2],
       [7],
       [8],
       [9],
       [0],
       [3],
       [8],
       [6],
       [4],
       [6],
       [6],
       [0],
       [0],
       [7],
       [4],
       [5],
       [6],
       [3],
       [1],
       [1],
       [3],
       [6],
       [8],
       [7],
       [4],
       [0],
       [6],
       [2],
       [1],
       [3],
       [0],
       [4],
       [2],
       [7],
       [8],
       [3],
       [1],
       [2],
       [8],
       [0],
       [8],
       [3],
       [5],
       [2],
       [4],
       [1],
       [8],
       [9],
       [1],
       [2],
       [9],
       [7],
       [2],
       [9],
       [6],
       [5],
       [6],
       [3],
       [8],
       [7],
       [6],
       [2],
       [5],
       [2],
       [8],
       [9],
       [6],
       [0],
       [0],
       [5],
       [2],
       [9],
       [5],
       [4],
       [2],
       [1],
       [6],
       [6],
       [8],
       [4],
       [8],
       [4],
       [5],
       [0],
       [9],
       [9],
       [9],
       [8],
       [9],
       [9],
       [3],
       [7],
       [5],
       [0],
       [0],
       [5],
       [2],
       [2],
       [3],
       [8],
       [6],
       [3],
       [4],
       [0],
       [5],
       [8],
       [0],
       [1],
       [7],
       [2],
       [8],
       [8],
       [7],
       [8],
       [5],
       [1],
       [8],
       [7],
       [1],
       [3],
       [0],
       [5],
       [7],
       [9],
       [7],
       [4],
       [5],
       [9],
       [8],
       [0],
       [7],
       [9],
       [8],
       [2],
       [7],
       [6],
       [9],
       [4],
       [3],
       [9],
       [6],
       [4],
       [7],
       [6],
       [5],
       [1],
       [5],
       [8],
       [8],
       [0],
       [4],
       [0],
       [5],
       [5],
       [1],
       [1],
       [8],
       [9],
       [0],
       [3],
       [1],
       [9],
       [2],
       [2],
       [5],
       [3],
       [9],
       [9],
       [4],
       [0],
       [3],
       [0],
       [0],
       [9],
       [8],
       [1],
       [5],
       [7],
       [0],
       [8],
       [2],
       [4],
       [7],
       [0],
       [2],
       [3],
       [6],
       [3],
       [8],
       [5],
       [0],
       [3],
       [4],
       [3],
       [9],
       [0],
       [6],
       [1],
       [0],
       [9],
       [1],
       [0],
       [7],
       [9],
       [1],
       [2],
       [6],
       [9],
       [3],
       [4],
       [6],
       [0],
       [0],
       [6],
       [6],
       [6],
       [3],
       [2],
       [6],
       [1],
       [8],
       [2],
       [1],
       [6],
       [8],
       [6],
       [8],
       [0],
       [4],
       [0],
       [7],
       [7],
       [5],
       [5],
       [3],
       [5],
       [2],
       [3],
       [4],
       [1],
       [7],
       [5],
       [4],
       [6],
       [1],
       [9],
       [3],
       [6],
       [6],
       [9],
       [3],
       [8],
       [0],
       [7],
       [2],
       [6],
       [2],
       [5],
       [8],
       [5],
       [4],
       [6],
       [8],
       [9],
       [9],
       [1],
       [0],
       [2],
       [2],
       [7],
       [3],
       [2],
       [8],
       [0],
       [9],
       [5],
       [8],
       [1],
       [9],
       [4],
       [1],
       [3],
       [8],
       [1],
       [4],
       [7],
       [9],
       [4],
       [2],
       [7],
       [0],
       [7],
       [0],
       [6],
       [6],
       [9],
       [0],
       [9],
       [2],
       [8],
       [7],
       [2],
       [2],
       [5],
       [1],
       [2],
       [6],
       [2],
       [9],
       [6],
       [2],
       [3],
       [0],
       [3],
       [9],
       [8],
       [7],
       [8],
       [8],
       [4],
       [0],
       [1],
       [8],
       [2],
       [7],
       [9],
       [3],
       [6],
       [1],
       [9],
       [0],
       [7],
       [3],
       [7],
       [4],
       [5],
       [0],
       [0],
       [2],
       [9],
       [3],
       [4],
       [0],
       [6],
       [2],
       [5],
       [3],
       [7],
       [3],
       [7],
       [2],
       [5],
       [3],
       [1],
       [1],
       [4],
       [9],
       [9],
       [5],
       [7],
       [5],
       [0],
       [2],
       [2],
       [2],
       [9],
       [7],
       [3],
       [9],
       [4],
       [3],
       [5],
       [4],
       [6],
       [5],
       [6],
       [1],
       [4],
       [3],
       [4],
       [4],
       [3],
       [7],
       [8],
       [3],
       [7],
       [8],
       [0],
       [5],
       [7],
       [6],
       [0],
       [5],
       [4],
       [8],
       [6],
       [8],
       [5],
       [5],
       [9],
       [9],
       [9],
       [5],
       [0],
       [1],
       [0],
       [8],
       [1],
       [1],
       [8],
       [0],
       [2],
       [2],
       [0],
       [4],
       [6],
       [5],
       [4],
       [9],
       [4],
       [7],
       [9],
       [9],
       [4],
       [5],
       [6],
       [6],
       [1],
       [5],
       [3],
       [8],
       [9],
       [5],
       [8],
       [5],
       [7],
       [0],
       [7],
       [0],
       [5],
       [0],
       [0],
       [4],
       [6],
       [9],
       [0],
       [9],
       [5],
       [6],
       [6],
       [6],
       [2],
       [9],
       [0],
       [1],
       [7],
       [6],
       [7],
       [5],
       [9],
       [1],
       [6],
       [2],
       [5],
       [5],
       [5],
       [8],
       [5],
       [9],
       [4],
       [6],
       [4],
       [3],
       [2],
       [0],
       [7],
       [6],
       [2],
       [2],
       [3],
       [9],
       [7],
       [9],
       [2],
       [6],
       [7],
       [1],
       [3],
       [6],
       [6],
       [8],
       [9],
       [7],
       [5],
       [4],
       [0],
       [8],
       [4],
       [0],
       [9],
       [3],
       [4],
       [8],
       [9],
       [6],
       [9],
       [2],
       [6],
       [1],
       [4],
       [7],
       [3],
       [5],
       [3],
       [8],
       [5],
       [0],
       [2],
       [1],
       [6],
       [4],
       [3],
       [3],
       [9],
       [6],
       [9],
       [8],
       [8],
       [5],
       [8],
       [6],
       [6],
       [2],
       [1],
       [7],
       [7],
       [1],
       [2],
       [7],
       [9],
       [9],
       [4],
       [4],
       [1],
       [2],
       [5],
       [6],
       [8],
       [7],
       [6],
       [8],
       [3],
       [0],
       [5],
       [5],
       [3],
       [0],
       [7],
       [9],
       [1],
       [3],
       [4],
       [4],
       [5],
       [3],
       [9],
       [5],
       [6],
       [9],
       [2],
       [1],
       [1],
       [4],
       [1],
       [9],
       [4],
       [7],
       [6],
       [3],
       [8],
       [9],
       [0],
       [1],
       [3],
       [6],
       [3],
       [6],
       [3],
       [2],
       [0],
       [3],
       [1],
       [0],
       [5],
       [9],
       [6],
       [4],
       [8],
       [9],
       [6],
       [9],
       [6],
       [3],
       [0],
       [3],
       [2],
       [2],
       [7],
       [8],
       [3],
       [8],
       [2],
       [7],
       [5],
       [7],
       [2],
       [4],
       [8],
       [7],
       [4],
       [2],
       [9],
       [8],
       [8],
       [6],
       [8],
       [8],
       [7],
       [4],
       [3],
       [3],
       [8],
       [4],
       [9],
       [4],
       [8],
       [8],
       [1],
       [8],
       [2],
       [1],
       [3],
       [6],
       [5],
       [4],
       [2],
       [7],
       [9],
       [9],
       [4],
       [1],
       [4],
       [1],
       [3],
       [2],
       [7],
       [0],
       [7],
       [9],
       [7],
       [6],
       [6],
       [2],
       [5],
       [9],
       [2],
       [9],
       [1],
       [2],
       [2],
       [6],
       [8],
       [2],
       [1],
       [3],
       [6],
       [6],
       [0],
       [1],
       [2],
       [7],
       [0],
       [5],
       [4],
       [6],
       [1],
       [6],
       [4],
       [0],
       [2],
       [2],
       [6],
       [0],
       [5],
       [9],
       [1],
       [7],
       [6],
       [7],
       [0],
       [3],
       [9],
       [6],
       [8],
       [3],
       [0],
       [3],
       [4],
       [7],
       [7],
       [1],
       [4],
       [7],
       [2],
       [7],
       [1],
       [4],
       [7],
       [4],
       [4],
       [8],
       [4],
       [7],
       [7],
       [5],
       [3],
       [7],
       [2],
       [0],
       [8],
       [9],
       [5],
       [8],
       [3],
       [6],
       [2],
       [0],
       [8],
       [7],
       [3],
       [7],
       [6],
       [5],
       [3],
       [1],
       [3],
       [2],
       [2],
       [5],
       [4],
       [1],
       [2],
       [9],
       [2],
       [7],
       [0],
       [7],
       [2],
       [1],
       [3],
       [2],
       [0],
       [2],
       [4],
       [7],
       [9],
       [8],
       [9],
       [0],
       [7],
       [7],
       [0],
       [7],
       [8],
       [4],
       [6],
       [3],
       [3],
       [0],
       [1],
       [3],
       [7],
       [0],
       [1],
       [3],
       [1],
       [4],
       [2],
       [3],
       [8],
       [4],
       [2],
       [3],
       [7],
       [8],
       [4],
       [3],
       [0],
       [9],
       [0],
       [0],
       [1],
       [0],
       [4],
       [4],
       [6],
       [7],
       [6],
       [1],
       [1],
       [3],
       [7],
       [3],
       [5],
       [2],
       [6],
       [6],
       [5],
       [8],
       [7],
       [1],
       [6],
       [8],
       [8],
       [5],
       [3],
       [0],
       [4],
       [0],
       [1],
       [3],
       [8],
       [8],
       [0],
       [6],
       [9],
       [9],
       [9],
       [5],
       [5],
       [8],
       [6],
       [0],
       [0],
       [4],
       [2],
       [3],
       [2],
       [7],
       [2],
       [2],
       [5],
       [9],
       [8],
       [9],
       [1],
       [7],
       [4],
       [0],
       [3],
       [0],
       [1],
       [3],
       [8],
       [3],
       [9],
       [6],
       [1],
       [4],
       [7],
       [0],
       [3],
       [7],
       [8],
       [9],
       [1],
       [1],
       [6],
       [6],
       [6],
       [6],
       [9],
       [1],
       [9],
       [9],
       [4],
       [2],
       [1],
       [7],
       [0],
       [6],
       [8],
       [1],
       [9],
       [2],
       [9],
       [0],
       [4],
       [7],
       [8],
       [3],
       [1],
       [2],
       [0],
       [1],
       [5],
       [8],
       [4],
       [6],
       [3],
       [8],
       [1],
       [3],
       [8]], dtype=uint8)}
2020-10-28 13:38:18,873 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 13:40:23,707 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 13:40:23,708 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 13:40:23,708 - engine_logger:INFO - logger info level msg 
2020-10-28 13:40:23,708 - engine_logger:WARNING - logger warn level msg 
2020-10-28 13:40:23,708 - engine_logger:ERROR - logger error level msg 
2020-10-28 13:40:23,709 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 13:40:23,709 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 13:40:23,709 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 13:40:23,713 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 13:40:23,847 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:40:23,847 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 13:40:23,848 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 13:40:23,848 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 13:40:23,848 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 13:40:23,848 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 13:40:32,626 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:40:32,954 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:40:32,955 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 13:40:32,956 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 13:40:32,956 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 13:40:32,957 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 13:41:45,120 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 13:41:45,120 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 13:41:45,120 - engine_logger:INFO - logger info level msg 
2020-10-28 13:41:45,120 - engine_logger:WARNING - logger warn level msg 
2020-10-28 13:41:45,120 - engine_logger:ERROR - logger error level msg 
2020-10-28 13:41:45,120 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 13:41:45,120 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 13:41:45,120 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 13:41:45,122 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 13:41:45,145 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:41:45,145 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 13:41:45,145 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 13:41:45,145 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 13:41:45,146 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 13:41:45,146 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 13:41:45,168 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:41:45,190 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:41:45,190 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 13:41:45,191 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 13:41:45,191 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 13:41:45,191 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 13:42:01,731 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 13:42:01,732 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 13:42:01,732 - engine_logger:INFO - logger info level msg 
2020-10-28 13:42:01,732 - engine_logger:WARNING - logger warn level msg 
2020-10-28 13:42:01,733 - engine_logger:ERROR - logger error level msg 
2020-10-28 13:42:01,733 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 13:42:01,733 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 13:42:01,733 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 13:42:01,737 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 13:42:01,870 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:42:01,871 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 13:42:01,871 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 13:42:01,871 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 13:42:01,871 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 13:42:01,871 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 13:42:02,017 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:42:02,150 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:42:02,151 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 13:42:02,151 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 13:42:02,151 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 13:42:02,152 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 13:42:13,131 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 13:42:13,131 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 13:42:13,131 - engine_logger:INFO - logger info level msg 
2020-10-28 13:42:13,132 - engine_logger:WARNING - logger warn level msg 
2020-10-28 13:42:13,132 - engine_logger:ERROR - logger error level msg 
2020-10-28 13:42:13,132 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 13:42:13,132 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 13:42:13,132 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 13:42:13,133 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 13:42:13,157 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:42:13,157 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 13:42:13,157 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 13:42:13,157 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 13:42:13,157 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 13:42:13,157 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 13:42:13,180 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:42:13,202 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:42:13,202 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 13:42:13,203 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 13:42:13,203 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 13:42:13,203 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 13:42:49,383 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 13:42:49,384 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 13:42:49,384 - engine_logger:INFO - logger info level msg 
2020-10-28 13:42:49,384 - engine_logger:WARNING - logger warn level msg 
2020-10-28 13:42:49,384 - engine_logger:ERROR - logger error level msg 
2020-10-28 13:42:49,385 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 13:42:49,385 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 13:42:49,385 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 13:42:49,389 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 13:42:49,524 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:42:49,524 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 13:42:49,524 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 13:42:49,525 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 13:42:49,525 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 13:42:49,525 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 13:42:49,665 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:42:49,812 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:42:49,812 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 13:42:49,813 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 13:42:49,813 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 13:42:49,813 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 13:43:28,884 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 13:43:28,884 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 13:43:28,884 - engine_logger:INFO - logger info level msg 
2020-10-28 13:43:28,884 - engine_logger:WARNING - logger warn level msg 
2020-10-28 13:43:28,884 - engine_logger:ERROR - logger error level msg 
2020-10-28 13:43:28,884 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 13:43:28,885 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 13:43:28,885 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 13:43:28,886 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 13:43:28,910 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:43:28,910 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 13:43:28,910 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 13:43:28,910 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 13:43:28,910 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 13:43:28,910 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 13:43:28,932 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:43:28,955 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:43:28,955 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 13:43:28,955 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 13:43:28,955 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 13:43:28,955 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 13:43:46,974 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 13:43:46,975 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 13:43:46,978 - engine_logger:INFO - logger info level msg 
2020-10-28 13:43:46,978 - engine_logger:WARNING - logger warn level msg 
2020-10-28 13:43:46,978 - engine_logger:ERROR - logger error level msg 
2020-10-28 13:43:46,978 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 13:43:46,979 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 13:43:46,979 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 13:43:46,983 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 13:43:47,116 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:43:47,116 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 13:43:47,117 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 13:43:47,117 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 13:43:47,117 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 13:43:47,117 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 13:43:47,250 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:43:47,382 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:43:47,383 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 13:43:47,383 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 13:43:47,383 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 13:43:47,384 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 13:44:22,368 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 13:44:22,368 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 13:44:22,369 - engine_logger:INFO - logger info level msg 
2020-10-28 13:44:22,369 - engine_logger:WARNING - logger warn level msg 
2020-10-28 13:44:22,369 - engine_logger:ERROR - logger error level msg 
2020-10-28 13:44:22,369 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 13:44:22,370 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 13:44:22,370 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 13:44:22,374 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 13:44:22,508 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:44:22,508 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 13:44:22,508 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 13:44:22,509 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 13:44:22,509 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 13:44:22,509 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 13:44:22,642 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:44:22,777 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:44:22,777 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 13:44:22,778 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 13:44:22,778 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 13:44:22,778 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 13:44:39,830 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 13:44:39,831 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 13:44:39,831 - engine_logger:INFO - logger info level msg 
2020-10-28 13:44:39,831 - engine_logger:WARNING - logger warn level msg 
2020-10-28 13:44:39,831 - engine_logger:ERROR - logger error level msg 
2020-10-28 13:44:39,832 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 13:44:39,832 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 13:44:39,832 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 13:44:39,836 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 13:44:39,967 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:44:39,968 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 13:44:39,968 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 13:44:39,968 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 13:44:39,968 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 13:44:39,969 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 13:44:40,099 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:44:40,229 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:44:40,230 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 13:44:40,230 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 13:44:40,230 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 13:44:40,231 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 13:45:35,896 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 13:45:35,896 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 13:45:35,896 - engine_logger:INFO - logger info level msg 
2020-10-28 13:45:35,896 - engine_logger:WARNING - logger warn level msg 
2020-10-28 13:45:35,896 - engine_logger:ERROR - logger error level msg 
2020-10-28 13:45:35,897 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 13:45:35,897 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 13:45:35,897 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 13:45:35,898 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 13:45:35,922 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:45:35,922 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 13:45:35,922 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 13:45:35,922 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 13:45:35,922 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 13:45:35,922 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 13:45:35,945 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:45:35,967 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:45:35,967 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 13:45:35,967 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 13:45:35,967 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 13:45:35,967 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 13:50:13,050 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 13:50:13,050 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 13:50:13,050 - engine_logger:INFO - logger info level msg 
2020-10-28 13:50:13,050 - engine_logger:WARNING - logger warn level msg 
2020-10-28 13:50:13,050 - engine_logger:ERROR - logger error level msg 
2020-10-28 13:50:13,051 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 13:50:13,051 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 13:50:13,051 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 13:50:13,054 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 13:50:13,165 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:50:13,165 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 13:50:13,166 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 13:50:13,166 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 13:50:13,166 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 13:50:13,166 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 13:50:13,277 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:50:13,388 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:50:13,388 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 13:50:13,388 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 13:50:13,388 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 13:50:13,389 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 13:50:26,402 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 13:50:26,403 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 13:50:26,403 - engine_logger:INFO - logger info level msg 
2020-10-28 13:50:26,403 - engine_logger:WARNING - logger warn level msg 
2020-10-28 13:50:26,404 - engine_logger:ERROR - logger error level msg 
2020-10-28 13:50:26,404 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 13:50:26,404 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 13:50:26,404 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 13:50:26,408 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 13:50:26,541 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:50:26,541 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 13:50:26,541 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 13:50:26,541 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 13:50:26,542 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 13:50:26,542 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 13:50:26,673 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:50:26,805 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:50:26,805 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 13:50:26,806 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 13:50:26,806 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 13:50:26,806 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filter': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 13:50:58,327 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 13:50:58,328 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 13:50:58,328 - engine_logger:INFO - logger info level msg 
2020-10-28 13:50:58,328 - engine_logger:WARNING - logger warn level msg 
2020-10-28 13:50:58,328 - engine_logger:ERROR - logger error level msg 
2020-10-28 13:50:58,328 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 13:50:58,328 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 13:50:58,329 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 13:50:58,332 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 13:50:58,447 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:50:58,447 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 13:50:58,448 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 13:50:58,448 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 13:50:58,448 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 13:50:58,448 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 13:50:58,560 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:50:58,673 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:50:58,674 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 13:50:58,674 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 13:50:58,674 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 13:50:58,674 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [150, 150, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 13:52:36,205 - engine_logger:INFO - Engine instantiated in MP: PredictionEngine
2020-10-28 13:52:37,326 - engine_logger:INFO - Getting MNIST data.... 
2020-10-28 13:52:38,404 - engine_logger:INFO - Got MNIST data(reduced sample): {'x_train': array([[[[ 59,  62,  63],
         [ 43,  46,  45],
         [ 50,  48,  43],
         ...,
         [158, 132, 108],
         [152, 125, 102],
         [148, 124, 103]],

        [[ 16,  20,  20],
         [  0,   0,   0],
         [ 18,   8,   0],
         ...,
         [123,  88,  55],
         [119,  83,  50],
         [122,  87,  57]],

        [[ 25,  24,  21],
         [ 16,   7,   0],
         [ 49,  27,   8],
         ...,
         [118,  84,  50],
         [120,  84,  50],
         [109,  73,  42]],

        ...,

        [[208, 170,  96],
         [201, 153,  34],
         [198, 161,  26],
         ...,
         [160, 133,  70],
         [ 56,  31,   7],
         [ 53,  34,  20]],

        [[180, 139,  96],
         [173, 123,  42],
         [186, 144,  30],
         ...,
         [184, 148,  94],
         [ 97,  62,  34],
         [ 83,  53,  34]],

        [[177, 144, 116],
         [168, 129,  94],
         [179, 142,  87],
         ...,
         [216, 184, 140],
         [151, 118,  84],
         [123,  92,  72]]],


       [[[154, 177, 187],
         [126, 137, 136],
         [105, 104,  95],
         ...,
         [ 91,  95,  71],
         [ 87,  90,  71],
         [ 79,  81,  70]],

        [[140, 160, 169],
         [145, 153, 154],
         [125, 125, 118],
         ...,
         [ 96,  99,  78],
         [ 77,  80,  62],
         [ 71,  73,  61]],

        [[140, 155, 164],
         [139, 146, 149],
         [115, 115, 112],
         ...,
         [ 79,  82,  64],
         [ 68,  70,  55],
         [ 67,  69,  55]],

        ...,

        [[175, 167, 166],
         [156, 154, 160],
         [154, 160, 170],
         ...,
         [ 42,  34,  36],
         [ 61,  53,  57],
         [ 93,  83,  91]],

        [[165, 154, 128],
         [156, 152, 130],
         [159, 161, 142],
         ...,
         [103,  93,  96],
         [123, 114, 120],
         [131, 121, 131]],

        [[163, 148, 120],
         [158, 148, 122],
         [163, 156, 133],
         ...,
         [143, 133, 139],
         [143, 134, 142],
         [143, 133, 144]]],


       [[[255, 255, 255],
         [253, 253, 253],
         [253, 253, 253],
         ...,
         [253, 253, 253],
         [253, 253, 253],
         [253, 253, 253]],

        [[255, 255, 255],
         [255, 255, 255],
         [255, 255, 255],
         ...,
         [255, 255, 255],
         [255, 255, 255],
         [255, 255, 255]],

        [[255, 255, 255],
         [254, 254, 254],
         [254, 254, 254],
         ...,
         [254, 254, 254],
         [254, 254, 254],
         [254, 254, 254]],

        ...,

        [[113, 120, 112],
         [111, 118, 111],
         [105, 112, 106],
         ...,
         [ 72,  81,  80],
         [ 72,  80,  79],
         [ 72,  80,  79]],

        [[111, 118, 110],
         [104, 111, 104],
         [ 99, 106,  98],
         ...,
         [ 68,  75,  73],
         [ 70,  76,  75],
         [ 78,  84,  82]],

        [[106, 113, 105],
         [ 99, 106,  98],
         [ 95, 102,  94],
         ...,
         [ 78,  85,  83],
         [ 79,  85,  83],
         [ 80,  86,  84]]],


       ...,


       [[[167, 163, 145],
         [206, 201, 181],
         [202, 196, 177],
         ...,
         [ 91,  85,  89],
         [ 50,  64,  68],
         [ 46,  86,  90]],

        [[156, 153, 136],
         [206, 201, 181],
         [206, 199, 180],
         ...,
         [171, 166, 174],
         [ 99, 115, 123],
         [ 48,  88,  94]],

        [[147, 143, 128],
         [192, 186, 167],
         [206, 198, 177],
         ...,
         [173, 176, 186],
         [106, 130, 140],
         [ 48,  90,  96]],

        ...,

        [[144, 156, 151],
         [145, 153, 148],
         [152, 160, 156],
         ...,
         [ 45,  85,  91],
         [ 41,  78,  85],
         [ 47,  88,  94]],

        [[143, 155, 150],
         [148, 157, 154],
         [156, 167, 167],
         ...,
         [ 32,  56,  65],
         [ 31,  58,  66],
         [ 34,  66,  73]],

        [[139, 154, 149],
         [144, 157, 155],
         [140, 157, 159],
         ...,
         [ 39,  75,  81],
         [ 42,  82,  87],
         [ 42,  78,  84]]],


       [[[154, 152, 125],
         [156, 154, 130],
         [149, 146, 125],
         ...,
         [156, 154, 110],
         [131, 130,  97],
         [154, 149, 111]],

        [[163, 150, 111],
         [178, 167, 125],
         [179, 168, 126],
         ...,
         [185, 175, 127],
         [166, 165, 118],
         [168, 164, 117]],

        [[198, 184, 126],
         [188, 173, 117],
         [193, 179, 121],
         ...,
         [188, 166, 118],
         [184, 172, 126],
         [183, 179, 128]],

        ...,

        [[187, 185, 132],
         [175, 175, 129],
         [162, 162, 109],
         ...,
         [201, 217, 129],
         [200, 220, 129],
         [190, 205, 118]],

        [[157, 160, 109],
         [147, 153, 104],
         [144, 157,  98],
         ...,
         [213, 232, 134],
         [191, 227, 117],
         [173, 216, 105]],

        [[153, 150, 102],
         [150, 159,  99],
         [173, 195, 124],
         ...,
         [195, 234, 113],
         [187, 237, 108],
         [194, 247, 114]]],


       [[[ 45,  32,  21],
         [ 48,  34,  21],
         [ 66,  54,  41],
         ...,
         [ 19,   9,   7],
         [ 23,  14,  10],
         [ 20,  10,   8]],

        [[ 47,  33,  21],
         [ 50,  35,  22],
         [ 71,  58,  44],
         ...,
         [ 22,  10,   8],
         [ 22,  11,  10],
         [ 19,   8,   7]],

        [[ 47,  35,  22],
         [ 54,  40,  24],
         [ 63,  50,  35],
         ...,
         [ 24,  10,   7],
         [ 18,   6,   6],
         [ 18,   7,   6]],

        ...,

        [[109, 105,  66],
         [113, 108,  68],
         [115, 106,  67],
         ...,
         [103,  87,  55],
         [ 85,  75,  43],
         [ 97,  85,  52]],

        [[ 96,  90,  53],
         [114, 106,  69],
         [111, 102,  64],
         ...,
         [164, 146, 104],
         [154, 135,  89],
         [152, 139,  97]],

        [[ 97,  91,  52],
         [ 85,  79,  40],
         [105,  99,  57],
         ...,
         [161, 148, 108],
         [156, 137,  93],
         [156, 142, 100]]]], dtype=uint8), 'y_train': array([[6],
       [9],
       [9],
       ...,
       [5],
       [4],
       [6]], dtype=uint8), 'x_test': array([[[[158, 112,  49],
         [159, 111,  47],
         [165, 116,  51],
         ...,
         [137,  95,  36],
         [126,  91,  36],
         [116,  85,  33]],

        [[152, 112,  51],
         [151, 110,  40],
         [159, 114,  45],
         ...,
         [136,  95,  31],
         [125,  91,  32],
         [119,  88,  34]],

        [[151, 110,  47],
         [151, 109,  33],
         [158, 111,  36],
         ...,
         [139,  98,  34],
         [130,  95,  34],
         [120,  89,  33]],

        ...,

        [[ 68, 124, 177],
         [ 42, 100, 148],
         [ 31,  88, 137],
         ...,
         [ 38,  97, 146],
         [ 13,  64, 108],
         [ 40,  85, 127]],

        [[ 61, 116, 168],
         [ 49, 102, 148],
         [ 35,  85, 132],
         ...,
         [ 26,  82, 130],
         [ 29,  82, 126],
         [ 20,  64, 107]],

        [[ 54, 107, 160],
         [ 56, 105, 149],
         [ 45,  89, 132],
         ...,
         [ 24,  77, 124],
         [ 34,  84, 129],
         [ 21,  67, 110]]],


       [[[235, 235, 235],
         [231, 231, 231],
         [232, 232, 232],
         ...,
         [233, 233, 233],
         [233, 233, 233],
         [232, 232, 232]],

        [[238, 238, 238],
         [235, 235, 235],
         [235, 235, 235],
         ...,
         [236, 236, 236],
         [236, 236, 236],
         [235, 235, 235]],

        [[237, 237, 237],
         [234, 234, 234],
         [234, 234, 234],
         ...,
         [235, 235, 235],
         [235, 235, 235],
         [234, 234, 234]],

        ...,

        [[ 87,  99,  89],
         [ 43,  51,  37],
         [ 19,  23,  11],
         ...,
         [169, 184, 179],
         [182, 197, 193],
         [188, 202, 201]],

        [[ 82,  96,  82],
         [ 46,  57,  36],
         [ 36,  44,  22],
         ...,
         [174, 189, 183],
         [185, 200, 196],
         [187, 202, 200]],

        [[ 85, 101,  83],
         [ 62,  75,  48],
         [ 58,  67,  38],
         ...,
         [168, 183, 178],
         [180, 195, 191],
         [186, 200, 199]]],


       [[[158, 190, 222],
         [158, 187, 218],
         [139, 166, 194],
         ...,
         [228, 231, 234],
         [237, 239, 243],
         [238, 241, 246]],

        [[170, 200, 229],
         [172, 199, 226],
         [151, 176, 201],
         ...,
         [232, 232, 236],
         [246, 246, 250],
         [246, 247, 251]],

        [[174, 201, 225],
         [176, 200, 222],
         [157, 179, 199],
         ...,
         [230, 229, 232],
         [250, 249, 251],
         [245, 244, 247]],

        ...,

        [[ 31,  40,  45],
         [ 30,  39,  44],
         [ 26,  35,  40],
         ...,
         [ 37,  40,  46],
         [  9,  13,  14],
         [  4,   7,   5]],

        [[ 23,  34,  39],
         [ 27,  38,  43],
         [ 25,  36,  41],
         ...,
         [ 19,  20,  24],
         [  4,   6,   3],
         [  5,   7,   3]],

        [[ 28,  41,  47],
         [ 30,  43,  50],
         [ 32,  45,  52],
         ...,
         [  5,   6,   8],
         [  4,   5,   3],
         [  7,   8,   7]]],


       ...,


       [[[103, 124, 101],
         [124, 149, 120],
         [ 73,  98,  73],
         ...,
         [ 17,  25,  16],
         [ 10,  15,   9],
         [ 15,  19,  13]],

        [[162, 175, 148],
         [122, 137, 107],
         [111, 126, 103],
         ...,
         [ 28,  38,  25],
         [ 18,  22,  16],
         [ 11,  12,   8]],

        [[226, 236, 200],
         [209, 217, 183],
         [204, 216, 161],
         ...,
         [ 21,  29,  18],
         [ 19,  24,  17],
         [ 14,  17,  11]],

        ...,

        [[132, 134, 145],
         [126, 128, 138],
         [127, 127, 139],
         ...,
         [ 43,  36,  33],
         [ 64,  46,  31],
         [ 88,  53,  32]],

        [[125, 123, 134],
         [123, 122, 132],
         [121, 120, 132],
         ...,
         [ 41,  42,  43],
         [ 52,  39,  35],
         [ 87,  56,  43]],

        [[121, 119, 131],
         [119, 117, 129],
         [118, 118, 130],
         ...,
         [ 48,  49,  53],
         [ 53,  48,  50],
         [ 67,  42,  37]]],


       [[[ 77, 114,  33],
         [ 72, 111,  25],
         [ 76, 110,  34],
         ...,
         [ 59,  64,  46],
         [ 56,  58,  42],
         [ 56,  58,  40]],

        [[ 74, 107,  34],
         [ 71,  93,  31],
         [ 80, 102,  39],
         ...,
         [ 52,  55,  44],
         [ 57,  60,  45],
         [ 54,  58,  39]],

        [[ 80, 101,  38],
         [ 84,  98,  43],
         [ 74,  95,  32],
         ...,
         [ 50,  55,  51],
         [ 50,  55,  50],
         [ 61,  67,  59]],

        ...,

        [[ 65,  92,  26],
         [ 63,  84,  24],
         [ 52,  77,  20],
         ...,
         [ 84,  82,  68],
         [ 56,  57,  48],
         [ 28,  33,  24]],

        [[ 70,  89,  26],
         [ 77,  89,  32],
         [ 60,  92,  30],
         ...,
         [ 77,  77,  66],
         [ 39,  39,  35],
         [ 32,  39,  28]],

        [[ 48,  73,  12],
         [ 57,  71,  21],
         [ 56,  85,  30],
         ...,
         [ 51,  53,  47],
         [ 24,  27,  22],
         [ 35,  44,  30]]],


       [[[175, 180, 174],
         [176, 181, 175],
         [181, 186, 180],
         ...,
         [193, 207, 210],
         [190, 204, 207],
         [188, 202, 205]],

        [[177, 182, 176],
         [179, 184, 178],
         [183, 188, 182],
         ...,
         [196, 210, 213],
         [192, 206, 209],
         [191, 205, 208]],

        [[176, 181, 175],
         [177, 182, 176],
         [182, 187, 181],
         ...,
         [194, 208, 211],
         [191, 205, 208],
         [189, 203, 206]],

        ...,

        [[122, 121, 129],
         [117, 118, 129],
         [114, 118, 130],
         ...,
         [ 58,  73,  91],
         [ 81,  97, 118],
         [ 99, 118, 141]],

        [[116, 115, 123],
         [110, 111, 121],
         [107, 111, 123],
         ...,
         [ 57,  70,  88],
         [ 78,  93, 113],
         [100, 117, 140]],

        [[113, 112, 119],
         [106, 107, 117],
         [105, 109, 121],
         ...,
         [ 57,  68,  85],
         [ 71,  85, 103],
         [ 93, 110, 131]]]], dtype=uint8), 'y_test': array([[3],
       [8],
       [8],
       [0],
       [6],
       [6],
       [1],
       [6],
       [3],
       [1],
       [0],
       [9],
       [5],
       [7],
       [9],
       [8],
       [5],
       [7],
       [8],
       [6],
       [7],
       [0],
       [4],
       [9],
       [5],
       [2],
       [4],
       [0],
       [9],
       [6],
       [6],
       [5],
       [4],
       [5],
       [9],
       [2],
       [4],
       [1],
       [9],
       [5],
       [4],
       [6],
       [5],
       [6],
       [0],
       [9],
       [3],
       [9],
       [7],
       [6],
       [9],
       [8],
       [0],
       [3],
       [8],
       [8],
       [7],
       [7],
       [4],
       [6],
       [7],
       [3],
       [6],
       [3],
       [6],
       [2],
       [1],
       [2],
       [3],
       [7],
       [2],
       [6],
       [8],
       [8],
       [0],
       [2],
       [9],
       [3],
       [3],
       [8],
       [8],
       [1],
       [1],
       [7],
       [2],
       [5],
       [2],
       [7],
       [8],
       [9],
       [0],
       [3],
       [8],
       [6],
       [4],
       [6],
       [6],
       [0],
       [0],
       [7],
       [4],
       [5],
       [6],
       [3],
       [1],
       [1],
       [3],
       [6],
       [8],
       [7],
       [4],
       [0],
       [6],
       [2],
       [1],
       [3],
       [0],
       [4],
       [2],
       [7],
       [8],
       [3],
       [1],
       [2],
       [8],
       [0],
       [8],
       [3],
       [5],
       [2],
       [4],
       [1],
       [8],
       [9],
       [1],
       [2],
       [9],
       [7],
       [2],
       [9],
       [6],
       [5],
       [6],
       [3],
       [8],
       [7],
       [6],
       [2],
       [5],
       [2],
       [8],
       [9],
       [6],
       [0],
       [0],
       [5],
       [2],
       [9],
       [5],
       [4],
       [2],
       [1],
       [6],
       [6],
       [8],
       [4],
       [8],
       [4],
       [5],
       [0],
       [9],
       [9],
       [9],
       [8],
       [9],
       [9],
       [3],
       [7],
       [5],
       [0],
       [0],
       [5],
       [2],
       [2],
       [3],
       [8],
       [6],
       [3],
       [4],
       [0],
       [5],
       [8],
       [0],
       [1],
       [7],
       [2],
       [8],
       [8],
       [7],
       [8],
       [5],
       [1],
       [8],
       [7],
       [1],
       [3],
       [0],
       [5],
       [7],
       [9],
       [7],
       [4],
       [5],
       [9],
       [8],
       [0],
       [7],
       [9],
       [8],
       [2],
       [7],
       [6],
       [9],
       [4],
       [3],
       [9],
       [6],
       [4],
       [7],
       [6],
       [5],
       [1],
       [5],
       [8],
       [8],
       [0],
       [4],
       [0],
       [5],
       [5],
       [1],
       [1],
       [8],
       [9],
       [0],
       [3],
       [1],
       [9],
       [2],
       [2],
       [5],
       [3],
       [9],
       [9],
       [4],
       [0],
       [3],
       [0],
       [0],
       [9],
       [8],
       [1],
       [5],
       [7],
       [0],
       [8],
       [2],
       [4],
       [7],
       [0],
       [2],
       [3],
       [6],
       [3],
       [8],
       [5],
       [0],
       [3],
       [4],
       [3],
       [9],
       [0],
       [6],
       [1],
       [0],
       [9],
       [1],
       [0],
       [7],
       [9],
       [1],
       [2],
       [6],
       [9],
       [3],
       [4],
       [6],
       [0],
       [0],
       [6],
       [6],
       [6],
       [3],
       [2],
       [6],
       [1],
       [8],
       [2],
       [1],
       [6],
       [8],
       [6],
       [8],
       [0],
       [4],
       [0],
       [7],
       [7],
       [5],
       [5],
       [3],
       [5],
       [2],
       [3],
       [4],
       [1],
       [7],
       [5],
       [4],
       [6],
       [1],
       [9],
       [3],
       [6],
       [6],
       [9],
       [3],
       [8],
       [0],
       [7],
       [2],
       [6],
       [2],
       [5],
       [8],
       [5],
       [4],
       [6],
       [8],
       [9],
       [9],
       [1],
       [0],
       [2],
       [2],
       [7],
       [3],
       [2],
       [8],
       [0],
       [9],
       [5],
       [8],
       [1],
       [9],
       [4],
       [1],
       [3],
       [8],
       [1],
       [4],
       [7],
       [9],
       [4],
       [2],
       [7],
       [0],
       [7],
       [0],
       [6],
       [6],
       [9],
       [0],
       [9],
       [2],
       [8],
       [7],
       [2],
       [2],
       [5],
       [1],
       [2],
       [6],
       [2],
       [9],
       [6],
       [2],
       [3],
       [0],
       [3],
       [9],
       [8],
       [7],
       [8],
       [8],
       [4],
       [0],
       [1],
       [8],
       [2],
       [7],
       [9],
       [3],
       [6],
       [1],
       [9],
       [0],
       [7],
       [3],
       [7],
       [4],
       [5],
       [0],
       [0],
       [2],
       [9],
       [3],
       [4],
       [0],
       [6],
       [2],
       [5],
       [3],
       [7],
       [3],
       [7],
       [2],
       [5],
       [3],
       [1],
       [1],
       [4],
       [9],
       [9],
       [5],
       [7],
       [5],
       [0],
       [2],
       [2],
       [2],
       [9],
       [7],
       [3],
       [9],
       [4],
       [3],
       [5],
       [4],
       [6],
       [5],
       [6],
       [1],
       [4],
       [3],
       [4],
       [4],
       [3],
       [7],
       [8],
       [3],
       [7],
       [8],
       [0],
       [5],
       [7],
       [6],
       [0],
       [5],
       [4],
       [8],
       [6],
       [8],
       [5],
       [5],
       [9],
       [9],
       [9],
       [5],
       [0],
       [1],
       [0],
       [8],
       [1],
       [1],
       [8],
       [0],
       [2],
       [2],
       [0],
       [4],
       [6],
       [5],
       [4],
       [9],
       [4],
       [7],
       [9],
       [9],
       [4],
       [5],
       [6],
       [6],
       [1],
       [5],
       [3],
       [8],
       [9],
       [5],
       [8],
       [5],
       [7],
       [0],
       [7],
       [0],
       [5],
       [0],
       [0],
       [4],
       [6],
       [9],
       [0],
       [9],
       [5],
       [6],
       [6],
       [6],
       [2],
       [9],
       [0],
       [1],
       [7],
       [6],
       [7],
       [5],
       [9],
       [1],
       [6],
       [2],
       [5],
       [5],
       [5],
       [8],
       [5],
       [9],
       [4],
       [6],
       [4],
       [3],
       [2],
       [0],
       [7],
       [6],
       [2],
       [2],
       [3],
       [9],
       [7],
       [9],
       [2],
       [6],
       [7],
       [1],
       [3],
       [6],
       [6],
       [8],
       [9],
       [7],
       [5],
       [4],
       [0],
       [8],
       [4],
       [0],
       [9],
       [3],
       [4],
       [8],
       [9],
       [6],
       [9],
       [2],
       [6],
       [1],
       [4],
       [7],
       [3],
       [5],
       [3],
       [8],
       [5],
       [0],
       [2],
       [1],
       [6],
       [4],
       [3],
       [3],
       [9],
       [6],
       [9],
       [8],
       [8],
       [5],
       [8],
       [6],
       [6],
       [2],
       [1],
       [7],
       [7],
       [1],
       [2],
       [7],
       [9],
       [9],
       [4],
       [4],
       [1],
       [2],
       [5],
       [6],
       [8],
       [7],
       [6],
       [8],
       [3],
       [0],
       [5],
       [5],
       [3],
       [0],
       [7],
       [9],
       [1],
       [3],
       [4],
       [4],
       [5],
       [3],
       [9],
       [5],
       [6],
       [9],
       [2],
       [1],
       [1],
       [4],
       [1],
       [9],
       [4],
       [7],
       [6],
       [3],
       [8],
       [9],
       [0],
       [1],
       [3],
       [6],
       [3],
       [6],
       [3],
       [2],
       [0],
       [3],
       [1],
       [0],
       [5],
       [9],
       [6],
       [4],
       [8],
       [9],
       [6],
       [9],
       [6],
       [3],
       [0],
       [3],
       [2],
       [2],
       [7],
       [8],
       [3],
       [8],
       [2],
       [7],
       [5],
       [7],
       [2],
       [4],
       [8],
       [7],
       [4],
       [2],
       [9],
       [8],
       [8],
       [6],
       [8],
       [8],
       [7],
       [4],
       [3],
       [3],
       [8],
       [4],
       [9],
       [4],
       [8],
       [8],
       [1],
       [8],
       [2],
       [1],
       [3],
       [6],
       [5],
       [4],
       [2],
       [7],
       [9],
       [9],
       [4],
       [1],
       [4],
       [1],
       [3],
       [2],
       [7],
       [0],
       [7],
       [9],
       [7],
       [6],
       [6],
       [2],
       [5],
       [9],
       [2],
       [9],
       [1],
       [2],
       [2],
       [6],
       [8],
       [2],
       [1],
       [3],
       [6],
       [6],
       [0],
       [1],
       [2],
       [7],
       [0],
       [5],
       [4],
       [6],
       [1],
       [6],
       [4],
       [0],
       [2],
       [2],
       [6],
       [0],
       [5],
       [9],
       [1],
       [7],
       [6],
       [7],
       [0],
       [3],
       [9],
       [6],
       [8],
       [3],
       [0],
       [3],
       [4],
       [7],
       [7],
       [1],
       [4],
       [7],
       [2],
       [7],
       [1],
       [4],
       [7],
       [4],
       [4],
       [8],
       [4],
       [7],
       [7],
       [5],
       [3],
       [7],
       [2],
       [0],
       [8],
       [9],
       [5],
       [8],
       [3],
       [6],
       [2],
       [0],
       [8],
       [7],
       [3],
       [7],
       [6],
       [5],
       [3],
       [1],
       [3],
       [2],
       [2],
       [5],
       [4],
       [1],
       [2],
       [9],
       [2],
       [7],
       [0],
       [7],
       [2],
       [1],
       [3],
       [2],
       [0],
       [2],
       [4],
       [7],
       [9],
       [8],
       [9],
       [0],
       [7],
       [7],
       [0],
       [7],
       [8],
       [4],
       [6],
       [3],
       [3],
       [0],
       [1],
       [3],
       [7],
       [0],
       [1],
       [3],
       [1],
       [4],
       [2],
       [3],
       [8],
       [4],
       [2],
       [3],
       [7],
       [8],
       [4],
       [3],
       [0],
       [9],
       [0],
       [0],
       [1],
       [0],
       [4],
       [4],
       [6],
       [7],
       [6],
       [1],
       [1],
       [3],
       [7],
       [3],
       [5],
       [2],
       [6],
       [6],
       [5],
       [8],
       [7],
       [1],
       [6],
       [8],
       [8],
       [5],
       [3],
       [0],
       [4],
       [0],
       [1],
       [3],
       [8],
       [8],
       [0],
       [6],
       [9],
       [9],
       [9],
       [5],
       [5],
       [8],
       [6],
       [0],
       [0],
       [4],
       [2],
       [3],
       [2],
       [7],
       [2],
       [2],
       [5],
       [9],
       [8],
       [9],
       [1],
       [7],
       [4],
       [0],
       [3],
       [0],
       [1],
       [3],
       [8],
       [3],
       [9],
       [6],
       [1],
       [4],
       [7],
       [0],
       [3],
       [7],
       [8],
       [9],
       [1],
       [1],
       [6],
       [6],
       [6],
       [6],
       [9],
       [1],
       [9],
       [9],
       [4],
       [2],
       [1],
       [7],
       [0],
       [6],
       [8],
       [1],
       [9],
       [2],
       [9],
       [0],
       [4],
       [7],
       [8],
       [3],
       [1],
       [2],
       [0],
       [1],
       [5],
       [8],
       [4],
       [6],
       [3],
       [8],
       [1],
       [3],
       [8]], dtype=uint8)}
2020-10-28 13:52:38,405 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 13:53:30,946 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 13:53:30,946 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 13:53:30,949 - engine_logger:INFO - logger info level msg 
2020-10-28 13:53:30,949 - engine_logger:WARNING - logger warn level msg 
2020-10-28 13:53:30,949 - engine_logger:ERROR - logger error level msg 
2020-10-28 13:53:30,949 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 13:53:30,949 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 13:53:30,949 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 13:53:30,950 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 13:53:30,974 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:53:30,974 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 13:53:30,975 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 13:53:30,975 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 13:53:30,975 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 13:53:30,975 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 13:53:30,997 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:53:31,020 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:53:31,020 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 13:53:31,020 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 13:53:31,020 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 13:53:31,020 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 13:53:31,127 - engine_logger:INFO - Engine instantiated in MP: PredictionEngine
2020-10-28 13:53:31,127 - engine_logger:INFO - Getting MNIST data.... 
2020-10-28 13:53:32,112 - engine_logger:INFO - Got MNIST data(reduced sample): {'x_train': array([[[[ 59,  62,  63],
         [ 43,  46,  45],
         [ 50,  48,  43],
         ...,
         [158, 132, 108],
         [152, 125, 102],
         [148, 124, 103]],

        [[ 16,  20,  20],
         [  0,   0,   0],
         [ 18,   8,   0],
         ...,
         [123,  88,  55],
         [119,  83,  50],
         [122,  87,  57]],

        [[ 25,  24,  21],
         [ 16,   7,   0],
         [ 49,  27,   8],
         ...,
         [118,  84,  50],
         [120,  84,  50],
         [109,  73,  42]],

        ...,

        [[208, 170,  96],
         [201, 153,  34],
         [198, 161,  26],
         ...,
         [160, 133,  70],
         [ 56,  31,   7],
         [ 53,  34,  20]],

        [[180, 139,  96],
         [173, 123,  42],
         [186, 144,  30],
         ...,
         [184, 148,  94],
         [ 97,  62,  34],
         [ 83,  53,  34]],

        [[177, 144, 116],
         [168, 129,  94],
         [179, 142,  87],
         ...,
         [216, 184, 140],
         [151, 118,  84],
         [123,  92,  72]]],


       [[[154, 177, 187],
         [126, 137, 136],
         [105, 104,  95],
         ...,
         [ 91,  95,  71],
         [ 87,  90,  71],
         [ 79,  81,  70]],

        [[140, 160, 169],
         [145, 153, 154],
         [125, 125, 118],
         ...,
         [ 96,  99,  78],
         [ 77,  80,  62],
         [ 71,  73,  61]],

        [[140, 155, 164],
         [139, 146, 149],
         [115, 115, 112],
         ...,
         [ 79,  82,  64],
         [ 68,  70,  55],
         [ 67,  69,  55]],

        ...,

        [[175, 167, 166],
         [156, 154, 160],
         [154, 160, 170],
         ...,
         [ 42,  34,  36],
         [ 61,  53,  57],
         [ 93,  83,  91]],

        [[165, 154, 128],
         [156, 152, 130],
         [159, 161, 142],
         ...,
         [103,  93,  96],
         [123, 114, 120],
         [131, 121, 131]],

        [[163, 148, 120],
         [158, 148, 122],
         [163, 156, 133],
         ...,
         [143, 133, 139],
         [143, 134, 142],
         [143, 133, 144]]],


       [[[255, 255, 255],
         [253, 253, 253],
         [253, 253, 253],
         ...,
         [253, 253, 253],
         [253, 253, 253],
         [253, 253, 253]],

        [[255, 255, 255],
         [255, 255, 255],
         [255, 255, 255],
         ...,
         [255, 255, 255],
         [255, 255, 255],
         [255, 255, 255]],

        [[255, 255, 255],
         [254, 254, 254],
         [254, 254, 254],
         ...,
         [254, 254, 254],
         [254, 254, 254],
         [254, 254, 254]],

        ...,

        [[113, 120, 112],
         [111, 118, 111],
         [105, 112, 106],
         ...,
         [ 72,  81,  80],
         [ 72,  80,  79],
         [ 72,  80,  79]],

        [[111, 118, 110],
         [104, 111, 104],
         [ 99, 106,  98],
         ...,
         [ 68,  75,  73],
         [ 70,  76,  75],
         [ 78,  84,  82]],

        [[106, 113, 105],
         [ 99, 106,  98],
         [ 95, 102,  94],
         ...,
         [ 78,  85,  83],
         [ 79,  85,  83],
         [ 80,  86,  84]]],


       ...,


       [[[167, 163, 145],
         [206, 201, 181],
         [202, 196, 177],
         ...,
         [ 91,  85,  89],
         [ 50,  64,  68],
         [ 46,  86,  90]],

        [[156, 153, 136],
         [206, 201, 181],
         [206, 199, 180],
         ...,
         [171, 166, 174],
         [ 99, 115, 123],
         [ 48,  88,  94]],

        [[147, 143, 128],
         [192, 186, 167],
         [206, 198, 177],
         ...,
         [173, 176, 186],
         [106, 130, 140],
         [ 48,  90,  96]],

        ...,

        [[144, 156, 151],
         [145, 153, 148],
         [152, 160, 156],
         ...,
         [ 45,  85,  91],
         [ 41,  78,  85],
         [ 47,  88,  94]],

        [[143, 155, 150],
         [148, 157, 154],
         [156, 167, 167],
         ...,
         [ 32,  56,  65],
         [ 31,  58,  66],
         [ 34,  66,  73]],

        [[139, 154, 149],
         [144, 157, 155],
         [140, 157, 159],
         ...,
         [ 39,  75,  81],
         [ 42,  82,  87],
         [ 42,  78,  84]]],


       [[[154, 152, 125],
         [156, 154, 130],
         [149, 146, 125],
         ...,
         [156, 154, 110],
         [131, 130,  97],
         [154, 149, 111]],

        [[163, 150, 111],
         [178, 167, 125],
         [179, 168, 126],
         ...,
         [185, 175, 127],
         [166, 165, 118],
         [168, 164, 117]],

        [[198, 184, 126],
         [188, 173, 117],
         [193, 179, 121],
         ...,
         [188, 166, 118],
         [184, 172, 126],
         [183, 179, 128]],

        ...,

        [[187, 185, 132],
         [175, 175, 129],
         [162, 162, 109],
         ...,
         [201, 217, 129],
         [200, 220, 129],
         [190, 205, 118]],

        [[157, 160, 109],
         [147, 153, 104],
         [144, 157,  98],
         ...,
         [213, 232, 134],
         [191, 227, 117],
         [173, 216, 105]],

        [[153, 150, 102],
         [150, 159,  99],
         [173, 195, 124],
         ...,
         [195, 234, 113],
         [187, 237, 108],
         [194, 247, 114]]],


       [[[ 45,  32,  21],
         [ 48,  34,  21],
         [ 66,  54,  41],
         ...,
         [ 19,   9,   7],
         [ 23,  14,  10],
         [ 20,  10,   8]],

        [[ 47,  33,  21],
         [ 50,  35,  22],
         [ 71,  58,  44],
         ...,
         [ 22,  10,   8],
         [ 22,  11,  10],
         [ 19,   8,   7]],

        [[ 47,  35,  22],
         [ 54,  40,  24],
         [ 63,  50,  35],
         ...,
         [ 24,  10,   7],
         [ 18,   6,   6],
         [ 18,   7,   6]],

        ...,

        [[109, 105,  66],
         [113, 108,  68],
         [115, 106,  67],
         ...,
         [103,  87,  55],
         [ 85,  75,  43],
         [ 97,  85,  52]],

        [[ 96,  90,  53],
         [114, 106,  69],
         [111, 102,  64],
         ...,
         [164, 146, 104],
         [154, 135,  89],
         [152, 139,  97]],

        [[ 97,  91,  52],
         [ 85,  79,  40],
         [105,  99,  57],
         ...,
         [161, 148, 108],
         [156, 137,  93],
         [156, 142, 100]]]], dtype=uint8), 'y_train': array([[6],
       [9],
       [9],
       ...,
       [5],
       [4],
       [6]], dtype=uint8), 'x_test': array([[[[158, 112,  49],
         [159, 111,  47],
         [165, 116,  51],
         ...,
         [137,  95,  36],
         [126,  91,  36],
         [116,  85,  33]],

        [[152, 112,  51],
         [151, 110,  40],
         [159, 114,  45],
         ...,
         [136,  95,  31],
         [125,  91,  32],
         [119,  88,  34]],

        [[151, 110,  47],
         [151, 109,  33],
         [158, 111,  36],
         ...,
         [139,  98,  34],
         [130,  95,  34],
         [120,  89,  33]],

        ...,

        [[ 68, 124, 177],
         [ 42, 100, 148],
         [ 31,  88, 137],
         ...,
         [ 38,  97, 146],
         [ 13,  64, 108],
         [ 40,  85, 127]],

        [[ 61, 116, 168],
         [ 49, 102, 148],
         [ 35,  85, 132],
         ...,
         [ 26,  82, 130],
         [ 29,  82, 126],
         [ 20,  64, 107]],

        [[ 54, 107, 160],
         [ 56, 105, 149],
         [ 45,  89, 132],
         ...,
         [ 24,  77, 124],
         [ 34,  84, 129],
         [ 21,  67, 110]]],


       [[[235, 235, 235],
         [231, 231, 231],
         [232, 232, 232],
         ...,
         [233, 233, 233],
         [233, 233, 233],
         [232, 232, 232]],

        [[238, 238, 238],
         [235, 235, 235],
         [235, 235, 235],
         ...,
         [236, 236, 236],
         [236, 236, 236],
         [235, 235, 235]],

        [[237, 237, 237],
         [234, 234, 234],
         [234, 234, 234],
         ...,
         [235, 235, 235],
         [235, 235, 235],
         [234, 234, 234]],

        ...,

        [[ 87,  99,  89],
         [ 43,  51,  37],
         [ 19,  23,  11],
         ...,
         [169, 184, 179],
         [182, 197, 193],
         [188, 202, 201]],

        [[ 82,  96,  82],
         [ 46,  57,  36],
         [ 36,  44,  22],
         ...,
         [174, 189, 183],
         [185, 200, 196],
         [187, 202, 200]],

        [[ 85, 101,  83],
         [ 62,  75,  48],
         [ 58,  67,  38],
         ...,
         [168, 183, 178],
         [180, 195, 191],
         [186, 200, 199]]],


       [[[158, 190, 222],
         [158, 187, 218],
         [139, 166, 194],
         ...,
         [228, 231, 234],
         [237, 239, 243],
         [238, 241, 246]],

        [[170, 200, 229],
         [172, 199, 226],
         [151, 176, 201],
         ...,
         [232, 232, 236],
         [246, 246, 250],
         [246, 247, 251]],

        [[174, 201, 225],
         [176, 200, 222],
         [157, 179, 199],
         ...,
         [230, 229, 232],
         [250, 249, 251],
         [245, 244, 247]],

        ...,

        [[ 31,  40,  45],
         [ 30,  39,  44],
         [ 26,  35,  40],
         ...,
         [ 37,  40,  46],
         [  9,  13,  14],
         [  4,   7,   5]],

        [[ 23,  34,  39],
         [ 27,  38,  43],
         [ 25,  36,  41],
         ...,
         [ 19,  20,  24],
         [  4,   6,   3],
         [  5,   7,   3]],

        [[ 28,  41,  47],
         [ 30,  43,  50],
         [ 32,  45,  52],
         ...,
         [  5,   6,   8],
         [  4,   5,   3],
         [  7,   8,   7]]],


       ...,


       [[[103, 124, 101],
         [124, 149, 120],
         [ 73,  98,  73],
         ...,
         [ 17,  25,  16],
         [ 10,  15,   9],
         [ 15,  19,  13]],

        [[162, 175, 148],
         [122, 137, 107],
         [111, 126, 103],
         ...,
         [ 28,  38,  25],
         [ 18,  22,  16],
         [ 11,  12,   8]],

        [[226, 236, 200],
         [209, 217, 183],
         [204, 216, 161],
         ...,
         [ 21,  29,  18],
         [ 19,  24,  17],
         [ 14,  17,  11]],

        ...,

        [[132, 134, 145],
         [126, 128, 138],
         [127, 127, 139],
         ...,
         [ 43,  36,  33],
         [ 64,  46,  31],
         [ 88,  53,  32]],

        [[125, 123, 134],
         [123, 122, 132],
         [121, 120, 132],
         ...,
         [ 41,  42,  43],
         [ 52,  39,  35],
         [ 87,  56,  43]],

        [[121, 119, 131],
         [119, 117, 129],
         [118, 118, 130],
         ...,
         [ 48,  49,  53],
         [ 53,  48,  50],
         [ 67,  42,  37]]],


       [[[ 77, 114,  33],
         [ 72, 111,  25],
         [ 76, 110,  34],
         ...,
         [ 59,  64,  46],
         [ 56,  58,  42],
         [ 56,  58,  40]],

        [[ 74, 107,  34],
         [ 71,  93,  31],
         [ 80, 102,  39],
         ...,
         [ 52,  55,  44],
         [ 57,  60,  45],
         [ 54,  58,  39]],

        [[ 80, 101,  38],
         [ 84,  98,  43],
         [ 74,  95,  32],
         ...,
         [ 50,  55,  51],
         [ 50,  55,  50],
         [ 61,  67,  59]],

        ...,

        [[ 65,  92,  26],
         [ 63,  84,  24],
         [ 52,  77,  20],
         ...,
         [ 84,  82,  68],
         [ 56,  57,  48],
         [ 28,  33,  24]],

        [[ 70,  89,  26],
         [ 77,  89,  32],
         [ 60,  92,  30],
         ...,
         [ 77,  77,  66],
         [ 39,  39,  35],
         [ 32,  39,  28]],

        [[ 48,  73,  12],
         [ 57,  71,  21],
         [ 56,  85,  30],
         ...,
         [ 51,  53,  47],
         [ 24,  27,  22],
         [ 35,  44,  30]]],


       [[[175, 180, 174],
         [176, 181, 175],
         [181, 186, 180],
         ...,
         [193, 207, 210],
         [190, 204, 207],
         [188, 202, 205]],

        [[177, 182, 176],
         [179, 184, 178],
         [183, 188, 182],
         ...,
         [196, 210, 213],
         [192, 206, 209],
         [191, 205, 208]],

        [[176, 181, 175],
         [177, 182, 176],
         [182, 187, 181],
         ...,
         [194, 208, 211],
         [191, 205, 208],
         [189, 203, 206]],

        ...,

        [[122, 121, 129],
         [117, 118, 129],
         [114, 118, 130],
         ...,
         [ 58,  73,  91],
         [ 81,  97, 118],
         [ 99, 118, 141]],

        [[116, 115, 123],
         [110, 111, 121],
         [107, 111, 123],
         ...,
         [ 57,  70,  88],
         [ 78,  93, 113],
         [100, 117, 140]],

        [[113, 112, 119],
         [106, 107, 117],
         [105, 109, 121],
         ...,
         [ 57,  68,  85],
         [ 71,  85, 103],
         [ 93, 110, 131]]]], dtype=uint8), 'y_test': array([[3],
       [8],
       [8],
       [0],
       [6],
       [6],
       [1],
       [6],
       [3],
       [1],
       [0],
       [9],
       [5],
       [7],
       [9],
       [8],
       [5],
       [7],
       [8],
       [6],
       [7],
       [0],
       [4],
       [9],
       [5],
       [2],
       [4],
       [0],
       [9],
       [6],
       [6],
       [5],
       [4],
       [5],
       [9],
       [2],
       [4],
       [1],
       [9],
       [5],
       [4],
       [6],
       [5],
       [6],
       [0],
       [9],
       [3],
       [9],
       [7],
       [6],
       [9],
       [8],
       [0],
       [3],
       [8],
       [8],
       [7],
       [7],
       [4],
       [6],
       [7],
       [3],
       [6],
       [3],
       [6],
       [2],
       [1],
       [2],
       [3],
       [7],
       [2],
       [6],
       [8],
       [8],
       [0],
       [2],
       [9],
       [3],
       [3],
       [8],
       [8],
       [1],
       [1],
       [7],
       [2],
       [5],
       [2],
       [7],
       [8],
       [9],
       [0],
       [3],
       [8],
       [6],
       [4],
       [6],
       [6],
       [0],
       [0],
       [7],
       [4],
       [5],
       [6],
       [3],
       [1],
       [1],
       [3],
       [6],
       [8],
       [7],
       [4],
       [0],
       [6],
       [2],
       [1],
       [3],
       [0],
       [4],
       [2],
       [7],
       [8],
       [3],
       [1],
       [2],
       [8],
       [0],
       [8],
       [3],
       [5],
       [2],
       [4],
       [1],
       [8],
       [9],
       [1],
       [2],
       [9],
       [7],
       [2],
       [9],
       [6],
       [5],
       [6],
       [3],
       [8],
       [7],
       [6],
       [2],
       [5],
       [2],
       [8],
       [9],
       [6],
       [0],
       [0],
       [5],
       [2],
       [9],
       [5],
       [4],
       [2],
       [1],
       [6],
       [6],
       [8],
       [4],
       [8],
       [4],
       [5],
       [0],
       [9],
       [9],
       [9],
       [8],
       [9],
       [9],
       [3],
       [7],
       [5],
       [0],
       [0],
       [5],
       [2],
       [2],
       [3],
       [8],
       [6],
       [3],
       [4],
       [0],
       [5],
       [8],
       [0],
       [1],
       [7],
       [2],
       [8],
       [8],
       [7],
       [8],
       [5],
       [1],
       [8],
       [7],
       [1],
       [3],
       [0],
       [5],
       [7],
       [9],
       [7],
       [4],
       [5],
       [9],
       [8],
       [0],
       [7],
       [9],
       [8],
       [2],
       [7],
       [6],
       [9],
       [4],
       [3],
       [9],
       [6],
       [4],
       [7],
       [6],
       [5],
       [1],
       [5],
       [8],
       [8],
       [0],
       [4],
       [0],
       [5],
       [5],
       [1],
       [1],
       [8],
       [9],
       [0],
       [3],
       [1],
       [9],
       [2],
       [2],
       [5],
       [3],
       [9],
       [9],
       [4],
       [0],
       [3],
       [0],
       [0],
       [9],
       [8],
       [1],
       [5],
       [7],
       [0],
       [8],
       [2],
       [4],
       [7],
       [0],
       [2],
       [3],
       [6],
       [3],
       [8],
       [5],
       [0],
       [3],
       [4],
       [3],
       [9],
       [0],
       [6],
       [1],
       [0],
       [9],
       [1],
       [0],
       [7],
       [9],
       [1],
       [2],
       [6],
       [9],
       [3],
       [4],
       [6],
       [0],
       [0],
       [6],
       [6],
       [6],
       [3],
       [2],
       [6],
       [1],
       [8],
       [2],
       [1],
       [6],
       [8],
       [6],
       [8],
       [0],
       [4],
       [0],
       [7],
       [7],
       [5],
       [5],
       [3],
       [5],
       [2],
       [3],
       [4],
       [1],
       [7],
       [5],
       [4],
       [6],
       [1],
       [9],
       [3],
       [6],
       [6],
       [9],
       [3],
       [8],
       [0],
       [7],
       [2],
       [6],
       [2],
       [5],
       [8],
       [5],
       [4],
       [6],
       [8],
       [9],
       [9],
       [1],
       [0],
       [2],
       [2],
       [7],
       [3],
       [2],
       [8],
       [0],
       [9],
       [5],
       [8],
       [1],
       [9],
       [4],
       [1],
       [3],
       [8],
       [1],
       [4],
       [7],
       [9],
       [4],
       [2],
       [7],
       [0],
       [7],
       [0],
       [6],
       [6],
       [9],
       [0],
       [9],
       [2],
       [8],
       [7],
       [2],
       [2],
       [5],
       [1],
       [2],
       [6],
       [2],
       [9],
       [6],
       [2],
       [3],
       [0],
       [3],
       [9],
       [8],
       [7],
       [8],
       [8],
       [4],
       [0],
       [1],
       [8],
       [2],
       [7],
       [9],
       [3],
       [6],
       [1],
       [9],
       [0],
       [7],
       [3],
       [7],
       [4],
       [5],
       [0],
       [0],
       [2],
       [9],
       [3],
       [4],
       [0],
       [6],
       [2],
       [5],
       [3],
       [7],
       [3],
       [7],
       [2],
       [5],
       [3],
       [1],
       [1],
       [4],
       [9],
       [9],
       [5],
       [7],
       [5],
       [0],
       [2],
       [2],
       [2],
       [9],
       [7],
       [3],
       [9],
       [4],
       [3],
       [5],
       [4],
       [6],
       [5],
       [6],
       [1],
       [4],
       [3],
       [4],
       [4],
       [3],
       [7],
       [8],
       [3],
       [7],
       [8],
       [0],
       [5],
       [7],
       [6],
       [0],
       [5],
       [4],
       [8],
       [6],
       [8],
       [5],
       [5],
       [9],
       [9],
       [9],
       [5],
       [0],
       [1],
       [0],
       [8],
       [1],
       [1],
       [8],
       [0],
       [2],
       [2],
       [0],
       [4],
       [6],
       [5],
       [4],
       [9],
       [4],
       [7],
       [9],
       [9],
       [4],
       [5],
       [6],
       [6],
       [1],
       [5],
       [3],
       [8],
       [9],
       [5],
       [8],
       [5],
       [7],
       [0],
       [7],
       [0],
       [5],
       [0],
       [0],
       [4],
       [6],
       [9],
       [0],
       [9],
       [5],
       [6],
       [6],
       [6],
       [2],
       [9],
       [0],
       [1],
       [7],
       [6],
       [7],
       [5],
       [9],
       [1],
       [6],
       [2],
       [5],
       [5],
       [5],
       [8],
       [5],
       [9],
       [4],
       [6],
       [4],
       [3],
       [2],
       [0],
       [7],
       [6],
       [2],
       [2],
       [3],
       [9],
       [7],
       [9],
       [2],
       [6],
       [7],
       [1],
       [3],
       [6],
       [6],
       [8],
       [9],
       [7],
       [5],
       [4],
       [0],
       [8],
       [4],
       [0],
       [9],
       [3],
       [4],
       [8],
       [9],
       [6],
       [9],
       [2],
       [6],
       [1],
       [4],
       [7],
       [3],
       [5],
       [3],
       [8],
       [5],
       [0],
       [2],
       [1],
       [6],
       [4],
       [3],
       [3],
       [9],
       [6],
       [9],
       [8],
       [8],
       [5],
       [8],
       [6],
       [6],
       [2],
       [1],
       [7],
       [7],
       [1],
       [2],
       [7],
       [9],
       [9],
       [4],
       [4],
       [1],
       [2],
       [5],
       [6],
       [8],
       [7],
       [6],
       [8],
       [3],
       [0],
       [5],
       [5],
       [3],
       [0],
       [7],
       [9],
       [1],
       [3],
       [4],
       [4],
       [5],
       [3],
       [9],
       [5],
       [6],
       [9],
       [2],
       [1],
       [1],
       [4],
       [1],
       [9],
       [4],
       [7],
       [6],
       [3],
       [8],
       [9],
       [0],
       [1],
       [3],
       [6],
       [3],
       [6],
       [3],
       [2],
       [0],
       [3],
       [1],
       [0],
       [5],
       [9],
       [6],
       [4],
       [8],
       [9],
       [6],
       [9],
       [6],
       [3],
       [0],
       [3],
       [2],
       [2],
       [7],
       [8],
       [3],
       [8],
       [2],
       [7],
       [5],
       [7],
       [2],
       [4],
       [8],
       [7],
       [4],
       [2],
       [9],
       [8],
       [8],
       [6],
       [8],
       [8],
       [7],
       [4],
       [3],
       [3],
       [8],
       [4],
       [9],
       [4],
       [8],
       [8],
       [1],
       [8],
       [2],
       [1],
       [3],
       [6],
       [5],
       [4],
       [2],
       [7],
       [9],
       [9],
       [4],
       [1],
       [4],
       [1],
       [3],
       [2],
       [7],
       [0],
       [7],
       [9],
       [7],
       [6],
       [6],
       [2],
       [5],
       [9],
       [2],
       [9],
       [1],
       [2],
       [2],
       [6],
       [8],
       [2],
       [1],
       [3],
       [6],
       [6],
       [0],
       [1],
       [2],
       [7],
       [0],
       [5],
       [4],
       [6],
       [1],
       [6],
       [4],
       [0],
       [2],
       [2],
       [6],
       [0],
       [5],
       [9],
       [1],
       [7],
       [6],
       [7],
       [0],
       [3],
       [9],
       [6],
       [8],
       [3],
       [0],
       [3],
       [4],
       [7],
       [7],
       [1],
       [4],
       [7],
       [2],
       [7],
       [1],
       [4],
       [7],
       [4],
       [4],
       [8],
       [4],
       [7],
       [7],
       [5],
       [3],
       [7],
       [2],
       [0],
       [8],
       [9],
       [5],
       [8],
       [3],
       [6],
       [2],
       [0],
       [8],
       [7],
       [3],
       [7],
       [6],
       [5],
       [3],
       [1],
       [3],
       [2],
       [2],
       [5],
       [4],
       [1],
       [2],
       [9],
       [2],
       [7],
       [0],
       [7],
       [2],
       [1],
       [3],
       [2],
       [0],
       [2],
       [4],
       [7],
       [9],
       [8],
       [9],
       [0],
       [7],
       [7],
       [0],
       [7],
       [8],
       [4],
       [6],
       [3],
       [3],
       [0],
       [1],
       [3],
       [7],
       [0],
       [1],
       [3],
       [1],
       [4],
       [2],
       [3],
       [8],
       [4],
       [2],
       [3],
       [7],
       [8],
       [4],
       [3],
       [0],
       [9],
       [0],
       [0],
       [1],
       [0],
       [4],
       [4],
       [6],
       [7],
       [6],
       [1],
       [1],
       [3],
       [7],
       [3],
       [5],
       [2],
       [6],
       [6],
       [5],
       [8],
       [7],
       [1],
       [6],
       [8],
       [8],
       [5],
       [3],
       [0],
       [4],
       [0],
       [1],
       [3],
       [8],
       [8],
       [0],
       [6],
       [9],
       [9],
       [9],
       [5],
       [5],
       [8],
       [6],
       [0],
       [0],
       [4],
       [2],
       [3],
       [2],
       [7],
       [2],
       [2],
       [5],
       [9],
       [8],
       [9],
       [1],
       [7],
       [4],
       [0],
       [3],
       [0],
       [1],
       [3],
       [8],
       [3],
       [9],
       [6],
       [1],
       [4],
       [7],
       [0],
       [3],
       [7],
       [8],
       [9],
       [1],
       [1],
       [6],
       [6],
       [6],
       [6],
       [9],
       [1],
       [9],
       [9],
       [4],
       [2],
       [1],
       [7],
       [0],
       [6],
       [8],
       [1],
       [9],
       [2],
       [9],
       [0],
       [4],
       [7],
       [8],
       [3],
       [1],
       [2],
       [0],
       [1],
       [5],
       [8],
       [4],
       [6],
       [3],
       [8],
       [1],
       [3],
       [8]], dtype=uint8)}
2020-10-28 13:53:32,112 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 13:54:55,607 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 13:54:55,607 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 13:54:55,607 - engine_logger:INFO - logger info level msg 
2020-10-28 13:54:55,607 - engine_logger:WARNING - logger warn level msg 
2020-10-28 13:54:55,608 - engine_logger:ERROR - logger error level msg 
2020-10-28 13:54:55,608 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 13:54:55,608 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 13:54:55,608 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 13:54:55,611 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 13:54:55,722 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:54:55,723 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 13:54:55,723 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 13:54:55,723 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 13:54:55,723 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 13:54:55,723 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 13:54:55,834 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:54:55,944 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:54:55,944 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 13:54:55,944 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 13:54:55,945 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 13:54:55,945 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 13:55:03,192 - engine_logger:INFO - Engine instantiated in MP: PredictionEngine
2020-10-28 13:55:03,789 - engine_logger:INFO - Getting MNIST data.... 
2020-10-28 13:57:21,416 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 13:57:21,416 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 13:57:21,416 - engine_logger:INFO - logger info level msg 
2020-10-28 13:57:21,416 - engine_logger:WARNING - logger warn level msg 
2020-10-28 13:57:21,417 - engine_logger:ERROR - logger error level msg 
2020-10-28 13:57:21,417 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 13:57:21,417 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 13:57:21,417 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 13:57:21,418 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 13:57:21,442 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:57:21,442 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 13:57:21,442 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 13:57:21,442 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 13:57:21,442 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 13:57:21,442 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 13:57:21,464 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:57:21,486 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:57:21,486 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 13:57:21,487 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 13:57:21,487 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 13:57:21,487 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 13:57:21,594 - engine_logger:INFO - Engine instantiated in MP: PredictionEngine
2020-10-28 13:58:07,334 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 13:58:07,335 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 13:58:07,335 - engine_logger:INFO - logger info level msg 
2020-10-28 13:58:07,335 - engine_logger:WARNING - logger warn level msg 
2020-10-28 13:58:07,335 - engine_logger:ERROR - logger error level msg 
2020-10-28 13:58:07,335 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 13:58:07,336 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 13:58:07,336 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 13:58:07,339 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 13:58:07,451 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:58:07,451 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 13:58:07,451 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 13:58:07,451 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 13:58:07,451 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 13:58:07,452 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 13:58:07,566 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:58:07,679 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 13:58:07,679 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 13:58:07,680 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 13:58:07,680 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 13:58:07,680 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 13:58:07,874 - engine_logger:INFO - Engine instantiated in MP: PredictionEngine
2020-10-28 14:00:39,837 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 14:00:39,837 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 14:00:39,837 - engine_logger:INFO - logger info level msg 
2020-10-28 14:00:39,837 - engine_logger:WARNING - logger warn level msg 
2020-10-28 14:00:39,837 - engine_logger:ERROR - logger error level msg 
2020-10-28 14:00:39,837 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 14:00:39,837 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 14:00:39,837 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 14:00:39,839 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 14:00:39,862 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:00:39,862 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 14:00:39,862 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 14:00:39,863 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 14:00:39,863 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 14:00:39,863 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 14:00:39,885 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:00:39,907 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:00:39,907 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 14:00:39,907 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 14:00:39,907 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 14:00:39,908 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 14:00:40,014 - engine_logger:INFO - Engine instantiated in MP: PredictionEngine
2020-10-28 14:00:40,915 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 14:01:14,919 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 14:01:14,920 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 14:01:14,920 - engine_logger:INFO - logger info level msg 
2020-10-28 14:01:14,920 - engine_logger:WARNING - logger warn level msg 
2020-10-28 14:01:14,920 - engine_logger:ERROR - logger error level msg 
2020-10-28 14:01:14,921 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 14:01:14,921 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 14:01:14,921 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 14:01:14,924 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 14:01:15,036 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:01:15,037 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 14:01:15,037 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 14:01:15,037 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 14:01:15,037 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 14:01:15,037 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 14:01:15,149 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:01:15,261 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:01:15,262 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 14:01:15,262 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 14:01:15,262 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 14:01:15,263 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 14:01:15,455 - engine_logger:INFO - Engine instantiated in MP: PredictionEngine
2020-10-28 14:01:16,290 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 14:02:23,441 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 14:02:23,441 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 14:02:23,441 - engine_logger:INFO - logger info level msg 
2020-10-28 14:02:23,442 - engine_logger:WARNING - logger warn level msg 
2020-10-28 14:02:23,442 - engine_logger:ERROR - logger error level msg 
2020-10-28 14:02:23,442 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 14:02:23,442 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 14:02:23,442 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 14:02:23,445 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 14:02:23,558 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:02:23,558 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 14:02:23,558 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 14:02:23,559 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 14:02:23,559 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 14:02:23,559 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 14:02:23,671 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:02:23,786 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:02:23,786 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 14:02:23,787 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 14:02:23,787 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 14:02:23,787 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 14:02:23,978 - engine_logger:INFO - Engine instantiated in MP: PredictionEngine
2020-10-28 14:02:24,826 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 14:02:45,417 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 14:02:45,417 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 14:02:45,417 - engine_logger:INFO - logger info level msg 
2020-10-28 14:02:45,418 - engine_logger:WARNING - logger warn level msg 
2020-10-28 14:02:45,418 - engine_logger:ERROR - logger error level msg 
2020-10-28 14:02:45,418 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 14:02:45,418 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 14:02:45,418 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 14:02:45,421 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 14:02:45,534 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:02:45,534 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 14:02:45,535 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 14:02:45,535 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 14:02:45,535 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 14:02:45,535 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 14:02:45,648 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:02:45,766 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:02:45,766 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 14:02:45,767 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 14:02:45,767 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 14:02:45,767 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 14:02:45,965 - engine_logger:INFO - Engine instantiated in MP: PredictionEngine
2020-10-28 14:02:46,819 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 14:03:22,370 - engine_logger:INFO - Getting MNIST data.... 
2020-10-28 14:38:04,992 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 14:38:04,993 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 14:38:04,993 - engine_logger:INFO - logger info level msg 
2020-10-28 14:38:04,993 - engine_logger:WARNING - logger warn level msg 
2020-10-28 14:38:04,993 - engine_logger:ERROR - logger error level msg 
2020-10-28 14:38:04,993 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 14:38:04,993 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 14:38:04,993 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 14:38:04,994 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 14:38:05,018 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:38:05,018 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 14:38:05,018 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 14:38:05,019 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 14:38:05,019 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 14:38:05,019 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 14:38:05,041 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:38:05,060 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:38:05,060 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 14:38:05,061 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 14:38:05,061 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 14:38:05,061 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 14:38:05,160 - engine_logger:INFO - Engine instantiated in MP: PredictionEngine
2020-10-28 14:38:05,992 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 14:39:08,627 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 14:39:08,627 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 14:39:08,627 - engine_logger:INFO - logger info level msg 
2020-10-28 14:39:08,627 - engine_logger:WARNING - logger warn level msg 
2020-10-28 14:39:08,627 - engine_logger:ERROR - logger error level msg 
2020-10-28 14:39:08,627 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 14:39:08,627 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 14:39:08,627 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 14:39:08,629 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 14:39:08,653 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:39:08,653 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 14:39:08,653 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 14:39:08,653 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 14:39:08,653 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 14:39:08,653 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 14:39:08,677 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:39:08,700 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:39:08,700 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 14:39:08,700 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 14:39:08,700 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 14:39:08,700 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 14:39:08,812 - engine_logger:INFO - Engine instantiated in MP: PredictionEngine
2020-10-28 14:39:09,708 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 14:42:28,312 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 14:42:28,313 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 14:42:28,313 - engine_logger:INFO - logger info level msg 
2020-10-28 14:42:28,313 - engine_logger:WARNING - logger warn level msg 
2020-10-28 14:42:28,313 - engine_logger:ERROR - logger error level msg 
2020-10-28 14:42:28,313 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 14:42:28,313 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 14:42:28,313 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 14:42:28,314 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 14:42:28,339 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:42:28,339 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 14:42:28,339 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 14:42:28,339 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 14:42:28,339 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 14:42:28,339 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 14:42:28,360 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:42:28,379 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:42:28,379 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 14:42:28,380 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 14:42:28,380 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 14:42:28,380 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 14:42:28,478 - engine_logger:INFO - Engine instantiated in MP: PredictionEngine
2020-10-28 14:42:29,323 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 14:44:02,390 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 14:44:02,390 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 14:44:02,390 - engine_logger:INFO - logger info level msg 
2020-10-28 14:44:02,390 - engine_logger:WARNING - logger warn level msg 
2020-10-28 14:44:02,391 - engine_logger:ERROR - logger error level msg 
2020-10-28 14:44:02,391 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 14:44:02,391 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 14:44:02,391 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 14:44:02,392 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 14:44:02,416 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:44:02,416 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 14:44:02,416 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 14:44:02,416 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 14:44:02,416 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 14:44:02,416 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 14:44:02,439 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:44:02,462 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:44:02,462 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 14:44:02,462 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 14:44:02,462 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 14:44:02,462 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 14:44:02,575 - engine_logger:INFO - Engine instantiated in MP: PredictionEngine
2020-10-28 14:44:03,552 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 14:44:22,622 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 14:44:22,622 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 14:44:22,622 - engine_logger:INFO - logger info level msg 
2020-10-28 14:44:22,622 - engine_logger:WARNING - logger warn level msg 
2020-10-28 14:44:22,622 - engine_logger:ERROR - logger error level msg 
2020-10-28 14:44:22,622 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 14:44:22,622 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 14:44:22,622 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 14:44:22,623 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 14:44:22,648 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 12, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:44:22,648 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 14:44:22,648 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 14:44:22,648 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 14:44:22,648 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 14:44:22,648 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 14:44:22,671 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 12, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:44:22,694 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 12, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:44:22,694 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 14:44:22,694 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 14:44:22,694 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 14:44:22,694 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 12, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 14:44:22,804 - engine_logger:INFO - Engine instantiated in MP: PredictionEngine
2020-10-28 14:44:23,788 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 14:44:31,916 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 14:44:31,917 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 14:44:31,917 - engine_logger:INFO - logger info level msg 
2020-10-28 14:44:31,917 - engine_logger:WARNING - logger warn level msg 
2020-10-28 14:44:31,917 - engine_logger:ERROR - logger error level msg 
2020-10-28 14:44:31,917 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 14:44:31,917 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 14:44:31,917 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 14:44:31,918 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 14:44:31,943 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:44:31,943 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 14:44:31,943 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 14:44:31,943 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 14:44:31,943 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 14:44:31,943 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 14:44:31,966 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:44:31,989 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:44:31,989 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 14:44:31,989 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 14:44:31,990 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 14:44:31,990 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 14:44:32,102 - engine_logger:INFO - Engine instantiated in MP: PredictionEngine
2020-10-28 14:44:33,084 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 14:46:51,334 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 14:46:51,334 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 14:46:51,334 - engine_logger:INFO - logger info level msg 
2020-10-28 14:46:51,334 - engine_logger:WARNING - logger warn level msg 
2020-10-28 14:46:51,334 - engine_logger:ERROR - logger error level msg 
2020-10-28 14:46:51,334 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 14:46:51,334 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 14:46:51,334 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 14:46:51,335 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 14:46:51,360 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 1, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:46:51,360 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 14:46:51,360 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 14:46:51,360 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 14:46:51,360 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 14:46:51,360 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 14:46:51,383 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 1, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:46:51,406 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 1, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:46:51,406 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 14:46:51,406 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 14:46:51,406 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 14:46:51,406 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 1, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 14:46:51,519 - engine_logger:INFO - Engine instantiated in MP: PredictionEngine
2020-10-28 14:46:52,454 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 14:47:03,614 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 14:47:03,614 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 14:47:03,614 - engine_logger:INFO - logger info level msg 
2020-10-28 14:47:03,614 - engine_logger:WARNING - logger warn level msg 
2020-10-28 14:47:03,614 - engine_logger:ERROR - logger error level msg 
2020-10-28 14:47:03,614 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 14:47:03,615 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 14:47:03,615 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 14:47:03,616 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 14:47:03,641 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:47:03,641 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 14:47:03,641 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 14:47:03,641 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 14:47:03,641 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 14:47:03,641 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 14:47:03,665 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:47:03,689 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:47:03,689 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 14:47:03,689 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 14:47:03,689 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 14:47:03,689 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 14:47:03,801 - engine_logger:INFO - Engine instantiated in MP: PredictionEngine
2020-10-28 14:47:04,717 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 14:49:10,458 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 14:49:10,459 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 14:49:10,459 - engine_logger:INFO - logger info level msg 
2020-10-28 14:49:10,459 - engine_logger:WARNING - logger warn level msg 
2020-10-28 14:49:10,459 - engine_logger:ERROR - logger error level msg 
2020-10-28 14:49:10,459 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 14:49:10,459 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 14:49:10,459 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 14:49:10,460 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 14:49:10,484 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:49:10,485 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 14:49:10,485 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 14:49:10,485 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 14:49:10,485 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 14:49:10,485 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 14:49:10,508 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:49:10,530 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:49:10,531 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 14:49:10,531 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 14:49:10,531 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 14:49:10,531 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 150, 'width': 150}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 14:49:10,643 - engine_logger:INFO - Engine instantiated in MP: PredictionEngine
2020-10-28 14:49:11,475 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 14:56:53,856 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 14:56:53,856 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 14:56:53,856 - engine_logger:INFO - logger info level msg 
2020-10-28 14:56:53,856 - engine_logger:WARNING - logger warn level msg 
2020-10-28 14:56:53,856 - engine_logger:ERROR - logger error level msg 
2020-10-28 14:56:53,856 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 14:56:53,856 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 14:56:53,856 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 14:56:53,857 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 14:56:53,882 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 32, 'width': 32}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:56:53,882 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 14:56:53,882 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 14:56:53,882 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 14:56:53,882 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 14:56:53,882 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 14:56:53,905 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 32, 'width': 32}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:56:53,928 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 32, 'width': 32}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:56:53,929 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 14:56:53,929 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 14:56:53,929 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 14:56:53,929 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 32, 'width': 32}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 14:57:53,845 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 14:57:53,845 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 14:57:53,846 - engine_logger:INFO - logger info level msg 
2020-10-28 14:57:53,846 - engine_logger:WARNING - logger warn level msg 
2020-10-28 14:57:53,846 - engine_logger:ERROR - logger error level msg 
2020-10-28 14:57:53,846 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 14:57:53,846 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 14:57:53,846 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 14:57:53,847 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 14:57:53,872 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 30, 'width': 30}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:57:53,872 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 14:57:53,872 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 14:57:53,872 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 14:57:53,872 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 14:57:53,872 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 14:57:53,895 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 30, 'width': 30}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:57:53,921 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 30, 'width': 30}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:57:53,921 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 14:57:53,921 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 14:57:53,921 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 14:57:53,921 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'CenterCrop', 'height': 30, 'width': 30}, {'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 14:58:02,408 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 14:58:02,408 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 14:58:02,408 - engine_logger:INFO - logger info level msg 
2020-10-28 14:58:02,409 - engine_logger:WARNING - logger warn level msg 
2020-10-28 14:58:02,409 - engine_logger:ERROR - logger error level msg 
2020-10-28 14:58:02,409 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 14:58:02,409 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 14:58:02,409 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 14:58:02,410 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 14:58:02,436 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:58:02,436 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 14:58:02,436 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 14:58:02,436 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 14:58:02,436 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 14:58:02,436 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 14:58:02,460 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:58:02,484 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:58:02,484 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 14:58:02,484 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 14:58:02,484 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 14:58:02,484 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [None, None, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 14:58:02,566 - engine_logger:INFO - Engine instantiated in MP: PredictionEngine
2020-10-28 14:58:03,386 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 14:58:23,338 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 14:58:23,338 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 14:58:23,338 - engine_logger:INFO - logger info level msg 
2020-10-28 14:58:23,338 - engine_logger:WARNING - logger warn level msg 
2020-10-28 14:58:23,338 - engine_logger:ERROR - logger error level msg 
2020-10-28 14:58:23,338 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 14:58:23,338 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 14:58:23,338 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 14:58:23,339 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 14:58:23,364 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:58:23,364 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 14:58:23,364 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 14:58:23,364 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 14:58:23,364 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 14:58:23,364 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 14:58:23,386 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:58:23,409 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:58:23,409 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 14:58:23,409 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 14:58:23,409 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 14:58:23,409 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 14:59:35,893 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 14:59:35,893 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 14:59:35,893 - engine_logger:INFO - logger info level msg 
2020-10-28 14:59:35,893 - engine_logger:WARNING - logger warn level msg 
2020-10-28 14:59:35,893 - engine_logger:ERROR - logger error level msg 
2020-10-28 14:59:35,893 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 14:59:35,893 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 14:59:35,893 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 14:59:35,895 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 14:59:35,919 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:59:35,919 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 14:59:35,919 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 14:59:35,919 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 14:59:35,919 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 14:59:35,920 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 14:59:35,943 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:59:35,965 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 14:59:35,965 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 14:59:35,966 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 14:59:35,966 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 14:59:35,966 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 15:00:26,770 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 15:00:26,770 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 15:00:26,770 - engine_logger:INFO - logger info level msg 
2020-10-28 15:00:26,770 - engine_logger:WARNING - logger warn level msg 
2020-10-28 15:00:26,770 - engine_logger:ERROR - logger error level msg 
2020-10-28 15:00:26,770 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 15:00:26,770 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 15:00:26,770 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 15:00:26,771 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 15:00:26,796 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 15:00:26,796 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 15:00:26,796 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 15:00:26,796 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 15:00:26,796 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 15:00:26,796 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 15:00:26,818 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 15:00:26,841 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 15:00:26,841 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 15:00:26,841 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 15:00:26,841 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 15:00:26,841 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 15:04:02,279 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 15:04:02,279 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 15:04:02,279 - engine_logger:INFO - logger info level msg 
2020-10-28 15:04:02,280 - engine_logger:WARNING - logger warn level msg 
2020-10-28 15:04:02,280 - engine_logger:ERROR - logger error level msg 
2020-10-28 15:04:02,280 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 15:04:02,280 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 15:04:02,280 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 15:04:02,284 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 15:04:02,395 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 15:04:02,395 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 15:04:02,395 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 15:04:02,396 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 15:04:02,396 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 15:04:02,396 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 15:04:02,507 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 15:04:02,618 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 15:04:02,618 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 15:04:02,618 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 15:04:02,619 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 15:04:02,619 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'Rescaling', 'scale': '1.0/255'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 15:04:57,871 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 15:04:57,871 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 15:04:57,872 - engine_logger:INFO - logger info level msg 
2020-10-28 15:04:57,872 - engine_logger:WARNING - logger warn level msg 
2020-10-28 15:04:57,872 - engine_logger:ERROR - logger error level msg 
2020-10-28 15:04:57,872 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 15:04:57,872 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 15:04:57,872 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 15:04:57,873 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 15:04:57,897 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'Rescaling', 'scale': 0.00392156862745098}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 15:04:57,897 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 15:04:57,898 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 15:04:57,898 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 15:04:57,898 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 15:04:57,898 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 15:04:57,921 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'Rescaling', 'scale': 0.00392156862745098}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 15:04:57,943 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'Rescaling', 'scale': 0.00392156862745098}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 15:04:57,944 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 15:04:57,944 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 15:04:57,944 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 15:04:57,944 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'Rescaling', 'scale': 0.00392156862745098}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 15:06:07,297 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 15:06:07,297 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 15:06:07,297 - engine_logger:INFO - logger info level msg 
2020-10-28 15:06:07,297 - engine_logger:WARNING - logger warn level msg 
2020-10-28 15:06:07,297 - engine_logger:ERROR - logger error level msg 
2020-10-28 15:06:07,297 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 15:06:07,297 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 15:06:07,297 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 15:06:07,299 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 15:06:07,323 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'Rescaling', 'scale': 'asdf'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 15:06:07,323 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 15:06:07,323 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 15:06:07,324 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 15:06:07,324 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 15:06:07,324 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 15:06:07,346 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'Rescaling', 'scale': 'asdf'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 15:06:07,369 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'Rescaling', 'scale': 'asdf'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 15:06:07,369 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 15:06:07,369 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 15:06:07,369 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 15:06:07,370 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'Rescaling', 'scale': 'asdf'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 32, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 15:15:08,683 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 15:15:08,683 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 15:15:08,683 - engine_logger:INFO - logger info level msg 
2020-10-28 15:15:08,683 - engine_logger:WARNING - logger warn level msg 
2020-10-28 15:15:08,684 - engine_logger:ERROR - logger error level msg 
2020-10-28 15:15:08,684 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 15:15:08,684 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 15:15:08,684 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 15:15:08,685 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 15:15:08,709 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'Rescaling', 'scale': 'asdf'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 15:15:08,709 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 15:15:08,709 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 15:15:08,710 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 15:15:08,710 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 15:15:08,710 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 15:15:08,732 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'Rescaling', 'scale': 'asdf'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 15:15:08,755 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'Rescaling', 'scale': 'asdf'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 15:15:08,755 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 15:15:08,755 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 15:15:08,755 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 15:15:08,755 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'Rescaling', 'scale': 'asdf'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [3, 3], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 15:15:38,543 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 15:15:38,543 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 15:15:38,543 - engine_logger:INFO - logger info level msg 
2020-10-28 15:15:38,543 - engine_logger:WARNING - logger warn level msg 
2020-10-28 15:15:38,544 - engine_logger:ERROR - logger error level msg 
2020-10-28 15:15:38,544 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 15:15:38,544 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 15:15:38,544 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 15:15:38,545 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 15:15:38,569 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'Rescaling', 'scale': 'asdf'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 15:15:38,569 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 15:15:38,569 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 15:15:38,569 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 15:15:38,570 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 15:15:38,570 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 15:15:38,592 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'Rescaling', 'scale': 'asdf'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 15:15:38,615 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'Rescaling', 'scale': 'asdf'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 15:15:38,615 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 15:15:38,615 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 15:15:38,616 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 15:15:38,616 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'Rescaling', 'scale': 'asdf'}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 15:16:59,834 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 15:16:59,834 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 15:16:59,834 - engine_logger:INFO - logger info level msg 
2020-10-28 15:16:59,835 - engine_logger:WARNING - logger warn level msg 
2020-10-28 15:16:59,835 - engine_logger:ERROR - logger error level msg 
2020-10-28 15:16:59,835 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 15:16:59,835 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 15:16:59,835 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 15:16:59,836 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 15:16:59,860 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'Rescaling', 'scale': 0.00392156862745098}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 15:16:59,860 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 15:16:59,860 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 15:16:59,860 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 15:16:59,861 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 15:16:59,861 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 15:16:59,883 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'Rescaling', 'scale': 0.00392156862745098}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 15:16:59,906 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'Rescaling', 'scale': 0.00392156862745098}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 15:16:59,906 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 15:16:59,906 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 15:16:59,906 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 15:16:59,906 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'Rescaling', 'scale': 0.00392156862745098}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 21:54:38,687 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 21:54:38,687 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 21:54:38,688 - engine_logger:INFO - logger info level msg 
2020-10-28 21:54:38,688 - engine_logger:WARNING - logger warn level msg 
2020-10-28 21:54:38,688 - engine_logger:ERROR - logger error level msg 
2020-10-28 21:54:38,688 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 21:54:38,688 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 21:54:38,688 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 21:54:38,689 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 21:54:38,714 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'Rescaling', 'scale': 0.00392156862745098}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 21:54:38,714 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 21:54:38,714 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 21:54:38,714 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 21:54:38,714 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 21:54:38,714 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 21:54:38,737 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'Rescaling', 'scale': 0.00392156862745098}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 21:54:38,761 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'Rescaling', 'scale': 0.00392156862745098}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 21:54:38,762 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 21:54:38,762 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 21:54:38,762 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 21:54:38,762 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'Rescaling', 'scale': 0.00392156862745098}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [3, 3]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 21:55:03,925 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 21:55:03,925 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 21:55:03,925 - engine_logger:INFO - logger info level msg 
2020-10-28 21:55:03,925 - engine_logger:WARNING - logger warn level msg 
2020-10-28 21:55:03,925 - engine_logger:ERROR - logger error level msg 
2020-10-28 21:55:03,925 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 21:55:03,926 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 21:55:03,926 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 21:55:03,927 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 21:55:03,951 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'Rescaling', 'scale': 0.00392156862745098}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [2, 2]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [2, 2]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 21:55:03,952 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 21:55:03,952 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 21:55:03,952 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 21:55:03,952 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 21:55:03,952 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 21:55:03,975 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'Rescaling', 'scale': 0.00392156862745098}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [2, 2]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [2, 2]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 21:55:03,998 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'Rescaling', 'scale': 0.00392156862745098}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [2, 2]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [2, 2]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 21:55:03,998 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 21:55:03,998 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 21:55:03,999 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 21:55:03,999 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'Rescaling', 'scale': 0.00392156862745098}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [2, 2]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [2, 2]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 21:55:04,091 - engine_logger:INFO - Engine instantiated in MP: PredictionEngine
2020-10-28 21:55:05,063 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 21:56:38,750 - engine_logger:INFO - Initated logger in MainProgram 
2020-10-28 21:56:38,750 - engine_logger:DEBUG - logger debug level msg 
2020-10-28 21:56:38,750 - engine_logger:INFO - logger info level msg 
2020-10-28 21:56:38,750 - engine_logger:WARNING - logger warn level msg 
2020-10-28 21:56:38,750 - engine_logger:ERROR - logger error level msg 
2020-10-28 21:56:38,750 - engine_logger:CRITICAL - logger critical level msg 
2020-10-28 21:56:38,750 - engine_logger:INFO - Parsing args in ArgParser
2020-10-28 21:56:38,750 - engine_logger:INFO - ArgParser - parsing commandline args... 
2020-10-28 21:56:38,751 - engine_logger:INFO - Args from cmdline: Namespace(configs_file='configs.yaml', mode='cifar10')
2020-10-28 21:56:38,781 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'Rescaling', 'scale': 0.00392156862745098}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [2, 2]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [2, 2]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 21:56:38,781 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 21:56:38,781 - engine_logger:INFO - Attribute tuner has been set to False
2020-10-28 21:56:38,781 - engine_logger:WARNING - Config file contains an attribute that is not in this class's attribute and therefore has not been set (k,v): engine, PredictionEngine
2020-10-28 21:56:38,781 - engine_logger:INFO - Attribute tuner has been set to False, overriding default values if any.
2020-10-28 21:56:38,782 - engine_logger:INFO - Done init in MainProgram.
2020-10-28 21:56:38,804 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'Rescaling', 'scale': 0.00392156862745098}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [2, 2]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [2, 2]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 21:56:38,827 - engine_logger:INFO - Loaded yaml configs: {'template': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Dense', 'units': 128, 'activation': 'relu', 'metrics': [], 'loss': None}]}}, 'default': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}, {'layer_type': 'Dense', 'units': 128, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}, 'tuner': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'preprocessor': [], 'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': 'relu'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'cifar10': {'main_program': {'engine': 'PredictionEngine', 'tuner': False}, 'architecture': {'preprocessor': [{'layer_type': 'Rescaling', 'scale': 0.00392156862745098}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [2, 2]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [2, 2]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}}, 'tuner_2': {'main_program': {'engine': 'TunerEngine', 'tuner': True}, 'architecture': {'inputs': {'layer_type': 'Input', 'shape': [28, 28]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Flatten'}, {'layer_type': 'Dense', 'units': {'type': 'hp.Int', 'tunable_kwargs': {'name': 'units', 'min_value': 32, 'max_value': 1000, 'step': 32}}, 'activation': {'values': ['relu', 'softmax', 'sigmoid', 'selu']}}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'mnist', 'kwargs': {'path': 'mnist.npz'}}}}}
2020-10-28 21:56:38,828 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 21:56:38,828 - engine_logger:INFO - Instantiating DefaultArch
2020-10-28 21:56:38,828 - engine_logger:INFO - Instantiating PredictionEngine
2020-10-28 21:56:38,828 - engine_logger:INFO - Layers in _buildmodel: {'preprocessor': [{'layer_type': 'Rescaling', 'scale': 0.00392156862745098}], 'inputs': {'layer_type': 'Input', 'shape': [32, 32, 3]}, 'outputs': {'layer_type': 'Dense', 'units': 10, 'activation': 'softmax'}, 'layers': [{'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [2, 2]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'MaxPooling2D', 'pool_size': [2, 2]}, {'layer_type': 'Conv2D', 'filters': 8, 'kernel_size': [4, 4], 'activation': 'relu'}, {'layer_type': 'GlobalAveragePooling2D'}], 'compile': {'loss': 'sparse_categorical_crossentropy', 'metrics': ['accuracy', 'sparse_categorical_crossentropy']}, 'dataset': {'datasource': 'KerasApiDao', 'type': 'cifar10', 'kwargs': {}}}
2020-10-28 21:56:38,929 - engine_logger:INFO - Engine instantiated in MP: PredictionEngine
2020-10-28 21:56:39,941 - engine_logger:INFO - got data from keras: dict_keys(['x_train', 'y_train', 'x_test', 'y_test'])
2020-10-28 21:56:49,819 - engine_logger:INFO - Finished training model. <tensorflow.python.keras.callbacks.History object at 0x7f4f585db340>
